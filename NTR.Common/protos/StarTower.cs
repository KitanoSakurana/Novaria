// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: StarTower.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from StarTower.proto</summary>
  public static partial class StarTowerReflection {

    #region Descriptor
    /// <summary>File descriptor for StarTower.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StarTowerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9TdGFyVG93ZXIucHJvdG8i2QQKCVN0YXJUb3dlchIKCgJpZBgBIAEoBRIM",
            "CgRuYW1lGAIgASgJEgwKBGRlc2MYAyABKAkSEAoIZ3JvdXBfaWQYBCABKAUS",
            "FgoOcHJlX2NvbmRpdGlvbnMYBSABKAkSIAoYcHJldmlld19tb25zdGVyX2dy",
            "b3VwX2lkGAYgASgFEhIKCmRpZmZpY3VsdHkYByABKAUSGAoQdmFsdWVfZGlm",
            "ZmljdWx0eRgIIAEoBRIRCglyZWNvbW1lbmQYCSABKAUSEwoLY3VycmVuY3lf",
            "aWQYCiABKAUSFwoPc3RhZ2VfZ3JvdXBfaWRzGAsgAygFEhEKCWZsb29yX251",
            "bRgMIAMoBRIZChF0ZWFtX2V4cF9ncm91cF9pZBgNIAEoBRINCgVlX2VfdBgO",
            "IAMoBRIRCglub3RfZV9lX3QYDyADKAUSDwoHZXBpc29kZRgQIAEoCRINCgVp",
            "bWFnZRgRIAEoCRIQCghuX3BfY19pZBgSIAEoBRIWCg5yZXdhcmRfcHJldmll",
            "dxgTIAEoCRIQCghzaG9wX25wYxgUIAEoBRIWCg5zdGFuZF9zaG9wX25wYxgV",
            "IAEoBRITCgt1cGdyYWRlX25wYxgWIAEoBRISCgpyZXNxdWVfbnBjGBcgASgF",
            "EhIKCmRhbmdlcl9ucGMYGCABKAUSEgoKaG9ycm9yX25wYxgZIAEoBRIYChBk",
            "YW5nZXJfZW5kX2V2ZW50GBogASgFEhgKEGhvcnJvcl9lbmRfZXZlbnQYGyAB",
            "KAUSIAoYZGVzdHJ1Y3RpYmxlX29iamVjdF90eXBlGBwgASgFQg6qAgtOb3Zh",
            "LkNsaWVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.StarTower), global::Nova.Client.StarTower.Parser, new[]{ "Id", "Name", "Desc", "GroupId", "PreConditions", "PreviewMonsterGroupId", "Difficulty", "ValueDifficulty", "Recommend", "CurrencyId", "StageGroupIds", "FloorNum", "TeamExpGroupId", "EET", "NotEET", "Episode", "Image", "NPCId", "RewardPreview", "ShopNpc", "StandShopNpc", "UpgradeNpc", "ResqueNpc", "DangerNpc", "HorrorNpc", "DangerEndEvent", "HorrorEndEvent", "DestructibleObjectType" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StarTower : pb::IMessage<StarTower>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StarTower> _parser = new pb::MessageParser<StarTower>(() => new StarTower());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StarTower> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.StarTowerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StarTower() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StarTower(StarTower other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      desc_ = other.desc_;
      groupId_ = other.groupId_;
      preConditions_ = other.preConditions_;
      previewMonsterGroupId_ = other.previewMonsterGroupId_;
      difficulty_ = other.difficulty_;
      valueDifficulty_ = other.valueDifficulty_;
      recommend_ = other.recommend_;
      currencyId_ = other.currencyId_;
      stageGroupIds_ = other.stageGroupIds_.Clone();
      floorNum_ = other.floorNum_.Clone();
      teamExpGroupId_ = other.teamExpGroupId_;
      eET_ = other.eET_.Clone();
      notEET_ = other.notEET_.Clone();
      episode_ = other.episode_;
      image_ = other.image_;
      nPCId_ = other.nPCId_;
      rewardPreview_ = other.rewardPreview_;
      shopNpc_ = other.shopNpc_;
      standShopNpc_ = other.standShopNpc_;
      upgradeNpc_ = other.upgradeNpc_;
      resqueNpc_ = other.resqueNpc_;
      dangerNpc_ = other.dangerNpc_;
      horrorNpc_ = other.horrorNpc_;
      dangerEndEvent_ = other.dangerEndEvent_;
      horrorEndEvent_ = other.horrorEndEvent_;
      destructibleObjectType_ = other.destructibleObjectType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StarTower Clone() {
      return new StarTower(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 4;
    private int groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "pre_conditions" field.</summary>
    public const int PreConditionsFieldNumber = 5;
    private string preConditions_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PreConditions {
      get { return preConditions_; }
      set {
        preConditions_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "preview_monster_group_id" field.</summary>
    public const int PreviewMonsterGroupIdFieldNumber = 6;
    private int previewMonsterGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PreviewMonsterGroupId {
      get { return previewMonsterGroupId_; }
      set {
        previewMonsterGroupId_ = value;
      }
    }

    /// <summary>Field number for the "difficulty" field.</summary>
    public const int DifficultyFieldNumber = 7;
    private int difficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Difficulty {
      get { return difficulty_; }
      set {
        difficulty_ = value;
      }
    }

    /// <summary>Field number for the "value_difficulty" field.</summary>
    public const int ValueDifficultyFieldNumber = 8;
    private int valueDifficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ValueDifficulty {
      get { return valueDifficulty_; }
      set {
        valueDifficulty_ = value;
      }
    }

    /// <summary>Field number for the "recommend" field.</summary>
    public const int RecommendFieldNumber = 9;
    private int recommend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Recommend {
      get { return recommend_; }
      set {
        recommend_ = value;
      }
    }

    /// <summary>Field number for the "currency_id" field.</summary>
    public const int CurrencyIdFieldNumber = 10;
    private int currencyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrencyId {
      get { return currencyId_; }
      set {
        currencyId_ = value;
      }
    }

    /// <summary>Field number for the "stage_group_ids" field.</summary>
    public const int StageGroupIdsFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_stageGroupIds_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> stageGroupIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> StageGroupIds {
      get { return stageGroupIds_; }
    }

    /// <summary>Field number for the "floor_num" field.</summary>
    public const int FloorNumFieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_floorNum_codec
        = pb::FieldCodec.ForInt32(98);
    private readonly pbc::RepeatedField<int> floorNum_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> FloorNum {
      get { return floorNum_; }
    }

    /// <summary>Field number for the "team_exp_group_id" field.</summary>
    public const int TeamExpGroupIdFieldNumber = 13;
    private int teamExpGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TeamExpGroupId {
      get { return teamExpGroupId_; }
      set {
        teamExpGroupId_ = value;
      }
    }

    /// <summary>Field number for the "e_e_t" field.</summary>
    public const int EETFieldNumber = 14;
    private static readonly pb::FieldCodec<int> _repeated_eET_codec
        = pb::FieldCodec.ForInt32(114);
    private readonly pbc::RepeatedField<int> eET_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> EET {
      get { return eET_; }
    }

    /// <summary>Field number for the "not_e_e_t" field.</summary>
    public const int NotEETFieldNumber = 15;
    private static readonly pb::FieldCodec<int> _repeated_notEET_codec
        = pb::FieldCodec.ForInt32(122);
    private readonly pbc::RepeatedField<int> notEET_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> NotEET {
      get { return notEET_; }
    }

    /// <summary>Field number for the "episode" field.</summary>
    public const int EpisodeFieldNumber = 16;
    private string episode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Episode {
      get { return episode_; }
      set {
        episode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 17;
    private string image_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "n_p_c_id" field.</summary>
    public const int NPCIdFieldNumber = 18;
    private int nPCId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NPCId {
      get { return nPCId_; }
      set {
        nPCId_ = value;
      }
    }

    /// <summary>Field number for the "reward_preview" field.</summary>
    public const int RewardPreviewFieldNumber = 19;
    private string rewardPreview_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RewardPreview {
      get { return rewardPreview_; }
      set {
        rewardPreview_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shop_npc" field.</summary>
    public const int ShopNpcFieldNumber = 20;
    private int shopNpc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShopNpc {
      get { return shopNpc_; }
      set {
        shopNpc_ = value;
      }
    }

    /// <summary>Field number for the "stand_shop_npc" field.</summary>
    public const int StandShopNpcFieldNumber = 21;
    private int standShopNpc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StandShopNpc {
      get { return standShopNpc_; }
      set {
        standShopNpc_ = value;
      }
    }

    /// <summary>Field number for the "upgrade_npc" field.</summary>
    public const int UpgradeNpcFieldNumber = 22;
    private int upgradeNpc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UpgradeNpc {
      get { return upgradeNpc_; }
      set {
        upgradeNpc_ = value;
      }
    }

    /// <summary>Field number for the "resque_npc" field.</summary>
    public const int ResqueNpcFieldNumber = 23;
    private int resqueNpc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ResqueNpc {
      get { return resqueNpc_; }
      set {
        resqueNpc_ = value;
      }
    }

    /// <summary>Field number for the "danger_npc" field.</summary>
    public const int DangerNpcFieldNumber = 24;
    private int dangerNpc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DangerNpc {
      get { return dangerNpc_; }
      set {
        dangerNpc_ = value;
      }
    }

    /// <summary>Field number for the "horror_npc" field.</summary>
    public const int HorrorNpcFieldNumber = 25;
    private int horrorNpc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HorrorNpc {
      get { return horrorNpc_; }
      set {
        horrorNpc_ = value;
      }
    }

    /// <summary>Field number for the "danger_end_event" field.</summary>
    public const int DangerEndEventFieldNumber = 26;
    private int dangerEndEvent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DangerEndEvent {
      get { return dangerEndEvent_; }
      set {
        dangerEndEvent_ = value;
      }
    }

    /// <summary>Field number for the "horror_end_event" field.</summary>
    public const int HorrorEndEventFieldNumber = 27;
    private int horrorEndEvent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HorrorEndEvent {
      get { return horrorEndEvent_; }
      set {
        horrorEndEvent_ = value;
      }
    }

    /// <summary>Field number for the "destructible_object_type" field.</summary>
    public const int DestructibleObjectTypeFieldNumber = 28;
    private int destructibleObjectType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DestructibleObjectType {
      get { return destructibleObjectType_; }
      set {
        destructibleObjectType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StarTower);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StarTower other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if (GroupId != other.GroupId) return false;
      if (PreConditions != other.PreConditions) return false;
      if (PreviewMonsterGroupId != other.PreviewMonsterGroupId) return false;
      if (Difficulty != other.Difficulty) return false;
      if (ValueDifficulty != other.ValueDifficulty) return false;
      if (Recommend != other.Recommend) return false;
      if (CurrencyId != other.CurrencyId) return false;
      if(!stageGroupIds_.Equals(other.stageGroupIds_)) return false;
      if(!floorNum_.Equals(other.floorNum_)) return false;
      if (TeamExpGroupId != other.TeamExpGroupId) return false;
      if(!eET_.Equals(other.eET_)) return false;
      if(!notEET_.Equals(other.notEET_)) return false;
      if (Episode != other.Episode) return false;
      if (Image != other.Image) return false;
      if (NPCId != other.NPCId) return false;
      if (RewardPreview != other.RewardPreview) return false;
      if (ShopNpc != other.ShopNpc) return false;
      if (StandShopNpc != other.StandShopNpc) return false;
      if (UpgradeNpc != other.UpgradeNpc) return false;
      if (ResqueNpc != other.ResqueNpc) return false;
      if (DangerNpc != other.DangerNpc) return false;
      if (HorrorNpc != other.HorrorNpc) return false;
      if (DangerEndEvent != other.DangerEndEvent) return false;
      if (HorrorEndEvent != other.HorrorEndEvent) return false;
      if (DestructibleObjectType != other.DestructibleObjectType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (PreConditions.Length != 0) hash ^= PreConditions.GetHashCode();
      if (PreviewMonsterGroupId != 0) hash ^= PreviewMonsterGroupId.GetHashCode();
      if (Difficulty != 0) hash ^= Difficulty.GetHashCode();
      if (ValueDifficulty != 0) hash ^= ValueDifficulty.GetHashCode();
      if (Recommend != 0) hash ^= Recommend.GetHashCode();
      if (CurrencyId != 0) hash ^= CurrencyId.GetHashCode();
      hash ^= stageGroupIds_.GetHashCode();
      hash ^= floorNum_.GetHashCode();
      if (TeamExpGroupId != 0) hash ^= TeamExpGroupId.GetHashCode();
      hash ^= eET_.GetHashCode();
      hash ^= notEET_.GetHashCode();
      if (Episode.Length != 0) hash ^= Episode.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (NPCId != 0) hash ^= NPCId.GetHashCode();
      if (RewardPreview.Length != 0) hash ^= RewardPreview.GetHashCode();
      if (ShopNpc != 0) hash ^= ShopNpc.GetHashCode();
      if (StandShopNpc != 0) hash ^= StandShopNpc.GetHashCode();
      if (UpgradeNpc != 0) hash ^= UpgradeNpc.GetHashCode();
      if (ResqueNpc != 0) hash ^= ResqueNpc.GetHashCode();
      if (DangerNpc != 0) hash ^= DangerNpc.GetHashCode();
      if (HorrorNpc != 0) hash ^= HorrorNpc.GetHashCode();
      if (DangerEndEvent != 0) hash ^= DangerEndEvent.GetHashCode();
      if (HorrorEndEvent != 0) hash ^= HorrorEndEvent.GetHashCode();
      if (DestructibleObjectType != 0) hash ^= DestructibleObjectType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (GroupId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GroupId);
      }
      if (PreConditions.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PreConditions);
      }
      if (PreviewMonsterGroupId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PreviewMonsterGroupId);
      }
      if (Difficulty != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Difficulty);
      }
      if (ValueDifficulty != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ValueDifficulty);
      }
      if (Recommend != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Recommend);
      }
      if (CurrencyId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CurrencyId);
      }
      stageGroupIds_.WriteTo(output, _repeated_stageGroupIds_codec);
      floorNum_.WriteTo(output, _repeated_floorNum_codec);
      if (TeamExpGroupId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(TeamExpGroupId);
      }
      eET_.WriteTo(output, _repeated_eET_codec);
      notEET_.WriteTo(output, _repeated_notEET_codec);
      if (Episode.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Episode);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Image);
      }
      if (NPCId != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(NPCId);
      }
      if (RewardPreview.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(RewardPreview);
      }
      if (ShopNpc != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ShopNpc);
      }
      if (StandShopNpc != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(StandShopNpc);
      }
      if (UpgradeNpc != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(UpgradeNpc);
      }
      if (ResqueNpc != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(ResqueNpc);
      }
      if (DangerNpc != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(DangerNpc);
      }
      if (HorrorNpc != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(HorrorNpc);
      }
      if (DangerEndEvent != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(DangerEndEvent);
      }
      if (HorrorEndEvent != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(HorrorEndEvent);
      }
      if (DestructibleObjectType != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(DestructibleObjectType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (GroupId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GroupId);
      }
      if (PreConditions.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PreConditions);
      }
      if (PreviewMonsterGroupId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PreviewMonsterGroupId);
      }
      if (Difficulty != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Difficulty);
      }
      if (ValueDifficulty != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ValueDifficulty);
      }
      if (Recommend != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Recommend);
      }
      if (CurrencyId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CurrencyId);
      }
      stageGroupIds_.WriteTo(ref output, _repeated_stageGroupIds_codec);
      floorNum_.WriteTo(ref output, _repeated_floorNum_codec);
      if (TeamExpGroupId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(TeamExpGroupId);
      }
      eET_.WriteTo(ref output, _repeated_eET_codec);
      notEET_.WriteTo(ref output, _repeated_notEET_codec);
      if (Episode.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Episode);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Image);
      }
      if (NPCId != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(NPCId);
      }
      if (RewardPreview.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(RewardPreview);
      }
      if (ShopNpc != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ShopNpc);
      }
      if (StandShopNpc != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(StandShopNpc);
      }
      if (UpgradeNpc != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(UpgradeNpc);
      }
      if (ResqueNpc != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(ResqueNpc);
      }
      if (DangerNpc != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(DangerNpc);
      }
      if (HorrorNpc != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(HorrorNpc);
      }
      if (DangerEndEvent != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(DangerEndEvent);
      }
      if (HorrorEndEvent != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(HorrorEndEvent);
      }
      if (DestructibleObjectType != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(DestructibleObjectType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
      }
      if (PreConditions.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreConditions);
      }
      if (PreviewMonsterGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PreviewMonsterGroupId);
      }
      if (Difficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Difficulty);
      }
      if (ValueDifficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValueDifficulty);
      }
      if (Recommend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Recommend);
      }
      if (CurrencyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrencyId);
      }
      size += stageGroupIds_.CalculateSize(_repeated_stageGroupIds_codec);
      size += floorNum_.CalculateSize(_repeated_floorNum_codec);
      if (TeamExpGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamExpGroupId);
      }
      size += eET_.CalculateSize(_repeated_eET_codec);
      size += notEET_.CalculateSize(_repeated_notEET_codec);
      if (Episode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Episode);
      }
      if (Image.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      if (NPCId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NPCId);
      }
      if (RewardPreview.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RewardPreview);
      }
      if (ShopNpc != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ShopNpc);
      }
      if (StandShopNpc != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(StandShopNpc);
      }
      if (UpgradeNpc != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UpgradeNpc);
      }
      if (ResqueNpc != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ResqueNpc);
      }
      if (DangerNpc != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DangerNpc);
      }
      if (HorrorNpc != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HorrorNpc);
      }
      if (DangerEndEvent != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DangerEndEvent);
      }
      if (HorrorEndEvent != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HorrorEndEvent);
      }
      if (DestructibleObjectType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DestructibleObjectType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StarTower other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      if (other.PreConditions.Length != 0) {
        PreConditions = other.PreConditions;
      }
      if (other.PreviewMonsterGroupId != 0) {
        PreviewMonsterGroupId = other.PreviewMonsterGroupId;
      }
      if (other.Difficulty != 0) {
        Difficulty = other.Difficulty;
      }
      if (other.ValueDifficulty != 0) {
        ValueDifficulty = other.ValueDifficulty;
      }
      if (other.Recommend != 0) {
        Recommend = other.Recommend;
      }
      if (other.CurrencyId != 0) {
        CurrencyId = other.CurrencyId;
      }
      stageGroupIds_.Add(other.stageGroupIds_);
      floorNum_.Add(other.floorNum_);
      if (other.TeamExpGroupId != 0) {
        TeamExpGroupId = other.TeamExpGroupId;
      }
      eET_.Add(other.eET_);
      notEET_.Add(other.notEET_);
      if (other.Episode.Length != 0) {
        Episode = other.Episode;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      if (other.NPCId != 0) {
        NPCId = other.NPCId;
      }
      if (other.RewardPreview.Length != 0) {
        RewardPreview = other.RewardPreview;
      }
      if (other.ShopNpc != 0) {
        ShopNpc = other.ShopNpc;
      }
      if (other.StandShopNpc != 0) {
        StandShopNpc = other.StandShopNpc;
      }
      if (other.UpgradeNpc != 0) {
        UpgradeNpc = other.UpgradeNpc;
      }
      if (other.ResqueNpc != 0) {
        ResqueNpc = other.ResqueNpc;
      }
      if (other.DangerNpc != 0) {
        DangerNpc = other.DangerNpc;
      }
      if (other.HorrorNpc != 0) {
        HorrorNpc = other.HorrorNpc;
      }
      if (other.DangerEndEvent != 0) {
        DangerEndEvent = other.DangerEndEvent;
      }
      if (other.HorrorEndEvent != 0) {
        HorrorEndEvent = other.HorrorEndEvent;
      }
      if (other.DestructibleObjectType != 0) {
        DestructibleObjectType = other.DestructibleObjectType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 32: {
            GroupId = input.ReadInt32();
            break;
          }
          case 42: {
            PreConditions = input.ReadString();
            break;
          }
          case 48: {
            PreviewMonsterGroupId = input.ReadInt32();
            break;
          }
          case 56: {
            Difficulty = input.ReadInt32();
            break;
          }
          case 64: {
            ValueDifficulty = input.ReadInt32();
            break;
          }
          case 72: {
            Recommend = input.ReadInt32();
            break;
          }
          case 80: {
            CurrencyId = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            stageGroupIds_.AddEntriesFrom(input, _repeated_stageGroupIds_codec);
            break;
          }
          case 98:
          case 96: {
            floorNum_.AddEntriesFrom(input, _repeated_floorNum_codec);
            break;
          }
          case 104: {
            TeamExpGroupId = input.ReadInt32();
            break;
          }
          case 114:
          case 112: {
            eET_.AddEntriesFrom(input, _repeated_eET_codec);
            break;
          }
          case 122:
          case 120: {
            notEET_.AddEntriesFrom(input, _repeated_notEET_codec);
            break;
          }
          case 130: {
            Episode = input.ReadString();
            break;
          }
          case 138: {
            Image = input.ReadString();
            break;
          }
          case 144: {
            NPCId = input.ReadInt32();
            break;
          }
          case 154: {
            RewardPreview = input.ReadString();
            break;
          }
          case 160: {
            ShopNpc = input.ReadInt32();
            break;
          }
          case 168: {
            StandShopNpc = input.ReadInt32();
            break;
          }
          case 176: {
            UpgradeNpc = input.ReadInt32();
            break;
          }
          case 184: {
            ResqueNpc = input.ReadInt32();
            break;
          }
          case 192: {
            DangerNpc = input.ReadInt32();
            break;
          }
          case 200: {
            HorrorNpc = input.ReadInt32();
            break;
          }
          case 208: {
            DangerEndEvent = input.ReadInt32();
            break;
          }
          case 216: {
            HorrorEndEvent = input.ReadInt32();
            break;
          }
          case 224: {
            DestructibleObjectType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 32: {
            GroupId = input.ReadInt32();
            break;
          }
          case 42: {
            PreConditions = input.ReadString();
            break;
          }
          case 48: {
            PreviewMonsterGroupId = input.ReadInt32();
            break;
          }
          case 56: {
            Difficulty = input.ReadInt32();
            break;
          }
          case 64: {
            ValueDifficulty = input.ReadInt32();
            break;
          }
          case 72: {
            Recommend = input.ReadInt32();
            break;
          }
          case 80: {
            CurrencyId = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            stageGroupIds_.AddEntriesFrom(ref input, _repeated_stageGroupIds_codec);
            break;
          }
          case 98:
          case 96: {
            floorNum_.AddEntriesFrom(ref input, _repeated_floorNum_codec);
            break;
          }
          case 104: {
            TeamExpGroupId = input.ReadInt32();
            break;
          }
          case 114:
          case 112: {
            eET_.AddEntriesFrom(ref input, _repeated_eET_codec);
            break;
          }
          case 122:
          case 120: {
            notEET_.AddEntriesFrom(ref input, _repeated_notEET_codec);
            break;
          }
          case 130: {
            Episode = input.ReadString();
            break;
          }
          case 138: {
            Image = input.ReadString();
            break;
          }
          case 144: {
            NPCId = input.ReadInt32();
            break;
          }
          case 154: {
            RewardPreview = input.ReadString();
            break;
          }
          case 160: {
            ShopNpc = input.ReadInt32();
            break;
          }
          case 168: {
            StandShopNpc = input.ReadInt32();
            break;
          }
          case 176: {
            UpgradeNpc = input.ReadInt32();
            break;
          }
          case 184: {
            ResqueNpc = input.ReadInt32();
            break;
          }
          case 192: {
            DangerNpc = input.ReadInt32();
            break;
          }
          case 200: {
            HorrorNpc = input.ReadInt32();
            break;
          }
          case 208: {
            DangerEndEvent = input.ReadInt32();
            break;
          }
          case 216: {
            HorrorEndEvent = input.ReadInt32();
            break;
          }
          case 224: {
            DestructibleObjectType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
