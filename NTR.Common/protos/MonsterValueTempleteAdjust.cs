// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MonsterValueTempleteAdjust.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from MonsterValueTempleteAdjust.proto</summary>
  public static partial class MonsterValueTempleteAdjustReflection {

    #region Descriptor
    /// <summary>File descriptor for MonsterValueTempleteAdjust.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MonsterValueTempleteAdjustReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBNb25zdGVyVmFsdWVUZW1wbGV0ZUFkanVzdC5wcm90byKCBAoaTW9uc3Rl",
            "clZhbHVlVGVtcGxldGVBZGp1c3QSCgoCaWQYASABKAMSEwoLdGVtcGxhdGVf",
            "aWQYAiABKAUSDAoEbmFtZRgDIAEoCRINCgVlX2VfdBgEIAEoBRISCgp3ZWFr",
            "X2VfZV90GAUgAygFEhAKCGhwX3JhdGlvGAYgASgFEg4KBmhwX2ZpeBgHIAEo",
            "BRIRCglhdGtfcmF0aW8YCCABKAUSDwoHYXRrX2ZpeBgJIAEoBRITCgt3X2Vf",
            "cl9yYXRpbxgKIAEoBRIRCgl3X2Vfcl9maXgYCyABKAUSEwoLZl9lX3JfcmF0",
            "aW8YDCABKAUSEQoJZl9lX3JfZml4GA0gASgFEhMKC3NfZV9yX3JhdGlvGA4g",
            "ASgFEhEKCXNfZV9yX2ZpeBgPIAEoBRITCgthX2Vfcl9yYXRpbxgQIAEoBRIR",
            "CglhX2Vfcl9maXgYESABKAUSEwoLbF9lX3JfcmF0aW8YEiABKAUSEQoJbF9l",
            "X3JfZml4GBMgASgFEhMKC2RfZV9yX3JhdGlvGBQgASgFEhEKCWRfZV9yX2Zp",
            "eBgVIAEoBRIXCg90b3VnaG5lc3NfcmF0aW8YFiABKAUSFQoNdG91Z2huZXNz",
            "X2ZpeBgXIAEoBRIWCg5zdXBwcmVzc19yYXRpbxgYIAEoBRIUCgxzdXBwcmVz",
            "c19maXgYGSABKAVCDqoCC05vdmEuQ2xpZW50YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.MonsterValueTempleteAdjust), global::Nova.Client.MonsterValueTempleteAdjust.Parser, new[]{ "Id", "TemplateId", "Name", "EET", "WeakEET", "HpRatio", "HpFix", "AtkRatio", "AtkFix", "WERRatio", "WERFix", "FERRatio", "FERFix", "SERRatio", "SERFix", "AERRatio", "AERFix", "LERRatio", "LERFix", "DERRatio", "DERFix", "ToughnessRatio", "ToughnessFix", "SuppressRatio", "SuppressFix" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MonsterValueTempleteAdjust : pb::IMessage<MonsterValueTempleteAdjust>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonsterValueTempleteAdjust> _parser = new pb::MessageParser<MonsterValueTempleteAdjust>(() => new MonsterValueTempleteAdjust());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MonsterValueTempleteAdjust> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.MonsterValueTempleteAdjustReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterValueTempleteAdjust() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterValueTempleteAdjust(MonsterValueTempleteAdjust other) : this() {
      id_ = other.id_;
      templateId_ = other.templateId_;
      name_ = other.name_;
      eET_ = other.eET_;
      weakEET_ = other.weakEET_.Clone();
      hpRatio_ = other.hpRatio_;
      hpFix_ = other.hpFix_;
      atkRatio_ = other.atkRatio_;
      atkFix_ = other.atkFix_;
      wERRatio_ = other.wERRatio_;
      wERFix_ = other.wERFix_;
      fERRatio_ = other.fERRatio_;
      fERFix_ = other.fERFix_;
      sERRatio_ = other.sERRatio_;
      sERFix_ = other.sERFix_;
      aERRatio_ = other.aERRatio_;
      aERFix_ = other.aERFix_;
      lERRatio_ = other.lERRatio_;
      lERFix_ = other.lERFix_;
      dERRatio_ = other.dERRatio_;
      dERFix_ = other.dERFix_;
      toughnessRatio_ = other.toughnessRatio_;
      toughnessFix_ = other.toughnessFix_;
      suppressRatio_ = other.suppressRatio_;
      suppressFix_ = other.suppressFix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterValueTempleteAdjust Clone() {
      return new MonsterValueTempleteAdjust(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 2;
    private int templateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TemplateId {
      get { return templateId_; }
      set {
        templateId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "e_e_t" field.</summary>
    public const int EETFieldNumber = 4;
    private int eET_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EET {
      get { return eET_; }
      set {
        eET_ = value;
      }
    }

    /// <summary>Field number for the "weak_e_e_t" field.</summary>
    public const int WeakEETFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_weakEET_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> weakEET_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> WeakEET {
      get { return weakEET_; }
    }

    /// <summary>Field number for the "hp_ratio" field.</summary>
    public const int HpRatioFieldNumber = 6;
    private int hpRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HpRatio {
      get { return hpRatio_; }
      set {
        hpRatio_ = value;
      }
    }

    /// <summary>Field number for the "hp_fix" field.</summary>
    public const int HpFixFieldNumber = 7;
    private int hpFix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HpFix {
      get { return hpFix_; }
      set {
        hpFix_ = value;
      }
    }

    /// <summary>Field number for the "atk_ratio" field.</summary>
    public const int AtkRatioFieldNumber = 8;
    private int atkRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AtkRatio {
      get { return atkRatio_; }
      set {
        atkRatio_ = value;
      }
    }

    /// <summary>Field number for the "atk_fix" field.</summary>
    public const int AtkFixFieldNumber = 9;
    private int atkFix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AtkFix {
      get { return atkFix_; }
      set {
        atkFix_ = value;
      }
    }

    /// <summary>Field number for the "w_e_r_ratio" field.</summary>
    public const int WERRatioFieldNumber = 10;
    private int wERRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WERRatio {
      get { return wERRatio_; }
      set {
        wERRatio_ = value;
      }
    }

    /// <summary>Field number for the "w_e_r_fix" field.</summary>
    public const int WERFixFieldNumber = 11;
    private int wERFix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WERFix {
      get { return wERFix_; }
      set {
        wERFix_ = value;
      }
    }

    /// <summary>Field number for the "f_e_r_ratio" field.</summary>
    public const int FERRatioFieldNumber = 12;
    private int fERRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FERRatio {
      get { return fERRatio_; }
      set {
        fERRatio_ = value;
      }
    }

    /// <summary>Field number for the "f_e_r_fix" field.</summary>
    public const int FERFixFieldNumber = 13;
    private int fERFix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FERFix {
      get { return fERFix_; }
      set {
        fERFix_ = value;
      }
    }

    /// <summary>Field number for the "s_e_r_ratio" field.</summary>
    public const int SERRatioFieldNumber = 14;
    private int sERRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SERRatio {
      get { return sERRatio_; }
      set {
        sERRatio_ = value;
      }
    }

    /// <summary>Field number for the "s_e_r_fix" field.</summary>
    public const int SERFixFieldNumber = 15;
    private int sERFix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SERFix {
      get { return sERFix_; }
      set {
        sERFix_ = value;
      }
    }

    /// <summary>Field number for the "a_e_r_ratio" field.</summary>
    public const int AERRatioFieldNumber = 16;
    private int aERRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AERRatio {
      get { return aERRatio_; }
      set {
        aERRatio_ = value;
      }
    }

    /// <summary>Field number for the "a_e_r_fix" field.</summary>
    public const int AERFixFieldNumber = 17;
    private int aERFix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AERFix {
      get { return aERFix_; }
      set {
        aERFix_ = value;
      }
    }

    /// <summary>Field number for the "l_e_r_ratio" field.</summary>
    public const int LERRatioFieldNumber = 18;
    private int lERRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LERRatio {
      get { return lERRatio_; }
      set {
        lERRatio_ = value;
      }
    }

    /// <summary>Field number for the "l_e_r_fix" field.</summary>
    public const int LERFixFieldNumber = 19;
    private int lERFix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LERFix {
      get { return lERFix_; }
      set {
        lERFix_ = value;
      }
    }

    /// <summary>Field number for the "d_e_r_ratio" field.</summary>
    public const int DERRatioFieldNumber = 20;
    private int dERRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DERRatio {
      get { return dERRatio_; }
      set {
        dERRatio_ = value;
      }
    }

    /// <summary>Field number for the "d_e_r_fix" field.</summary>
    public const int DERFixFieldNumber = 21;
    private int dERFix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DERFix {
      get { return dERFix_; }
      set {
        dERFix_ = value;
      }
    }

    /// <summary>Field number for the "toughness_ratio" field.</summary>
    public const int ToughnessRatioFieldNumber = 22;
    private int toughnessRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ToughnessRatio {
      get { return toughnessRatio_; }
      set {
        toughnessRatio_ = value;
      }
    }

    /// <summary>Field number for the "toughness_fix" field.</summary>
    public const int ToughnessFixFieldNumber = 23;
    private int toughnessFix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ToughnessFix {
      get { return toughnessFix_; }
      set {
        toughnessFix_ = value;
      }
    }

    /// <summary>Field number for the "suppress_ratio" field.</summary>
    public const int SuppressRatioFieldNumber = 24;
    private int suppressRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuppressRatio {
      get { return suppressRatio_; }
      set {
        suppressRatio_ = value;
      }
    }

    /// <summary>Field number for the "suppress_fix" field.</summary>
    public const int SuppressFixFieldNumber = 25;
    private int suppressFix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuppressFix {
      get { return suppressFix_; }
      set {
        suppressFix_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MonsterValueTempleteAdjust);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MonsterValueTempleteAdjust other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TemplateId != other.TemplateId) return false;
      if (Name != other.Name) return false;
      if (EET != other.EET) return false;
      if(!weakEET_.Equals(other.weakEET_)) return false;
      if (HpRatio != other.HpRatio) return false;
      if (HpFix != other.HpFix) return false;
      if (AtkRatio != other.AtkRatio) return false;
      if (AtkFix != other.AtkFix) return false;
      if (WERRatio != other.WERRatio) return false;
      if (WERFix != other.WERFix) return false;
      if (FERRatio != other.FERRatio) return false;
      if (FERFix != other.FERFix) return false;
      if (SERRatio != other.SERRatio) return false;
      if (SERFix != other.SERFix) return false;
      if (AERRatio != other.AERRatio) return false;
      if (AERFix != other.AERFix) return false;
      if (LERRatio != other.LERRatio) return false;
      if (LERFix != other.LERFix) return false;
      if (DERRatio != other.DERRatio) return false;
      if (DERFix != other.DERFix) return false;
      if (ToughnessRatio != other.ToughnessRatio) return false;
      if (ToughnessFix != other.ToughnessFix) return false;
      if (SuppressRatio != other.SuppressRatio) return false;
      if (SuppressFix != other.SuppressFix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (TemplateId != 0) hash ^= TemplateId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (EET != 0) hash ^= EET.GetHashCode();
      hash ^= weakEET_.GetHashCode();
      if (HpRatio != 0) hash ^= HpRatio.GetHashCode();
      if (HpFix != 0) hash ^= HpFix.GetHashCode();
      if (AtkRatio != 0) hash ^= AtkRatio.GetHashCode();
      if (AtkFix != 0) hash ^= AtkFix.GetHashCode();
      if (WERRatio != 0) hash ^= WERRatio.GetHashCode();
      if (WERFix != 0) hash ^= WERFix.GetHashCode();
      if (FERRatio != 0) hash ^= FERRatio.GetHashCode();
      if (FERFix != 0) hash ^= FERFix.GetHashCode();
      if (SERRatio != 0) hash ^= SERRatio.GetHashCode();
      if (SERFix != 0) hash ^= SERFix.GetHashCode();
      if (AERRatio != 0) hash ^= AERRatio.GetHashCode();
      if (AERFix != 0) hash ^= AERFix.GetHashCode();
      if (LERRatio != 0) hash ^= LERRatio.GetHashCode();
      if (LERFix != 0) hash ^= LERFix.GetHashCode();
      if (DERRatio != 0) hash ^= DERRatio.GetHashCode();
      if (DERFix != 0) hash ^= DERFix.GetHashCode();
      if (ToughnessRatio != 0) hash ^= ToughnessRatio.GetHashCode();
      if (ToughnessFix != 0) hash ^= ToughnessFix.GetHashCode();
      if (SuppressRatio != 0) hash ^= SuppressRatio.GetHashCode();
      if (SuppressFix != 0) hash ^= SuppressFix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (TemplateId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TemplateId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (EET != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EET);
      }
      weakEET_.WriteTo(output, _repeated_weakEET_codec);
      if (HpRatio != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HpRatio);
      }
      if (HpFix != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HpFix);
      }
      if (AtkRatio != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(AtkRatio);
      }
      if (AtkFix != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AtkFix);
      }
      if (WERRatio != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(WERRatio);
      }
      if (WERFix != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(WERFix);
      }
      if (FERRatio != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(FERRatio);
      }
      if (FERFix != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(FERFix);
      }
      if (SERRatio != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(SERRatio);
      }
      if (SERFix != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(SERFix);
      }
      if (AERRatio != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(AERRatio);
      }
      if (AERFix != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(AERFix);
      }
      if (LERRatio != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(LERRatio);
      }
      if (LERFix != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(LERFix);
      }
      if (DERRatio != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(DERRatio);
      }
      if (DERFix != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(DERFix);
      }
      if (ToughnessRatio != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(ToughnessRatio);
      }
      if (ToughnessFix != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(ToughnessFix);
      }
      if (SuppressRatio != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SuppressRatio);
      }
      if (SuppressFix != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(SuppressFix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (TemplateId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TemplateId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (EET != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EET);
      }
      weakEET_.WriteTo(ref output, _repeated_weakEET_codec);
      if (HpRatio != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HpRatio);
      }
      if (HpFix != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HpFix);
      }
      if (AtkRatio != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(AtkRatio);
      }
      if (AtkFix != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AtkFix);
      }
      if (WERRatio != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(WERRatio);
      }
      if (WERFix != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(WERFix);
      }
      if (FERRatio != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(FERRatio);
      }
      if (FERFix != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(FERFix);
      }
      if (SERRatio != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(SERRatio);
      }
      if (SERFix != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(SERFix);
      }
      if (AERRatio != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(AERRatio);
      }
      if (AERFix != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(AERFix);
      }
      if (LERRatio != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(LERRatio);
      }
      if (LERFix != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(LERFix);
      }
      if (DERRatio != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(DERRatio);
      }
      if (DERFix != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(DERFix);
      }
      if (ToughnessRatio != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(ToughnessRatio);
      }
      if (ToughnessFix != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(ToughnessFix);
      }
      if (SuppressRatio != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SuppressRatio);
      }
      if (SuppressFix != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(SuppressFix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (TemplateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TemplateId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (EET != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EET);
      }
      size += weakEET_.CalculateSize(_repeated_weakEET_codec);
      if (HpRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpRatio);
      }
      if (HpFix != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpFix);
      }
      if (AtkRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AtkRatio);
      }
      if (AtkFix != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AtkFix);
      }
      if (WERRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WERRatio);
      }
      if (WERFix != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WERFix);
      }
      if (FERRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FERRatio);
      }
      if (FERFix != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FERFix);
      }
      if (SERRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SERRatio);
      }
      if (SERFix != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SERFix);
      }
      if (AERRatio != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AERRatio);
      }
      if (AERFix != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AERFix);
      }
      if (LERRatio != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LERRatio);
      }
      if (LERFix != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LERFix);
      }
      if (DERRatio != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DERRatio);
      }
      if (DERFix != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DERFix);
      }
      if (ToughnessRatio != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ToughnessRatio);
      }
      if (ToughnessFix != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ToughnessFix);
      }
      if (SuppressRatio != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuppressRatio);
      }
      if (SuppressFix != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuppressFix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MonsterValueTempleteAdjust other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.TemplateId != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.EET != 0) {
        EET = other.EET;
      }
      weakEET_.Add(other.weakEET_);
      if (other.HpRatio != 0) {
        HpRatio = other.HpRatio;
      }
      if (other.HpFix != 0) {
        HpFix = other.HpFix;
      }
      if (other.AtkRatio != 0) {
        AtkRatio = other.AtkRatio;
      }
      if (other.AtkFix != 0) {
        AtkFix = other.AtkFix;
      }
      if (other.WERRatio != 0) {
        WERRatio = other.WERRatio;
      }
      if (other.WERFix != 0) {
        WERFix = other.WERFix;
      }
      if (other.FERRatio != 0) {
        FERRatio = other.FERRatio;
      }
      if (other.FERFix != 0) {
        FERFix = other.FERFix;
      }
      if (other.SERRatio != 0) {
        SERRatio = other.SERRatio;
      }
      if (other.SERFix != 0) {
        SERFix = other.SERFix;
      }
      if (other.AERRatio != 0) {
        AERRatio = other.AERRatio;
      }
      if (other.AERFix != 0) {
        AERFix = other.AERFix;
      }
      if (other.LERRatio != 0) {
        LERRatio = other.LERRatio;
      }
      if (other.LERFix != 0) {
        LERFix = other.LERFix;
      }
      if (other.DERRatio != 0) {
        DERRatio = other.DERRatio;
      }
      if (other.DERFix != 0) {
        DERFix = other.DERFix;
      }
      if (other.ToughnessRatio != 0) {
        ToughnessRatio = other.ToughnessRatio;
      }
      if (other.ToughnessFix != 0) {
        ToughnessFix = other.ToughnessFix;
      }
      if (other.SuppressRatio != 0) {
        SuppressRatio = other.SuppressRatio;
      }
      if (other.SuppressFix != 0) {
        SuppressFix = other.SuppressFix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            TemplateId = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            EET = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            weakEET_.AddEntriesFrom(input, _repeated_weakEET_codec);
            break;
          }
          case 48: {
            HpRatio = input.ReadInt32();
            break;
          }
          case 56: {
            HpFix = input.ReadInt32();
            break;
          }
          case 64: {
            AtkRatio = input.ReadInt32();
            break;
          }
          case 72: {
            AtkFix = input.ReadInt32();
            break;
          }
          case 80: {
            WERRatio = input.ReadInt32();
            break;
          }
          case 88: {
            WERFix = input.ReadInt32();
            break;
          }
          case 96: {
            FERRatio = input.ReadInt32();
            break;
          }
          case 104: {
            FERFix = input.ReadInt32();
            break;
          }
          case 112: {
            SERRatio = input.ReadInt32();
            break;
          }
          case 120: {
            SERFix = input.ReadInt32();
            break;
          }
          case 128: {
            AERRatio = input.ReadInt32();
            break;
          }
          case 136: {
            AERFix = input.ReadInt32();
            break;
          }
          case 144: {
            LERRatio = input.ReadInt32();
            break;
          }
          case 152: {
            LERFix = input.ReadInt32();
            break;
          }
          case 160: {
            DERRatio = input.ReadInt32();
            break;
          }
          case 168: {
            DERFix = input.ReadInt32();
            break;
          }
          case 176: {
            ToughnessRatio = input.ReadInt32();
            break;
          }
          case 184: {
            ToughnessFix = input.ReadInt32();
            break;
          }
          case 192: {
            SuppressRatio = input.ReadInt32();
            break;
          }
          case 200: {
            SuppressFix = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            TemplateId = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            EET = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            weakEET_.AddEntriesFrom(ref input, _repeated_weakEET_codec);
            break;
          }
          case 48: {
            HpRatio = input.ReadInt32();
            break;
          }
          case 56: {
            HpFix = input.ReadInt32();
            break;
          }
          case 64: {
            AtkRatio = input.ReadInt32();
            break;
          }
          case 72: {
            AtkFix = input.ReadInt32();
            break;
          }
          case 80: {
            WERRatio = input.ReadInt32();
            break;
          }
          case 88: {
            WERFix = input.ReadInt32();
            break;
          }
          case 96: {
            FERRatio = input.ReadInt32();
            break;
          }
          case 104: {
            FERFix = input.ReadInt32();
            break;
          }
          case 112: {
            SERRatio = input.ReadInt32();
            break;
          }
          case 120: {
            SERFix = input.ReadInt32();
            break;
          }
          case 128: {
            AERRatio = input.ReadInt32();
            break;
          }
          case 136: {
            AERFix = input.ReadInt32();
            break;
          }
          case 144: {
            LERRatio = input.ReadInt32();
            break;
          }
          case 152: {
            LERFix = input.ReadInt32();
            break;
          }
          case 160: {
            DERRatio = input.ReadInt32();
            break;
          }
          case 168: {
            DERFix = input.ReadInt32();
            break;
          }
          case 176: {
            ToughnessRatio = input.ReadInt32();
            break;
          }
          case 184: {
            ToughnessFix = input.ReadInt32();
            break;
          }
          case 192: {
            SuppressRatio = input.ReadInt32();
            break;
          }
          case 200: {
            SuppressFix = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
