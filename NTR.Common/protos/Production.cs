// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Production.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from Production.proto</summary>
  public static partial class ProductionReflection {

    #region Descriptor
    /// <summary>File descriptor for Production.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProductionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBQcm9kdWN0aW9uLnByb3RvIpIECgpQcm9kdWN0aW9uEgoKAmlkGAEgASgF",
            "EgwKBG5hbWUYAiABKAkSDAoEZGVzYxgDIAEoCRIVCg1wcm9kdWN0aW9uX2lk",
            "GAQgASgFEhwKFHByb2R1Y3Rpb25fcGVyX2JhdGNoGAUgASgFEhoKEnNob3df",
            "cHJvZHVjdGlvbl9pZBgGIAEoBRIhChlzaG93X3Byb2R1Y3Rpb25fcGVyX2Jh",
            "dGNoGAcgASgFEg0KBWdyb3VwGAggASgFEgsKA3RhZxgJIAEoBRIYChByYXdf",
            "bWF0ZXJpYWxfaWQxGAogASgFEhsKE3Jhd19tYXRlcmlhbF9jb3VudDEYCyAB",
            "KAUSGAoQcmF3X21hdGVyaWFsX2lkMhgMIAEoBRIbChNyYXdfbWF0ZXJpYWxf",
            "Y291bnQyGA0gASgFEhgKEHJhd19tYXRlcmlhbF9pZDMYDiABKAUSGwoTcmF3",
            "X21hdGVyaWFsX2NvdW50MxgPIAEoBRIYChByYXdfbWF0ZXJpYWxfaWQ0GBAg",
            "ASgFEhsKE3Jhd19tYXRlcmlhbF9jb3VudDQYESABKAUSGwoTaXNfc2hvd193",
            "b3JsZF9sZXZlbBgSIAEoBRIaChJ1bmxvY2tfd29ybGRfbGV2ZWwYEyABKAUS",
            "EgoKdW5sb2NrX3RpcBgUIAEoCRIPCgdzb3J0X2lkGBUgASgFEhIKCmlzX2Fj",
            "dGl2ZWQYFiABKAhCDqoCC05vdmEuQ2xpZW50YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Production), global::Nova.Client.Production.Parser, new[]{ "Id", "Name", "Desc", "ProductionId", "ProductionPerBatch", "ShowProductionId", "ShowProductionPerBatch", "Group", "Tag", "RawMaterialId1", "RawMaterialCount1", "RawMaterialId2", "RawMaterialCount2", "RawMaterialId3", "RawMaterialCount3", "RawMaterialId4", "RawMaterialCount4", "IsShowWorldLevel", "UnlockWorldLevel", "UnlockTip", "SortId", "IsActived" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Production : pb::IMessage<Production>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Production> _parser = new pb::MessageParser<Production>(() => new Production());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Production> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.ProductionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Production() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Production(Production other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      desc_ = other.desc_;
      productionId_ = other.productionId_;
      productionPerBatch_ = other.productionPerBatch_;
      showProductionId_ = other.showProductionId_;
      showProductionPerBatch_ = other.showProductionPerBatch_;
      group_ = other.group_;
      tag_ = other.tag_;
      rawMaterialId1_ = other.rawMaterialId1_;
      rawMaterialCount1_ = other.rawMaterialCount1_;
      rawMaterialId2_ = other.rawMaterialId2_;
      rawMaterialCount2_ = other.rawMaterialCount2_;
      rawMaterialId3_ = other.rawMaterialId3_;
      rawMaterialCount3_ = other.rawMaterialCount3_;
      rawMaterialId4_ = other.rawMaterialId4_;
      rawMaterialCount4_ = other.rawMaterialCount4_;
      isShowWorldLevel_ = other.isShowWorldLevel_;
      unlockWorldLevel_ = other.unlockWorldLevel_;
      unlockTip_ = other.unlockTip_;
      sortId_ = other.sortId_;
      isActived_ = other.isActived_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Production Clone() {
      return new Production(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "production_id" field.</summary>
    public const int ProductionIdFieldNumber = 4;
    private int productionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProductionId {
      get { return productionId_; }
      set {
        productionId_ = value;
      }
    }

    /// <summary>Field number for the "production_per_batch" field.</summary>
    public const int ProductionPerBatchFieldNumber = 5;
    private int productionPerBatch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProductionPerBatch {
      get { return productionPerBatch_; }
      set {
        productionPerBatch_ = value;
      }
    }

    /// <summary>Field number for the "show_production_id" field.</summary>
    public const int ShowProductionIdFieldNumber = 6;
    private int showProductionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShowProductionId {
      get { return showProductionId_; }
      set {
        showProductionId_ = value;
      }
    }

    /// <summary>Field number for the "show_production_per_batch" field.</summary>
    public const int ShowProductionPerBatchFieldNumber = 7;
    private int showProductionPerBatch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShowProductionPerBatch {
      get { return showProductionPerBatch_; }
      set {
        showProductionPerBatch_ = value;
      }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 8;
    private int group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 9;
    private int tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    /// <summary>Field number for the "raw_material_id1" field.</summary>
    public const int RawMaterialId1FieldNumber = 10;
    private int rawMaterialId1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RawMaterialId1 {
      get { return rawMaterialId1_; }
      set {
        rawMaterialId1_ = value;
      }
    }

    /// <summary>Field number for the "raw_material_count1" field.</summary>
    public const int RawMaterialCount1FieldNumber = 11;
    private int rawMaterialCount1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RawMaterialCount1 {
      get { return rawMaterialCount1_; }
      set {
        rawMaterialCount1_ = value;
      }
    }

    /// <summary>Field number for the "raw_material_id2" field.</summary>
    public const int RawMaterialId2FieldNumber = 12;
    private int rawMaterialId2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RawMaterialId2 {
      get { return rawMaterialId2_; }
      set {
        rawMaterialId2_ = value;
      }
    }

    /// <summary>Field number for the "raw_material_count2" field.</summary>
    public const int RawMaterialCount2FieldNumber = 13;
    private int rawMaterialCount2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RawMaterialCount2 {
      get { return rawMaterialCount2_; }
      set {
        rawMaterialCount2_ = value;
      }
    }

    /// <summary>Field number for the "raw_material_id3" field.</summary>
    public const int RawMaterialId3FieldNumber = 14;
    private int rawMaterialId3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RawMaterialId3 {
      get { return rawMaterialId3_; }
      set {
        rawMaterialId3_ = value;
      }
    }

    /// <summary>Field number for the "raw_material_count3" field.</summary>
    public const int RawMaterialCount3FieldNumber = 15;
    private int rawMaterialCount3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RawMaterialCount3 {
      get { return rawMaterialCount3_; }
      set {
        rawMaterialCount3_ = value;
      }
    }

    /// <summary>Field number for the "raw_material_id4" field.</summary>
    public const int RawMaterialId4FieldNumber = 16;
    private int rawMaterialId4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RawMaterialId4 {
      get { return rawMaterialId4_; }
      set {
        rawMaterialId4_ = value;
      }
    }

    /// <summary>Field number for the "raw_material_count4" field.</summary>
    public const int RawMaterialCount4FieldNumber = 17;
    private int rawMaterialCount4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RawMaterialCount4 {
      get { return rawMaterialCount4_; }
      set {
        rawMaterialCount4_ = value;
      }
    }

    /// <summary>Field number for the "is_show_world_level" field.</summary>
    public const int IsShowWorldLevelFieldNumber = 18;
    private int isShowWorldLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IsShowWorldLevel {
      get { return isShowWorldLevel_; }
      set {
        isShowWorldLevel_ = value;
      }
    }

    /// <summary>Field number for the "unlock_world_level" field.</summary>
    public const int UnlockWorldLevelFieldNumber = 19;
    private int unlockWorldLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnlockWorldLevel {
      get { return unlockWorldLevel_; }
      set {
        unlockWorldLevel_ = value;
      }
    }

    /// <summary>Field number for the "unlock_tip" field.</summary>
    public const int UnlockTipFieldNumber = 20;
    private string unlockTip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnlockTip {
      get { return unlockTip_; }
      set {
        unlockTip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sort_id" field.</summary>
    public const int SortIdFieldNumber = 21;
    private int sortId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SortId {
      get { return sortId_; }
      set {
        sortId_ = value;
      }
    }

    /// <summary>Field number for the "is_actived" field.</summary>
    public const int IsActivedFieldNumber = 22;
    private bool isActived_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsActived {
      get { return isActived_; }
      set {
        isActived_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Production);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Production other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if (ProductionId != other.ProductionId) return false;
      if (ProductionPerBatch != other.ProductionPerBatch) return false;
      if (ShowProductionId != other.ShowProductionId) return false;
      if (ShowProductionPerBatch != other.ShowProductionPerBatch) return false;
      if (Group != other.Group) return false;
      if (Tag != other.Tag) return false;
      if (RawMaterialId1 != other.RawMaterialId1) return false;
      if (RawMaterialCount1 != other.RawMaterialCount1) return false;
      if (RawMaterialId2 != other.RawMaterialId2) return false;
      if (RawMaterialCount2 != other.RawMaterialCount2) return false;
      if (RawMaterialId3 != other.RawMaterialId3) return false;
      if (RawMaterialCount3 != other.RawMaterialCount3) return false;
      if (RawMaterialId4 != other.RawMaterialId4) return false;
      if (RawMaterialCount4 != other.RawMaterialCount4) return false;
      if (IsShowWorldLevel != other.IsShowWorldLevel) return false;
      if (UnlockWorldLevel != other.UnlockWorldLevel) return false;
      if (UnlockTip != other.UnlockTip) return false;
      if (SortId != other.SortId) return false;
      if (IsActived != other.IsActived) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (ProductionId != 0) hash ^= ProductionId.GetHashCode();
      if (ProductionPerBatch != 0) hash ^= ProductionPerBatch.GetHashCode();
      if (ShowProductionId != 0) hash ^= ShowProductionId.GetHashCode();
      if (ShowProductionPerBatch != 0) hash ^= ShowProductionPerBatch.GetHashCode();
      if (Group != 0) hash ^= Group.GetHashCode();
      if (Tag != 0) hash ^= Tag.GetHashCode();
      if (RawMaterialId1 != 0) hash ^= RawMaterialId1.GetHashCode();
      if (RawMaterialCount1 != 0) hash ^= RawMaterialCount1.GetHashCode();
      if (RawMaterialId2 != 0) hash ^= RawMaterialId2.GetHashCode();
      if (RawMaterialCount2 != 0) hash ^= RawMaterialCount2.GetHashCode();
      if (RawMaterialId3 != 0) hash ^= RawMaterialId3.GetHashCode();
      if (RawMaterialCount3 != 0) hash ^= RawMaterialCount3.GetHashCode();
      if (RawMaterialId4 != 0) hash ^= RawMaterialId4.GetHashCode();
      if (RawMaterialCount4 != 0) hash ^= RawMaterialCount4.GetHashCode();
      if (IsShowWorldLevel != 0) hash ^= IsShowWorldLevel.GetHashCode();
      if (UnlockWorldLevel != 0) hash ^= UnlockWorldLevel.GetHashCode();
      if (UnlockTip.Length != 0) hash ^= UnlockTip.GetHashCode();
      if (SortId != 0) hash ^= SortId.GetHashCode();
      if (IsActived != false) hash ^= IsActived.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (ProductionId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ProductionId);
      }
      if (ProductionPerBatch != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ProductionPerBatch);
      }
      if (ShowProductionId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ShowProductionId);
      }
      if (ShowProductionPerBatch != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ShowProductionPerBatch);
      }
      if (Group != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Group);
      }
      if (Tag != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Tag);
      }
      if (RawMaterialId1 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RawMaterialId1);
      }
      if (RawMaterialCount1 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(RawMaterialCount1);
      }
      if (RawMaterialId2 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RawMaterialId2);
      }
      if (RawMaterialCount2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RawMaterialCount2);
      }
      if (RawMaterialId3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(RawMaterialId3);
      }
      if (RawMaterialCount3 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(RawMaterialCount3);
      }
      if (RawMaterialId4 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(RawMaterialId4);
      }
      if (RawMaterialCount4 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(RawMaterialCount4);
      }
      if (IsShowWorldLevel != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(IsShowWorldLevel);
      }
      if (UnlockWorldLevel != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(UnlockWorldLevel);
      }
      if (UnlockTip.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(UnlockTip);
      }
      if (SortId != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(SortId);
      }
      if (IsActived != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsActived);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (ProductionId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ProductionId);
      }
      if (ProductionPerBatch != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ProductionPerBatch);
      }
      if (ShowProductionId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ShowProductionId);
      }
      if (ShowProductionPerBatch != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ShowProductionPerBatch);
      }
      if (Group != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Group);
      }
      if (Tag != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Tag);
      }
      if (RawMaterialId1 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RawMaterialId1);
      }
      if (RawMaterialCount1 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(RawMaterialCount1);
      }
      if (RawMaterialId2 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RawMaterialId2);
      }
      if (RawMaterialCount2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RawMaterialCount2);
      }
      if (RawMaterialId3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(RawMaterialId3);
      }
      if (RawMaterialCount3 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(RawMaterialCount3);
      }
      if (RawMaterialId4 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(RawMaterialId4);
      }
      if (RawMaterialCount4 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(RawMaterialCount4);
      }
      if (IsShowWorldLevel != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(IsShowWorldLevel);
      }
      if (UnlockWorldLevel != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(UnlockWorldLevel);
      }
      if (UnlockTip.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(UnlockTip);
      }
      if (SortId != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(SortId);
      }
      if (IsActived != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsActived);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (ProductionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProductionId);
      }
      if (ProductionPerBatch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProductionPerBatch);
      }
      if (ShowProductionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShowProductionId);
      }
      if (ShowProductionPerBatch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShowProductionPerBatch);
      }
      if (Group != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Group);
      }
      if (Tag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tag);
      }
      if (RawMaterialId1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RawMaterialId1);
      }
      if (RawMaterialCount1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RawMaterialCount1);
      }
      if (RawMaterialId2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RawMaterialId2);
      }
      if (RawMaterialCount2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RawMaterialCount2);
      }
      if (RawMaterialId3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RawMaterialId3);
      }
      if (RawMaterialCount3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RawMaterialCount3);
      }
      if (RawMaterialId4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RawMaterialId4);
      }
      if (RawMaterialCount4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RawMaterialCount4);
      }
      if (IsShowWorldLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(IsShowWorldLevel);
      }
      if (UnlockWorldLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnlockWorldLevel);
      }
      if (UnlockTip.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UnlockTip);
      }
      if (SortId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SortId);
      }
      if (IsActived != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Production other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.ProductionId != 0) {
        ProductionId = other.ProductionId;
      }
      if (other.ProductionPerBatch != 0) {
        ProductionPerBatch = other.ProductionPerBatch;
      }
      if (other.ShowProductionId != 0) {
        ShowProductionId = other.ShowProductionId;
      }
      if (other.ShowProductionPerBatch != 0) {
        ShowProductionPerBatch = other.ShowProductionPerBatch;
      }
      if (other.Group != 0) {
        Group = other.Group;
      }
      if (other.Tag != 0) {
        Tag = other.Tag;
      }
      if (other.RawMaterialId1 != 0) {
        RawMaterialId1 = other.RawMaterialId1;
      }
      if (other.RawMaterialCount1 != 0) {
        RawMaterialCount1 = other.RawMaterialCount1;
      }
      if (other.RawMaterialId2 != 0) {
        RawMaterialId2 = other.RawMaterialId2;
      }
      if (other.RawMaterialCount2 != 0) {
        RawMaterialCount2 = other.RawMaterialCount2;
      }
      if (other.RawMaterialId3 != 0) {
        RawMaterialId3 = other.RawMaterialId3;
      }
      if (other.RawMaterialCount3 != 0) {
        RawMaterialCount3 = other.RawMaterialCount3;
      }
      if (other.RawMaterialId4 != 0) {
        RawMaterialId4 = other.RawMaterialId4;
      }
      if (other.RawMaterialCount4 != 0) {
        RawMaterialCount4 = other.RawMaterialCount4;
      }
      if (other.IsShowWorldLevel != 0) {
        IsShowWorldLevel = other.IsShowWorldLevel;
      }
      if (other.UnlockWorldLevel != 0) {
        UnlockWorldLevel = other.UnlockWorldLevel;
      }
      if (other.UnlockTip.Length != 0) {
        UnlockTip = other.UnlockTip;
      }
      if (other.SortId != 0) {
        SortId = other.SortId;
      }
      if (other.IsActived != false) {
        IsActived = other.IsActived;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 32: {
            ProductionId = input.ReadInt32();
            break;
          }
          case 40: {
            ProductionPerBatch = input.ReadInt32();
            break;
          }
          case 48: {
            ShowProductionId = input.ReadInt32();
            break;
          }
          case 56: {
            ShowProductionPerBatch = input.ReadInt32();
            break;
          }
          case 64: {
            Group = input.ReadInt32();
            break;
          }
          case 72: {
            Tag = input.ReadInt32();
            break;
          }
          case 80: {
            RawMaterialId1 = input.ReadInt32();
            break;
          }
          case 88: {
            RawMaterialCount1 = input.ReadInt32();
            break;
          }
          case 96: {
            RawMaterialId2 = input.ReadInt32();
            break;
          }
          case 104: {
            RawMaterialCount2 = input.ReadInt32();
            break;
          }
          case 112: {
            RawMaterialId3 = input.ReadInt32();
            break;
          }
          case 120: {
            RawMaterialCount3 = input.ReadInt32();
            break;
          }
          case 128: {
            RawMaterialId4 = input.ReadInt32();
            break;
          }
          case 136: {
            RawMaterialCount4 = input.ReadInt32();
            break;
          }
          case 144: {
            IsShowWorldLevel = input.ReadInt32();
            break;
          }
          case 152: {
            UnlockWorldLevel = input.ReadInt32();
            break;
          }
          case 162: {
            UnlockTip = input.ReadString();
            break;
          }
          case 168: {
            SortId = input.ReadInt32();
            break;
          }
          case 176: {
            IsActived = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 32: {
            ProductionId = input.ReadInt32();
            break;
          }
          case 40: {
            ProductionPerBatch = input.ReadInt32();
            break;
          }
          case 48: {
            ShowProductionId = input.ReadInt32();
            break;
          }
          case 56: {
            ShowProductionPerBatch = input.ReadInt32();
            break;
          }
          case 64: {
            Group = input.ReadInt32();
            break;
          }
          case 72: {
            Tag = input.ReadInt32();
            break;
          }
          case 80: {
            RawMaterialId1 = input.ReadInt32();
            break;
          }
          case 88: {
            RawMaterialCount1 = input.ReadInt32();
            break;
          }
          case 96: {
            RawMaterialId2 = input.ReadInt32();
            break;
          }
          case 104: {
            RawMaterialCount2 = input.ReadInt32();
            break;
          }
          case 112: {
            RawMaterialId3 = input.ReadInt32();
            break;
          }
          case 120: {
            RawMaterialCount3 = input.ReadInt32();
            break;
          }
          case 128: {
            RawMaterialId4 = input.ReadInt32();
            break;
          }
          case 136: {
            RawMaterialCount4 = input.ReadInt32();
            break;
          }
          case 144: {
            IsShowWorldLevel = input.ReadInt32();
            break;
          }
          case 152: {
            UnlockWorldLevel = input.ReadInt32();
            break;
          }
          case 162: {
            UnlockTip = input.ReadString();
            break;
          }
          case 168: {
            SortId = input.ReadInt32();
            break;
          }
          case 176: {
            IsActived = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
