// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TravelerDuelBossLevel.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from TravelerDuelBossLevel.proto</summary>
  public static partial class TravelerDuelBossLevelReflection {

    #region Descriptor
    /// <summary>File descriptor for TravelerDuelBossLevel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TravelerDuelBossLevelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtUcmF2ZWxlckR1ZWxCb3NzTGV2ZWwucHJvdG8i9AMKFVRyYXZlbGVyRHVl",
            "bEJvc3NMZXZlbBIKCgJpZBgBIAEoBRIPCgdib3NzX2lkGAIgASgFEhIKCmRp",
            "ZmZpY3VsdHkYAyABKAUSDAoEbmFtZRgEIAEoCRIMCgRkZXNjGAUgASgJEhcK",
            "D3N1Z2dlc3RlZF9wb3dlchgGIAEoBRIcChRyZWNvbW1lbmRfYnVpbGRfcmFu",
            "axgHIAEoBRINCgVlX2VfdBgIIAMoBRIRCgl0aW1lbGltaXQYCSABKAUSIAoY",
            "cHJldmlld19tb25zdGVyX2dyb3VwX2lkGAogASgFEhAKCGZsb29yX2lkGAsg",
            "ASgFEhQKDHByZV9sZXZlbF9pZBgMIAEoBRIWCg5wcmVfbGV2ZWxfc3RhchgN",
            "IAEoBRIaChJ1bmxvY2tfd29ybGRfY2xhc3MYDiABKAUSGQoRdW5sb2NrX2R1",
            "ZWxfbGV2ZWwYDyABKAUSEAoIZHVlbF9leHAYECABKAUSGgoSYmFzZV9hd2Fy",
            "ZF9wcmV2aWV3GBEgASgJEhAKCGFmZmluaXR5GBIgASgFEgwKBGljb24YEyAB",
            "KAkSEgoKc2tpbGxfc2hvdxgUIAMoBRINCgVjb3ZlchgVIAEoCRIPCgdza2lu",
            "X2lkGBYgASgFEhoKEmV4dHJhX2Ryb3BfcHJldmlldxgXIAMoBUIOqgILTm92",
            "YS5DbGllbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.TravelerDuelBossLevel), global::Nova.Client.TravelerDuelBossLevel.Parser, new[]{ "Id", "BossId", "Difficulty", "Name", "Desc", "SuggestedPower", "RecommendBuildRank", "EET", "Timelimit", "PreviewMonsterGroupId", "FloorId", "PreLevelId", "PreLevelStar", "UnlockWorldClass", "UnlockDuelLevel", "DuelExp", "BaseAwardPreview", "Affinity", "Icon", "SkillShow", "Cover", "SkinId", "ExtraDropPreview" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TravelerDuelBossLevel : pb::IMessage<TravelerDuelBossLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TravelerDuelBossLevel> _parser = new pb::MessageParser<TravelerDuelBossLevel>(() => new TravelerDuelBossLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TravelerDuelBossLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.TravelerDuelBossLevelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TravelerDuelBossLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TravelerDuelBossLevel(TravelerDuelBossLevel other) : this() {
      id_ = other.id_;
      bossId_ = other.bossId_;
      difficulty_ = other.difficulty_;
      name_ = other.name_;
      desc_ = other.desc_;
      suggestedPower_ = other.suggestedPower_;
      recommendBuildRank_ = other.recommendBuildRank_;
      eET_ = other.eET_.Clone();
      timelimit_ = other.timelimit_;
      previewMonsterGroupId_ = other.previewMonsterGroupId_;
      floorId_ = other.floorId_;
      preLevelId_ = other.preLevelId_;
      preLevelStar_ = other.preLevelStar_;
      unlockWorldClass_ = other.unlockWorldClass_;
      unlockDuelLevel_ = other.unlockDuelLevel_;
      duelExp_ = other.duelExp_;
      baseAwardPreview_ = other.baseAwardPreview_;
      affinity_ = other.affinity_;
      icon_ = other.icon_;
      skillShow_ = other.skillShow_.Clone();
      cover_ = other.cover_;
      skinId_ = other.skinId_;
      extraDropPreview_ = other.extraDropPreview_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TravelerDuelBossLevel Clone() {
      return new TravelerDuelBossLevel(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boss_id" field.</summary>
    public const int BossIdFieldNumber = 2;
    private int bossId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BossId {
      get { return bossId_; }
      set {
        bossId_ = value;
      }
    }

    /// <summary>Field number for the "difficulty" field.</summary>
    public const int DifficultyFieldNumber = 3;
    private int difficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Difficulty {
      get { return difficulty_; }
      set {
        difficulty_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 5;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "suggested_power" field.</summary>
    public const int SuggestedPowerFieldNumber = 6;
    private int suggestedPower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuggestedPower {
      get { return suggestedPower_; }
      set {
        suggestedPower_ = value;
      }
    }

    /// <summary>Field number for the "recommend_build_rank" field.</summary>
    public const int RecommendBuildRankFieldNumber = 7;
    private int recommendBuildRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecommendBuildRank {
      get { return recommendBuildRank_; }
      set {
        recommendBuildRank_ = value;
      }
    }

    /// <summary>Field number for the "e_e_t" field.</summary>
    public const int EETFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_eET_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> eET_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> EET {
      get { return eET_; }
    }

    /// <summary>Field number for the "timelimit" field.</summary>
    public const int TimelimitFieldNumber = 9;
    private int timelimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timelimit {
      get { return timelimit_; }
      set {
        timelimit_ = value;
      }
    }

    /// <summary>Field number for the "preview_monster_group_id" field.</summary>
    public const int PreviewMonsterGroupIdFieldNumber = 10;
    private int previewMonsterGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PreviewMonsterGroupId {
      get { return previewMonsterGroupId_; }
      set {
        previewMonsterGroupId_ = value;
      }
    }

    /// <summary>Field number for the "floor_id" field.</summary>
    public const int FloorIdFieldNumber = 11;
    private int floorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FloorId {
      get { return floorId_; }
      set {
        floorId_ = value;
      }
    }

    /// <summary>Field number for the "pre_level_id" field.</summary>
    public const int PreLevelIdFieldNumber = 12;
    private int preLevelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PreLevelId {
      get { return preLevelId_; }
      set {
        preLevelId_ = value;
      }
    }

    /// <summary>Field number for the "pre_level_star" field.</summary>
    public const int PreLevelStarFieldNumber = 13;
    private int preLevelStar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PreLevelStar {
      get { return preLevelStar_; }
      set {
        preLevelStar_ = value;
      }
    }

    /// <summary>Field number for the "unlock_world_class" field.</summary>
    public const int UnlockWorldClassFieldNumber = 14;
    private int unlockWorldClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnlockWorldClass {
      get { return unlockWorldClass_; }
      set {
        unlockWorldClass_ = value;
      }
    }

    /// <summary>Field number for the "unlock_duel_level" field.</summary>
    public const int UnlockDuelLevelFieldNumber = 15;
    private int unlockDuelLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnlockDuelLevel {
      get { return unlockDuelLevel_; }
      set {
        unlockDuelLevel_ = value;
      }
    }

    /// <summary>Field number for the "duel_exp" field.</summary>
    public const int DuelExpFieldNumber = 16;
    private int duelExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DuelExp {
      get { return duelExp_; }
      set {
        duelExp_ = value;
      }
    }

    /// <summary>Field number for the "base_award_preview" field.</summary>
    public const int BaseAwardPreviewFieldNumber = 17;
    private string baseAwardPreview_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BaseAwardPreview {
      get { return baseAwardPreview_; }
      set {
        baseAwardPreview_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "affinity" field.</summary>
    public const int AffinityFieldNumber = 18;
    private int affinity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Affinity {
      get { return affinity_; }
      set {
        affinity_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 19;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skill_show" field.</summary>
    public const int SkillShowFieldNumber = 20;
    private static readonly pb::FieldCodec<int> _repeated_skillShow_codec
        = pb::FieldCodec.ForInt32(162);
    private readonly pbc::RepeatedField<int> skillShow_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> SkillShow {
      get { return skillShow_; }
    }

    /// <summary>Field number for the "cover" field.</summary>
    public const int CoverFieldNumber = 21;
    private string cover_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Cover {
      get { return cover_; }
      set {
        cover_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skin_id" field.</summary>
    public const int SkinIdFieldNumber = 22;
    private int skinId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkinId {
      get { return skinId_; }
      set {
        skinId_ = value;
      }
    }

    /// <summary>Field number for the "extra_drop_preview" field.</summary>
    public const int ExtraDropPreviewFieldNumber = 23;
    private static readonly pb::FieldCodec<int> _repeated_extraDropPreview_codec
        = pb::FieldCodec.ForInt32(186);
    private readonly pbc::RepeatedField<int> extraDropPreview_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ExtraDropPreview {
      get { return extraDropPreview_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TravelerDuelBossLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TravelerDuelBossLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BossId != other.BossId) return false;
      if (Difficulty != other.Difficulty) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if (SuggestedPower != other.SuggestedPower) return false;
      if (RecommendBuildRank != other.RecommendBuildRank) return false;
      if(!eET_.Equals(other.eET_)) return false;
      if (Timelimit != other.Timelimit) return false;
      if (PreviewMonsterGroupId != other.PreviewMonsterGroupId) return false;
      if (FloorId != other.FloorId) return false;
      if (PreLevelId != other.PreLevelId) return false;
      if (PreLevelStar != other.PreLevelStar) return false;
      if (UnlockWorldClass != other.UnlockWorldClass) return false;
      if (UnlockDuelLevel != other.UnlockDuelLevel) return false;
      if (DuelExp != other.DuelExp) return false;
      if (BaseAwardPreview != other.BaseAwardPreview) return false;
      if (Affinity != other.Affinity) return false;
      if (Icon != other.Icon) return false;
      if(!skillShow_.Equals(other.skillShow_)) return false;
      if (Cover != other.Cover) return false;
      if (SkinId != other.SkinId) return false;
      if(!extraDropPreview_.Equals(other.extraDropPreview_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BossId != 0) hash ^= BossId.GetHashCode();
      if (Difficulty != 0) hash ^= Difficulty.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (SuggestedPower != 0) hash ^= SuggestedPower.GetHashCode();
      if (RecommendBuildRank != 0) hash ^= RecommendBuildRank.GetHashCode();
      hash ^= eET_.GetHashCode();
      if (Timelimit != 0) hash ^= Timelimit.GetHashCode();
      if (PreviewMonsterGroupId != 0) hash ^= PreviewMonsterGroupId.GetHashCode();
      if (FloorId != 0) hash ^= FloorId.GetHashCode();
      if (PreLevelId != 0) hash ^= PreLevelId.GetHashCode();
      if (PreLevelStar != 0) hash ^= PreLevelStar.GetHashCode();
      if (UnlockWorldClass != 0) hash ^= UnlockWorldClass.GetHashCode();
      if (UnlockDuelLevel != 0) hash ^= UnlockDuelLevel.GetHashCode();
      if (DuelExp != 0) hash ^= DuelExp.GetHashCode();
      if (BaseAwardPreview.Length != 0) hash ^= BaseAwardPreview.GetHashCode();
      if (Affinity != 0) hash ^= Affinity.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      hash ^= skillShow_.GetHashCode();
      if (Cover.Length != 0) hash ^= Cover.GetHashCode();
      if (SkinId != 0) hash ^= SkinId.GetHashCode();
      hash ^= extraDropPreview_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BossId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BossId);
      }
      if (Difficulty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Difficulty);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Desc);
      }
      if (SuggestedPower != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SuggestedPower);
      }
      if (RecommendBuildRank != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RecommendBuildRank);
      }
      eET_.WriteTo(output, _repeated_eET_codec);
      if (Timelimit != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Timelimit);
      }
      if (PreviewMonsterGroupId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(PreviewMonsterGroupId);
      }
      if (FloorId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(FloorId);
      }
      if (PreLevelId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PreLevelId);
      }
      if (PreLevelStar != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(PreLevelStar);
      }
      if (UnlockWorldClass != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(UnlockWorldClass);
      }
      if (UnlockDuelLevel != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(UnlockDuelLevel);
      }
      if (DuelExp != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(DuelExp);
      }
      if (BaseAwardPreview.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(BaseAwardPreview);
      }
      if (Affinity != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Affinity);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Icon);
      }
      skillShow_.WriteTo(output, _repeated_skillShow_codec);
      if (Cover.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Cover);
      }
      if (SkinId != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(SkinId);
      }
      extraDropPreview_.WriteTo(output, _repeated_extraDropPreview_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BossId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BossId);
      }
      if (Difficulty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Difficulty);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Desc);
      }
      if (SuggestedPower != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SuggestedPower);
      }
      if (RecommendBuildRank != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RecommendBuildRank);
      }
      eET_.WriteTo(ref output, _repeated_eET_codec);
      if (Timelimit != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Timelimit);
      }
      if (PreviewMonsterGroupId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(PreviewMonsterGroupId);
      }
      if (FloorId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(FloorId);
      }
      if (PreLevelId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PreLevelId);
      }
      if (PreLevelStar != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(PreLevelStar);
      }
      if (UnlockWorldClass != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(UnlockWorldClass);
      }
      if (UnlockDuelLevel != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(UnlockDuelLevel);
      }
      if (DuelExp != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(DuelExp);
      }
      if (BaseAwardPreview.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(BaseAwardPreview);
      }
      if (Affinity != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Affinity);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Icon);
      }
      skillShow_.WriteTo(ref output, _repeated_skillShow_codec);
      if (Cover.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Cover);
      }
      if (SkinId != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(SkinId);
      }
      extraDropPreview_.WriteTo(ref output, _repeated_extraDropPreview_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BossId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BossId);
      }
      if (Difficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Difficulty);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (SuggestedPower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuggestedPower);
      }
      if (RecommendBuildRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecommendBuildRank);
      }
      size += eET_.CalculateSize(_repeated_eET_codec);
      if (Timelimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timelimit);
      }
      if (PreviewMonsterGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PreviewMonsterGroupId);
      }
      if (FloorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FloorId);
      }
      if (PreLevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PreLevelId);
      }
      if (PreLevelStar != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PreLevelStar);
      }
      if (UnlockWorldClass != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnlockWorldClass);
      }
      if (UnlockDuelLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnlockDuelLevel);
      }
      if (DuelExp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DuelExp);
      }
      if (BaseAwardPreview.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BaseAwardPreview);
      }
      if (Affinity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Affinity);
      }
      if (Icon.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      size += skillShow_.CalculateSize(_repeated_skillShow_codec);
      if (Cover.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Cover);
      }
      if (SkinId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SkinId);
      }
      size += extraDropPreview_.CalculateSize(_repeated_extraDropPreview_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TravelerDuelBossLevel other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BossId != 0) {
        BossId = other.BossId;
      }
      if (other.Difficulty != 0) {
        Difficulty = other.Difficulty;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.SuggestedPower != 0) {
        SuggestedPower = other.SuggestedPower;
      }
      if (other.RecommendBuildRank != 0) {
        RecommendBuildRank = other.RecommendBuildRank;
      }
      eET_.Add(other.eET_);
      if (other.Timelimit != 0) {
        Timelimit = other.Timelimit;
      }
      if (other.PreviewMonsterGroupId != 0) {
        PreviewMonsterGroupId = other.PreviewMonsterGroupId;
      }
      if (other.FloorId != 0) {
        FloorId = other.FloorId;
      }
      if (other.PreLevelId != 0) {
        PreLevelId = other.PreLevelId;
      }
      if (other.PreLevelStar != 0) {
        PreLevelStar = other.PreLevelStar;
      }
      if (other.UnlockWorldClass != 0) {
        UnlockWorldClass = other.UnlockWorldClass;
      }
      if (other.UnlockDuelLevel != 0) {
        UnlockDuelLevel = other.UnlockDuelLevel;
      }
      if (other.DuelExp != 0) {
        DuelExp = other.DuelExp;
      }
      if (other.BaseAwardPreview.Length != 0) {
        BaseAwardPreview = other.BaseAwardPreview;
      }
      if (other.Affinity != 0) {
        Affinity = other.Affinity;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      skillShow_.Add(other.skillShow_);
      if (other.Cover.Length != 0) {
        Cover = other.Cover;
      }
      if (other.SkinId != 0) {
        SkinId = other.SkinId;
      }
      extraDropPreview_.Add(other.extraDropPreview_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BossId = input.ReadInt32();
            break;
          }
          case 24: {
            Difficulty = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Desc = input.ReadString();
            break;
          }
          case 48: {
            SuggestedPower = input.ReadInt32();
            break;
          }
          case 56: {
            RecommendBuildRank = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            eET_.AddEntriesFrom(input, _repeated_eET_codec);
            break;
          }
          case 72: {
            Timelimit = input.ReadInt32();
            break;
          }
          case 80: {
            PreviewMonsterGroupId = input.ReadInt32();
            break;
          }
          case 88: {
            FloorId = input.ReadInt32();
            break;
          }
          case 96: {
            PreLevelId = input.ReadInt32();
            break;
          }
          case 104: {
            PreLevelStar = input.ReadInt32();
            break;
          }
          case 112: {
            UnlockWorldClass = input.ReadInt32();
            break;
          }
          case 120: {
            UnlockDuelLevel = input.ReadInt32();
            break;
          }
          case 128: {
            DuelExp = input.ReadInt32();
            break;
          }
          case 138: {
            BaseAwardPreview = input.ReadString();
            break;
          }
          case 144: {
            Affinity = input.ReadInt32();
            break;
          }
          case 154: {
            Icon = input.ReadString();
            break;
          }
          case 162:
          case 160: {
            skillShow_.AddEntriesFrom(input, _repeated_skillShow_codec);
            break;
          }
          case 170: {
            Cover = input.ReadString();
            break;
          }
          case 176: {
            SkinId = input.ReadInt32();
            break;
          }
          case 186:
          case 184: {
            extraDropPreview_.AddEntriesFrom(input, _repeated_extraDropPreview_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BossId = input.ReadInt32();
            break;
          }
          case 24: {
            Difficulty = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Desc = input.ReadString();
            break;
          }
          case 48: {
            SuggestedPower = input.ReadInt32();
            break;
          }
          case 56: {
            RecommendBuildRank = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            eET_.AddEntriesFrom(ref input, _repeated_eET_codec);
            break;
          }
          case 72: {
            Timelimit = input.ReadInt32();
            break;
          }
          case 80: {
            PreviewMonsterGroupId = input.ReadInt32();
            break;
          }
          case 88: {
            FloorId = input.ReadInt32();
            break;
          }
          case 96: {
            PreLevelId = input.ReadInt32();
            break;
          }
          case 104: {
            PreLevelStar = input.ReadInt32();
            break;
          }
          case 112: {
            UnlockWorldClass = input.ReadInt32();
            break;
          }
          case 120: {
            UnlockDuelLevel = input.ReadInt32();
            break;
          }
          case 128: {
            DuelExp = input.ReadInt32();
            break;
          }
          case 138: {
            BaseAwardPreview = input.ReadString();
            break;
          }
          case 144: {
            Affinity = input.ReadInt32();
            break;
          }
          case 154: {
            Icon = input.ReadString();
            break;
          }
          case 162:
          case 160: {
            skillShow_.AddEntriesFrom(ref input, _repeated_skillShow_codec);
            break;
          }
          case 170: {
            Cover = input.ReadString();
            break;
          }
          case 176: {
            SkinId = input.ReadInt32();
            break;
          }
          case 186:
          case 184: {
            extraDropPreview_.AddEntriesFrom(ref input, _repeated_extraDropPreview_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
