// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: InfinityTowerFloor.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from InfinityTowerFloor.proto</summary>
  public static partial class InfinityTowerFloorReflection {

    #region Descriptor
    /// <summary>File descriptor for InfinityTowerFloor.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InfinityTowerFloorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhJbmZpbml0eVRvd2VyRmxvb3IucHJvdG8i4QEKEkluZmluaXR5VG93ZXJG",
            "bG9vchIKCgJpZBgBIAEoBRINCgVsdl9pZBgCIAEoBRIOCgZtYXBfaWQYAyAB",
            "KAUSEQoJYmF0dGxlX2x2GAQgASgFEhIKCmZsb29yX2Z1bmMYBSABKAUSEgoK",
            "bW9uc3Rlcl9sdhgGIAEoBRINCgVzdGFnZRgHIAEoBRIOCgZzZXRfaWQYCCAB",
            "KAUSEgoKbGltaXRfdGltZRgJIAEoBRIgChhwcmV2aWV3X21vbnN0ZXJfZ3Jv",
            "dXBfaWQYCiABKAUSEAoIYWZmaXhfaWQYCyADKAVCDqoCC05vdmEuQ2xpZW50",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.InfinityTowerFloor), global::Nova.Client.InfinityTowerFloor.Parser, new[]{ "Id", "LvId", "MapId", "BattleLv", "FloorFunc", "MonsterLv", "Stage", "SetId", "LimitTime", "PreviewMonsterGroupId", "AffixId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InfinityTowerFloor : pb::IMessage<InfinityTowerFloor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfinityTowerFloor> _parser = new pb::MessageParser<InfinityTowerFloor>(() => new InfinityTowerFloor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InfinityTowerFloor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.InfinityTowerFloorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfinityTowerFloor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfinityTowerFloor(InfinityTowerFloor other) : this() {
      id_ = other.id_;
      lvId_ = other.lvId_;
      mapId_ = other.mapId_;
      battleLv_ = other.battleLv_;
      floorFunc_ = other.floorFunc_;
      monsterLv_ = other.monsterLv_;
      stage_ = other.stage_;
      setId_ = other.setId_;
      limitTime_ = other.limitTime_;
      previewMonsterGroupId_ = other.previewMonsterGroupId_;
      affixId_ = other.affixId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfinityTowerFloor Clone() {
      return new InfinityTowerFloor(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "lv_id" field.</summary>
    public const int LvIdFieldNumber = 2;
    private int lvId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LvId {
      get { return lvId_; }
      set {
        lvId_ = value;
      }
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 3;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "battle_lv" field.</summary>
    public const int BattleLvFieldNumber = 4;
    private int battleLv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BattleLv {
      get { return battleLv_; }
      set {
        battleLv_ = value;
      }
    }

    /// <summary>Field number for the "floor_func" field.</summary>
    public const int FloorFuncFieldNumber = 5;
    private int floorFunc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FloorFunc {
      get { return floorFunc_; }
      set {
        floorFunc_ = value;
      }
    }

    /// <summary>Field number for the "monster_lv" field.</summary>
    public const int MonsterLvFieldNumber = 6;
    private int monsterLv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MonsterLv {
      get { return monsterLv_; }
      set {
        monsterLv_ = value;
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 7;
    private int stage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "set_id" field.</summary>
    public const int SetIdFieldNumber = 8;
    private int setId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SetId {
      get { return setId_; }
      set {
        setId_ = value;
      }
    }

    /// <summary>Field number for the "limit_time" field.</summary>
    public const int LimitTimeFieldNumber = 9;
    private int limitTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LimitTime {
      get { return limitTime_; }
      set {
        limitTime_ = value;
      }
    }

    /// <summary>Field number for the "preview_monster_group_id" field.</summary>
    public const int PreviewMonsterGroupIdFieldNumber = 10;
    private int previewMonsterGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PreviewMonsterGroupId {
      get { return previewMonsterGroupId_; }
      set {
        previewMonsterGroupId_ = value;
      }
    }

    /// <summary>Field number for the "affix_id" field.</summary>
    public const int AffixIdFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_affixId_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> affixId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> AffixId {
      get { return affixId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InfinityTowerFloor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InfinityTowerFloor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (LvId != other.LvId) return false;
      if (MapId != other.MapId) return false;
      if (BattleLv != other.BattleLv) return false;
      if (FloorFunc != other.FloorFunc) return false;
      if (MonsterLv != other.MonsterLv) return false;
      if (Stage != other.Stage) return false;
      if (SetId != other.SetId) return false;
      if (LimitTime != other.LimitTime) return false;
      if (PreviewMonsterGroupId != other.PreviewMonsterGroupId) return false;
      if(!affixId_.Equals(other.affixId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (LvId != 0) hash ^= LvId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (BattleLv != 0) hash ^= BattleLv.GetHashCode();
      if (FloorFunc != 0) hash ^= FloorFunc.GetHashCode();
      if (MonsterLv != 0) hash ^= MonsterLv.GetHashCode();
      if (Stage != 0) hash ^= Stage.GetHashCode();
      if (SetId != 0) hash ^= SetId.GetHashCode();
      if (LimitTime != 0) hash ^= LimitTime.GetHashCode();
      if (PreviewMonsterGroupId != 0) hash ^= PreviewMonsterGroupId.GetHashCode();
      hash ^= affixId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (LvId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LvId);
      }
      if (MapId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MapId);
      }
      if (BattleLv != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BattleLv);
      }
      if (FloorFunc != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FloorFunc);
      }
      if (MonsterLv != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MonsterLv);
      }
      if (Stage != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Stage);
      }
      if (SetId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SetId);
      }
      if (LimitTime != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(LimitTime);
      }
      if (PreviewMonsterGroupId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(PreviewMonsterGroupId);
      }
      affixId_.WriteTo(output, _repeated_affixId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (LvId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LvId);
      }
      if (MapId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MapId);
      }
      if (BattleLv != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BattleLv);
      }
      if (FloorFunc != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FloorFunc);
      }
      if (MonsterLv != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MonsterLv);
      }
      if (Stage != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Stage);
      }
      if (SetId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SetId);
      }
      if (LimitTime != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(LimitTime);
      }
      if (PreviewMonsterGroupId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(PreviewMonsterGroupId);
      }
      affixId_.WriteTo(ref output, _repeated_affixId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (LvId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LvId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (BattleLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleLv);
      }
      if (FloorFunc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FloorFunc);
      }
      if (MonsterLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterLv);
      }
      if (Stage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stage);
      }
      if (SetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SetId);
      }
      if (LimitTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LimitTime);
      }
      if (PreviewMonsterGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PreviewMonsterGroupId);
      }
      size += affixId_.CalculateSize(_repeated_affixId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InfinityTowerFloor other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.LvId != 0) {
        LvId = other.LvId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.BattleLv != 0) {
        BattleLv = other.BattleLv;
      }
      if (other.FloorFunc != 0) {
        FloorFunc = other.FloorFunc;
      }
      if (other.MonsterLv != 0) {
        MonsterLv = other.MonsterLv;
      }
      if (other.Stage != 0) {
        Stage = other.Stage;
      }
      if (other.SetId != 0) {
        SetId = other.SetId;
      }
      if (other.LimitTime != 0) {
        LimitTime = other.LimitTime;
      }
      if (other.PreviewMonsterGroupId != 0) {
        PreviewMonsterGroupId = other.PreviewMonsterGroupId;
      }
      affixId_.Add(other.affixId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            LvId = input.ReadInt32();
            break;
          }
          case 24: {
            MapId = input.ReadInt32();
            break;
          }
          case 32: {
            BattleLv = input.ReadInt32();
            break;
          }
          case 40: {
            FloorFunc = input.ReadInt32();
            break;
          }
          case 48: {
            MonsterLv = input.ReadInt32();
            break;
          }
          case 56: {
            Stage = input.ReadInt32();
            break;
          }
          case 64: {
            SetId = input.ReadInt32();
            break;
          }
          case 72: {
            LimitTime = input.ReadInt32();
            break;
          }
          case 80: {
            PreviewMonsterGroupId = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            affixId_.AddEntriesFrom(input, _repeated_affixId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            LvId = input.ReadInt32();
            break;
          }
          case 24: {
            MapId = input.ReadInt32();
            break;
          }
          case 32: {
            BattleLv = input.ReadInt32();
            break;
          }
          case 40: {
            FloorFunc = input.ReadInt32();
            break;
          }
          case 48: {
            MonsterLv = input.ReadInt32();
            break;
          }
          case 56: {
            Stage = input.ReadInt32();
            break;
          }
          case 64: {
            SetId = input.ReadInt32();
            break;
          }
          case 72: {
            LimitTime = input.ReadInt32();
            break;
          }
          case 80: {
            PreviewMonsterGroupId = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            affixId_.AddEntriesFrom(ref input, _repeated_affixId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
