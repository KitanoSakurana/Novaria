// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OpenFunc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from OpenFunc.proto</summary>
  public static partial class OpenFuncReflection {

    #region Descriptor
    /// <summary>File descriptor for OpenFunc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OpenFuncReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5PcGVuRnVuYy5wcm90byKuAQoIT3BlbkZ1bmMSCgoCaWQYASABKAUSDAoE",
            "bmFtZRgCIAEoCRIYChBuZWVkX3dvcmxkX2NsYXNzGAMgASgFEhcKD25lZWRf",
            "Y29uZGl0aW9ucxgEIAEoBRIWCg5uZWVkX3JvZ3VlbGlrZRgFIAEoBRITCgtw",
            "b3Bfd2luZG93cxgGIAEoCBIMCgRkZXNjGAcgASgJEgwKBGljb24YCCABKAkS",
            "DAoEdGlwcxgJIAEoCUIOqgILTm92YS5DbGllbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.OpenFunc), global::Nova.Client.OpenFunc.Parser, new[]{ "Id", "Name", "NeedWorldClass", "NeedConditions", "NeedRoguelike", "PopWindows", "Desc", "Icon", "Tips" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OpenFunc : pb::IMessage<OpenFunc>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OpenFunc> _parser = new pb::MessageParser<OpenFunc>(() => new OpenFunc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OpenFunc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.OpenFuncReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenFunc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenFunc(OpenFunc other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      needWorldClass_ = other.needWorldClass_;
      needConditions_ = other.needConditions_;
      needRoguelike_ = other.needRoguelike_;
      popWindows_ = other.popWindows_;
      desc_ = other.desc_;
      icon_ = other.icon_;
      tips_ = other.tips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OpenFunc Clone() {
      return new OpenFunc(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "need_world_class" field.</summary>
    public const int NeedWorldClassFieldNumber = 3;
    private int needWorldClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NeedWorldClass {
      get { return needWorldClass_; }
      set {
        needWorldClass_ = value;
      }
    }

    /// <summary>Field number for the "need_conditions" field.</summary>
    public const int NeedConditionsFieldNumber = 4;
    private int needConditions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NeedConditions {
      get { return needConditions_; }
      set {
        needConditions_ = value;
      }
    }

    /// <summary>Field number for the "need_roguelike" field.</summary>
    public const int NeedRoguelikeFieldNumber = 5;
    private int needRoguelike_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NeedRoguelike {
      get { return needRoguelike_; }
      set {
        needRoguelike_ = value;
      }
    }

    /// <summary>Field number for the "pop_windows" field.</summary>
    public const int PopWindowsFieldNumber = 6;
    private bool popWindows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PopWindows {
      get { return popWindows_; }
      set {
        popWindows_ = value;
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 7;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 8;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tips" field.</summary>
    public const int TipsFieldNumber = 9;
    private string tips_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tips {
      get { return tips_; }
      set {
        tips_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OpenFunc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OpenFunc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (NeedWorldClass != other.NeedWorldClass) return false;
      if (NeedConditions != other.NeedConditions) return false;
      if (NeedRoguelike != other.NeedRoguelike) return false;
      if (PopWindows != other.PopWindows) return false;
      if (Desc != other.Desc) return false;
      if (Icon != other.Icon) return false;
      if (Tips != other.Tips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (NeedWorldClass != 0) hash ^= NeedWorldClass.GetHashCode();
      if (NeedConditions != 0) hash ^= NeedConditions.GetHashCode();
      if (NeedRoguelike != 0) hash ^= NeedRoguelike.GetHashCode();
      if (PopWindows != false) hash ^= PopWindows.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Tips.Length != 0) hash ^= Tips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (NeedWorldClass != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NeedWorldClass);
      }
      if (NeedConditions != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NeedConditions);
      }
      if (NeedRoguelike != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NeedRoguelike);
      }
      if (PopWindows != false) {
        output.WriteRawTag(48);
        output.WriteBool(PopWindows);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Desc);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Icon);
      }
      if (Tips.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Tips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (NeedWorldClass != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NeedWorldClass);
      }
      if (NeedConditions != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NeedConditions);
      }
      if (NeedRoguelike != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NeedRoguelike);
      }
      if (PopWindows != false) {
        output.WriteRawTag(48);
        output.WriteBool(PopWindows);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Desc);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Icon);
      }
      if (Tips.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Tips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (NeedWorldClass != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NeedWorldClass);
      }
      if (NeedConditions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NeedConditions);
      }
      if (NeedRoguelike != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NeedRoguelike);
      }
      if (PopWindows != false) {
        size += 1 + 1;
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Tips.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OpenFunc other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.NeedWorldClass != 0) {
        NeedWorldClass = other.NeedWorldClass;
      }
      if (other.NeedConditions != 0) {
        NeedConditions = other.NeedConditions;
      }
      if (other.NeedRoguelike != 0) {
        NeedRoguelike = other.NeedRoguelike;
      }
      if (other.PopWindows != false) {
        PopWindows = other.PopWindows;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Tips.Length != 0) {
        Tips = other.Tips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            NeedWorldClass = input.ReadInt32();
            break;
          }
          case 32: {
            NeedConditions = input.ReadInt32();
            break;
          }
          case 40: {
            NeedRoguelike = input.ReadInt32();
            break;
          }
          case 48: {
            PopWindows = input.ReadBool();
            break;
          }
          case 58: {
            Desc = input.ReadString();
            break;
          }
          case 66: {
            Icon = input.ReadString();
            break;
          }
          case 74: {
            Tips = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            NeedWorldClass = input.ReadInt32();
            break;
          }
          case 32: {
            NeedConditions = input.ReadInt32();
            break;
          }
          case 40: {
            NeedRoguelike = input.ReadInt32();
            break;
          }
          case 48: {
            PopWindows = input.ReadBool();
            break;
          }
          case 58: {
            Desc = input.ReadString();
            break;
          }
          case 66: {
            Icon = input.ReadString();
            break;
          }
          case 74: {
            Tips = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
