// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: InfinityTowerLevel.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from InfinityTowerLevel.proto</summary>
  public static partial class InfinityTowerLevelReflection {

    #region Descriptor
    /// <summary>File descriptor for InfinityTowerLevel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InfinityTowerLevelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhJbmZpbml0eVRvd2VyTGV2ZWwucHJvdG8ipQIKEkluZmluaXR5VG93ZXJM",
            "ZXZlbBIKCgJpZBgBIAEoBRIMCgRuYW1lGAIgASgJEhUKDWRpZmZpY3VsdHlf",
            "aWQYAyABKAUSEgoKbGV2ZWxfdHlwZRgEIAEoBRINCgVmbG9vchgFIAEoBRIQ",
            "CghmbG9vcl9pZBgGIAEoBRIUCgxwcmVfbGV2ZWxfaWQYByABKAUSEgoKZW50",
            "cnlfY29uZBgIIAEoBRIYChBlbnRyeV9jb25kX3BhcmFtGAkgAygFEhUKDWF3",
            "YXJkX2Ryb3BfaWQYCiABKAUSFAoMcmVjb21tZW5kX2x2GAsgASgFEhwKFHJl",
            "Y29tbWVuZF9idWlsZF9yYW5rGAwgASgFEhoKEmJhc2VfYXdhcmRfcHJldmll",
            "dxgNIAEoCUIOqgILTm92YS5DbGllbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.InfinityTowerLevel), global::Nova.Client.InfinityTowerLevel.Parser, new[]{ "Id", "Name", "DifficultyId", "LevelType", "Floor", "FloorId", "PreLevelId", "EntryCond", "EntryCondParam", "AwardDropId", "RecommendLv", "RecommendBuildRank", "BaseAwardPreview" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InfinityTowerLevel : pb::IMessage<InfinityTowerLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfinityTowerLevel> _parser = new pb::MessageParser<InfinityTowerLevel>(() => new InfinityTowerLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InfinityTowerLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.InfinityTowerLevelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfinityTowerLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfinityTowerLevel(InfinityTowerLevel other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      difficultyId_ = other.difficultyId_;
      levelType_ = other.levelType_;
      floor_ = other.floor_;
      floorId_ = other.floorId_;
      preLevelId_ = other.preLevelId_;
      entryCond_ = other.entryCond_;
      entryCondParam_ = other.entryCondParam_.Clone();
      awardDropId_ = other.awardDropId_;
      recommendLv_ = other.recommendLv_;
      recommendBuildRank_ = other.recommendBuildRank_;
      baseAwardPreview_ = other.baseAwardPreview_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfinityTowerLevel Clone() {
      return new InfinityTowerLevel(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "difficulty_id" field.</summary>
    public const int DifficultyIdFieldNumber = 3;
    private int difficultyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DifficultyId {
      get { return difficultyId_; }
      set {
        difficultyId_ = value;
      }
    }

    /// <summary>Field number for the "level_type" field.</summary>
    public const int LevelTypeFieldNumber = 4;
    private int levelType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LevelType {
      get { return levelType_; }
      set {
        levelType_ = value;
      }
    }

    /// <summary>Field number for the "floor" field.</summary>
    public const int FloorFieldNumber = 5;
    private int floor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Floor {
      get { return floor_; }
      set {
        floor_ = value;
      }
    }

    /// <summary>Field number for the "floor_id" field.</summary>
    public const int FloorIdFieldNumber = 6;
    private int floorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FloorId {
      get { return floorId_; }
      set {
        floorId_ = value;
      }
    }

    /// <summary>Field number for the "pre_level_id" field.</summary>
    public const int PreLevelIdFieldNumber = 7;
    private int preLevelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PreLevelId {
      get { return preLevelId_; }
      set {
        preLevelId_ = value;
      }
    }

    /// <summary>Field number for the "entry_cond" field.</summary>
    public const int EntryCondFieldNumber = 8;
    private int entryCond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EntryCond {
      get { return entryCond_; }
      set {
        entryCond_ = value;
      }
    }

    /// <summary>Field number for the "entry_cond_param" field.</summary>
    public const int EntryCondParamFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_entryCondParam_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> entryCondParam_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> EntryCondParam {
      get { return entryCondParam_; }
    }

    /// <summary>Field number for the "award_drop_id" field.</summary>
    public const int AwardDropIdFieldNumber = 10;
    private int awardDropId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AwardDropId {
      get { return awardDropId_; }
      set {
        awardDropId_ = value;
      }
    }

    /// <summary>Field number for the "recommend_lv" field.</summary>
    public const int RecommendLvFieldNumber = 11;
    private int recommendLv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecommendLv {
      get { return recommendLv_; }
      set {
        recommendLv_ = value;
      }
    }

    /// <summary>Field number for the "recommend_build_rank" field.</summary>
    public const int RecommendBuildRankFieldNumber = 12;
    private int recommendBuildRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecommendBuildRank {
      get { return recommendBuildRank_; }
      set {
        recommendBuildRank_ = value;
      }
    }

    /// <summary>Field number for the "base_award_preview" field.</summary>
    public const int BaseAwardPreviewFieldNumber = 13;
    private string baseAwardPreview_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BaseAwardPreview {
      get { return baseAwardPreview_; }
      set {
        baseAwardPreview_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InfinityTowerLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InfinityTowerLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (DifficultyId != other.DifficultyId) return false;
      if (LevelType != other.LevelType) return false;
      if (Floor != other.Floor) return false;
      if (FloorId != other.FloorId) return false;
      if (PreLevelId != other.PreLevelId) return false;
      if (EntryCond != other.EntryCond) return false;
      if(!entryCondParam_.Equals(other.entryCondParam_)) return false;
      if (AwardDropId != other.AwardDropId) return false;
      if (RecommendLv != other.RecommendLv) return false;
      if (RecommendBuildRank != other.RecommendBuildRank) return false;
      if (BaseAwardPreview != other.BaseAwardPreview) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DifficultyId != 0) hash ^= DifficultyId.GetHashCode();
      if (LevelType != 0) hash ^= LevelType.GetHashCode();
      if (Floor != 0) hash ^= Floor.GetHashCode();
      if (FloorId != 0) hash ^= FloorId.GetHashCode();
      if (PreLevelId != 0) hash ^= PreLevelId.GetHashCode();
      if (EntryCond != 0) hash ^= EntryCond.GetHashCode();
      hash ^= entryCondParam_.GetHashCode();
      if (AwardDropId != 0) hash ^= AwardDropId.GetHashCode();
      if (RecommendLv != 0) hash ^= RecommendLv.GetHashCode();
      if (RecommendBuildRank != 0) hash ^= RecommendBuildRank.GetHashCode();
      if (BaseAwardPreview.Length != 0) hash ^= BaseAwardPreview.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (DifficultyId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DifficultyId);
      }
      if (LevelType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LevelType);
      }
      if (Floor != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Floor);
      }
      if (FloorId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FloorId);
      }
      if (PreLevelId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PreLevelId);
      }
      if (EntryCond != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EntryCond);
      }
      entryCondParam_.WriteTo(output, _repeated_entryCondParam_codec);
      if (AwardDropId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(AwardDropId);
      }
      if (RecommendLv != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(RecommendLv);
      }
      if (RecommendBuildRank != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RecommendBuildRank);
      }
      if (BaseAwardPreview.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(BaseAwardPreview);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (DifficultyId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DifficultyId);
      }
      if (LevelType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LevelType);
      }
      if (Floor != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Floor);
      }
      if (FloorId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FloorId);
      }
      if (PreLevelId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PreLevelId);
      }
      if (EntryCond != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EntryCond);
      }
      entryCondParam_.WriteTo(ref output, _repeated_entryCondParam_codec);
      if (AwardDropId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(AwardDropId);
      }
      if (RecommendLv != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(RecommendLv);
      }
      if (RecommendBuildRank != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RecommendBuildRank);
      }
      if (BaseAwardPreview.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(BaseAwardPreview);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DifficultyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DifficultyId);
      }
      if (LevelType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelType);
      }
      if (Floor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Floor);
      }
      if (FloorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FloorId);
      }
      if (PreLevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PreLevelId);
      }
      if (EntryCond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntryCond);
      }
      size += entryCondParam_.CalculateSize(_repeated_entryCondParam_codec);
      if (AwardDropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardDropId);
      }
      if (RecommendLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecommendLv);
      }
      if (RecommendBuildRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecommendBuildRank);
      }
      if (BaseAwardPreview.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseAwardPreview);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InfinityTowerLevel other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DifficultyId != 0) {
        DifficultyId = other.DifficultyId;
      }
      if (other.LevelType != 0) {
        LevelType = other.LevelType;
      }
      if (other.Floor != 0) {
        Floor = other.Floor;
      }
      if (other.FloorId != 0) {
        FloorId = other.FloorId;
      }
      if (other.PreLevelId != 0) {
        PreLevelId = other.PreLevelId;
      }
      if (other.EntryCond != 0) {
        EntryCond = other.EntryCond;
      }
      entryCondParam_.Add(other.entryCondParam_);
      if (other.AwardDropId != 0) {
        AwardDropId = other.AwardDropId;
      }
      if (other.RecommendLv != 0) {
        RecommendLv = other.RecommendLv;
      }
      if (other.RecommendBuildRank != 0) {
        RecommendBuildRank = other.RecommendBuildRank;
      }
      if (other.BaseAwardPreview.Length != 0) {
        BaseAwardPreview = other.BaseAwardPreview;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            DifficultyId = input.ReadInt32();
            break;
          }
          case 32: {
            LevelType = input.ReadInt32();
            break;
          }
          case 40: {
            Floor = input.ReadInt32();
            break;
          }
          case 48: {
            FloorId = input.ReadInt32();
            break;
          }
          case 56: {
            PreLevelId = input.ReadInt32();
            break;
          }
          case 64: {
            EntryCond = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            entryCondParam_.AddEntriesFrom(input, _repeated_entryCondParam_codec);
            break;
          }
          case 80: {
            AwardDropId = input.ReadInt32();
            break;
          }
          case 88: {
            RecommendLv = input.ReadInt32();
            break;
          }
          case 96: {
            RecommendBuildRank = input.ReadInt32();
            break;
          }
          case 106: {
            BaseAwardPreview = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            DifficultyId = input.ReadInt32();
            break;
          }
          case 32: {
            LevelType = input.ReadInt32();
            break;
          }
          case 40: {
            Floor = input.ReadInt32();
            break;
          }
          case 48: {
            FloorId = input.ReadInt32();
            break;
          }
          case 56: {
            PreLevelId = input.ReadInt32();
            break;
          }
          case 64: {
            EntryCond = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            entryCondParam_.AddEntriesFrom(ref input, _repeated_entryCondParam_codec);
            break;
          }
          case 80: {
            AwardDropId = input.ReadInt32();
            break;
          }
          case 88: {
            RecommendLv = input.ReadInt32();
            break;
          }
          case 96: {
            RecommendBuildRank = input.ReadInt32();
            break;
          }
          case 106: {
            BaseAwardPreview = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
