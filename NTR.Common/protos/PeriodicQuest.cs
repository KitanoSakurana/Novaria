// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PeriodicQuest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from PeriodicQuest.proto</summary>
  public static partial class PeriodicQuestReflection {

    #region Descriptor
    /// <summary>File descriptor for PeriodicQuest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PeriodicQuestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQZXJpb2RpY1F1ZXN0LnByb3RvIoABCg1QZXJpb2RpY1F1ZXN0EgoKAmlk",
            "GAEgASgFEg4KBmJlbG9uZxgCIAEoBRIPCgdncm91cGlkGAMgASgFEg0KBXRp",
            "dGxlGAQgASgJEg8KB2p1bXBfdG8YBSABKAUSDgoGcmV3YXJkGAYgASgFEhIK",
            "CnJld2FyZF9xdHkYByABKAVCDqoCC05vdmEuQ2xpZW50YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.PeriodicQuest), global::Nova.Client.PeriodicQuest.Parser, new[]{ "Id", "Belong", "Groupid", "Title", "JumpTo", "Reward", "RewardQty" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PeriodicQuest : pb::IMessage<PeriodicQuest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PeriodicQuest> _parser = new pb::MessageParser<PeriodicQuest>(() => new PeriodicQuest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PeriodicQuest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.PeriodicQuestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PeriodicQuest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PeriodicQuest(PeriodicQuest other) : this() {
      id_ = other.id_;
      belong_ = other.belong_;
      groupid_ = other.groupid_;
      title_ = other.title_;
      jumpTo_ = other.jumpTo_;
      reward_ = other.reward_;
      rewardQty_ = other.rewardQty_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PeriodicQuest Clone() {
      return new PeriodicQuest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "belong" field.</summary>
    public const int BelongFieldNumber = 2;
    private int belong_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Belong {
      get { return belong_; }
      set {
        belong_ = value;
      }
    }

    /// <summary>Field number for the "groupid" field.</summary>
    public const int GroupidFieldNumber = 3;
    private int groupid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Groupid {
      get { return groupid_; }
      set {
        groupid_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 4;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jump_to" field.</summary>
    public const int JumpToFieldNumber = 5;
    private int jumpTo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JumpTo {
      get { return jumpTo_; }
      set {
        jumpTo_ = value;
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 6;
    private int reward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Reward {
      get { return reward_; }
      set {
        reward_ = value;
      }
    }

    /// <summary>Field number for the "reward_qty" field.</summary>
    public const int RewardQtyFieldNumber = 7;
    private int rewardQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardQty {
      get { return rewardQty_; }
      set {
        rewardQty_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PeriodicQuest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PeriodicQuest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Belong != other.Belong) return false;
      if (Groupid != other.Groupid) return false;
      if (Title != other.Title) return false;
      if (JumpTo != other.JumpTo) return false;
      if (Reward != other.Reward) return false;
      if (RewardQty != other.RewardQty) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Belong != 0) hash ^= Belong.GetHashCode();
      if (Groupid != 0) hash ^= Groupid.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (JumpTo != 0) hash ^= JumpTo.GetHashCode();
      if (Reward != 0) hash ^= Reward.GetHashCode();
      if (RewardQty != 0) hash ^= RewardQty.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Belong != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Belong);
      }
      if (Groupid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Groupid);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (JumpTo != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(JumpTo);
      }
      if (Reward != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Reward);
      }
      if (RewardQty != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RewardQty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Belong != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Belong);
      }
      if (Groupid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Groupid);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (JumpTo != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(JumpTo);
      }
      if (Reward != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Reward);
      }
      if (RewardQty != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RewardQty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Belong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Belong);
      }
      if (Groupid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Groupid);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (JumpTo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JumpTo);
      }
      if (Reward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Reward);
      }
      if (RewardQty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardQty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PeriodicQuest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Belong != 0) {
        Belong = other.Belong;
      }
      if (other.Groupid != 0) {
        Groupid = other.Groupid;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.JumpTo != 0) {
        JumpTo = other.JumpTo;
      }
      if (other.Reward != 0) {
        Reward = other.Reward;
      }
      if (other.RewardQty != 0) {
        RewardQty = other.RewardQty;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Belong = input.ReadInt32();
            break;
          }
          case 24: {
            Groupid = input.ReadInt32();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 40: {
            JumpTo = input.ReadInt32();
            break;
          }
          case 48: {
            Reward = input.ReadInt32();
            break;
          }
          case 56: {
            RewardQty = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Belong = input.ReadInt32();
            break;
          }
          case 24: {
            Groupid = input.ReadInt32();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 40: {
            JumpTo = input.ReadInt32();
            break;
          }
          case 48: {
            Reward = input.ReadInt32();
            break;
          }
          case 56: {
            RewardQty = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
