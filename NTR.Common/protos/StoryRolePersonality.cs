// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: StoryRolePersonality.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from StoryRolePersonality.proto</summary>
  public static partial class StoryRolePersonalityReflection {

    #region Descriptor
    /// <summary>File descriptor for StoryRolePersonality.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StoryRolePersonalityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpTdG9yeVJvbGVQZXJzb25hbGl0eS5wcm90byKpAwoUU3RvcnlSb2xlUGVy",
            "c29uYWxpdHkSCgoCaWQYASABKAUSEwoLYXZnX2NoYXJfaWQYAiABKAkSFAoM",
            "cGVyc29uYWxpdHlzGAMgAygFEhIKCmJhc2VfdmFsdWUYBCADKAUSDAoEYW1h",
            "eBgFIAEoCRIRCglhbWF4X2ZhY2UYBiABKAkSDAoEYm1heBgHIAEoCRIRCgli",
            "bWF4X2ZhY2UYCCABKAkSDAoEY21heBgJIAEoCRIRCgljbWF4X2ZhY2UYCiAB",
            "KAkSDQoFYXBsdXMYCyABKAkSEgoKYXBsdXNfZmFjZRgMIAEoCRINCgVicGx1",
            "cxgNIAEoCRISCgpicGx1c19mYWNlGA4gASgJEg0KBWNwbHVzGA8gASgJEhIK",
            "CmNwbHVzX2ZhY2UYECABKAkSCgoCYWIYESABKAkSDwoHYWJfZmFjZRgSIAEo",
            "CRIKCgJhYxgTIAEoCRIPCgdhY19mYWNlGBQgASgJEgoKAmJjGBUgASgJEg8K",
            "B2JjX2ZhY2UYFiABKAkSDgoGbm9ybWFsGBcgASgJEhMKC25vcm1hbF9mYWNl",
            "GBggASgJQg6qAgtOb3ZhLkNsaWVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.StoryRolePersonality), global::Nova.Client.StoryRolePersonality.Parser, new[]{ "Id", "AvgCharId", "Personalitys", "BaseValue", "Amax", "AmaxFace", "Bmax", "BmaxFace", "Cmax", "CmaxFace", "Aplus", "AplusFace", "Bplus", "BplusFace", "Cplus", "CplusFace", "Ab", "AbFace", "Ac", "AcFace", "Bc", "BcFace", "Normal", "NormalFace" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StoryRolePersonality : pb::IMessage<StoryRolePersonality>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StoryRolePersonality> _parser = new pb::MessageParser<StoryRolePersonality>(() => new StoryRolePersonality());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StoryRolePersonality> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.StoryRolePersonalityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StoryRolePersonality() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StoryRolePersonality(StoryRolePersonality other) : this() {
      id_ = other.id_;
      avgCharId_ = other.avgCharId_;
      personalitys_ = other.personalitys_.Clone();
      baseValue_ = other.baseValue_.Clone();
      amax_ = other.amax_;
      amaxFace_ = other.amaxFace_;
      bmax_ = other.bmax_;
      bmaxFace_ = other.bmaxFace_;
      cmax_ = other.cmax_;
      cmaxFace_ = other.cmaxFace_;
      aplus_ = other.aplus_;
      aplusFace_ = other.aplusFace_;
      bplus_ = other.bplus_;
      bplusFace_ = other.bplusFace_;
      cplus_ = other.cplus_;
      cplusFace_ = other.cplusFace_;
      ab_ = other.ab_;
      abFace_ = other.abFace_;
      ac_ = other.ac_;
      acFace_ = other.acFace_;
      bc_ = other.bc_;
      bcFace_ = other.bcFace_;
      normal_ = other.normal_;
      normalFace_ = other.normalFace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StoryRolePersonality Clone() {
      return new StoryRolePersonality(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "avg_char_id" field.</summary>
    public const int AvgCharIdFieldNumber = 2;
    private string avgCharId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvgCharId {
      get { return avgCharId_; }
      set {
        avgCharId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "personalitys" field.</summary>
    public const int PersonalitysFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_personalitys_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> personalitys_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Personalitys {
      get { return personalitys_; }
    }

    /// <summary>Field number for the "base_value" field.</summary>
    public const int BaseValueFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_baseValue_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> baseValue_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BaseValue {
      get { return baseValue_; }
    }

    /// <summary>Field number for the "amax" field.</summary>
    public const int AmaxFieldNumber = 5;
    private string amax_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Amax {
      get { return amax_; }
      set {
        amax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amax_face" field.</summary>
    public const int AmaxFaceFieldNumber = 6;
    private string amaxFace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AmaxFace {
      get { return amaxFace_; }
      set {
        amaxFace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bmax" field.</summary>
    public const int BmaxFieldNumber = 7;
    private string bmax_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Bmax {
      get { return bmax_; }
      set {
        bmax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bmax_face" field.</summary>
    public const int BmaxFaceFieldNumber = 8;
    private string bmaxFace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BmaxFace {
      get { return bmaxFace_; }
      set {
        bmaxFace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cmax" field.</summary>
    public const int CmaxFieldNumber = 9;
    private string cmax_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Cmax {
      get { return cmax_; }
      set {
        cmax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cmax_face" field.</summary>
    public const int CmaxFaceFieldNumber = 10;
    private string cmaxFace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CmaxFace {
      get { return cmaxFace_; }
      set {
        cmaxFace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aplus" field.</summary>
    public const int AplusFieldNumber = 11;
    private string aplus_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Aplus {
      get { return aplus_; }
      set {
        aplus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aplus_face" field.</summary>
    public const int AplusFaceFieldNumber = 12;
    private string aplusFace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AplusFace {
      get { return aplusFace_; }
      set {
        aplusFace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bplus" field.</summary>
    public const int BplusFieldNumber = 13;
    private string bplus_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Bplus {
      get { return bplus_; }
      set {
        bplus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bplus_face" field.</summary>
    public const int BplusFaceFieldNumber = 14;
    private string bplusFace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BplusFace {
      get { return bplusFace_; }
      set {
        bplusFace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cplus" field.</summary>
    public const int CplusFieldNumber = 15;
    private string cplus_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Cplus {
      get { return cplus_; }
      set {
        cplus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cplus_face" field.</summary>
    public const int CplusFaceFieldNumber = 16;
    private string cplusFace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CplusFace {
      get { return cplusFace_; }
      set {
        cplusFace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ab" field.</summary>
    public const int AbFieldNumber = 17;
    private string ab_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ab {
      get { return ab_; }
      set {
        ab_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ab_face" field.</summary>
    public const int AbFaceFieldNumber = 18;
    private string abFace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AbFace {
      get { return abFace_; }
      set {
        abFace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ac" field.</summary>
    public const int AcFieldNumber = 19;
    private string ac_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ac {
      get { return ac_; }
      set {
        ac_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ac_face" field.</summary>
    public const int AcFaceFieldNumber = 20;
    private string acFace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AcFace {
      get { return acFace_; }
      set {
        acFace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bc" field.</summary>
    public const int BcFieldNumber = 21;
    private string bc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Bc {
      get { return bc_; }
      set {
        bc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bc_face" field.</summary>
    public const int BcFaceFieldNumber = 22;
    private string bcFace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BcFace {
      get { return bcFace_; }
      set {
        bcFace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "normal" field.</summary>
    public const int NormalFieldNumber = 23;
    private string normal_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Normal {
      get { return normal_; }
      set {
        normal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "normal_face" field.</summary>
    public const int NormalFaceFieldNumber = 24;
    private string normalFace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NormalFace {
      get { return normalFace_; }
      set {
        normalFace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StoryRolePersonality);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StoryRolePersonality other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AvgCharId != other.AvgCharId) return false;
      if(!personalitys_.Equals(other.personalitys_)) return false;
      if(!baseValue_.Equals(other.baseValue_)) return false;
      if (Amax != other.Amax) return false;
      if (AmaxFace != other.AmaxFace) return false;
      if (Bmax != other.Bmax) return false;
      if (BmaxFace != other.BmaxFace) return false;
      if (Cmax != other.Cmax) return false;
      if (CmaxFace != other.CmaxFace) return false;
      if (Aplus != other.Aplus) return false;
      if (AplusFace != other.AplusFace) return false;
      if (Bplus != other.Bplus) return false;
      if (BplusFace != other.BplusFace) return false;
      if (Cplus != other.Cplus) return false;
      if (CplusFace != other.CplusFace) return false;
      if (Ab != other.Ab) return false;
      if (AbFace != other.AbFace) return false;
      if (Ac != other.Ac) return false;
      if (AcFace != other.AcFace) return false;
      if (Bc != other.Bc) return false;
      if (BcFace != other.BcFace) return false;
      if (Normal != other.Normal) return false;
      if (NormalFace != other.NormalFace) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (AvgCharId.Length != 0) hash ^= AvgCharId.GetHashCode();
      hash ^= personalitys_.GetHashCode();
      hash ^= baseValue_.GetHashCode();
      if (Amax.Length != 0) hash ^= Amax.GetHashCode();
      if (AmaxFace.Length != 0) hash ^= AmaxFace.GetHashCode();
      if (Bmax.Length != 0) hash ^= Bmax.GetHashCode();
      if (BmaxFace.Length != 0) hash ^= BmaxFace.GetHashCode();
      if (Cmax.Length != 0) hash ^= Cmax.GetHashCode();
      if (CmaxFace.Length != 0) hash ^= CmaxFace.GetHashCode();
      if (Aplus.Length != 0) hash ^= Aplus.GetHashCode();
      if (AplusFace.Length != 0) hash ^= AplusFace.GetHashCode();
      if (Bplus.Length != 0) hash ^= Bplus.GetHashCode();
      if (BplusFace.Length != 0) hash ^= BplusFace.GetHashCode();
      if (Cplus.Length != 0) hash ^= Cplus.GetHashCode();
      if (CplusFace.Length != 0) hash ^= CplusFace.GetHashCode();
      if (Ab.Length != 0) hash ^= Ab.GetHashCode();
      if (AbFace.Length != 0) hash ^= AbFace.GetHashCode();
      if (Ac.Length != 0) hash ^= Ac.GetHashCode();
      if (AcFace.Length != 0) hash ^= AcFace.GetHashCode();
      if (Bc.Length != 0) hash ^= Bc.GetHashCode();
      if (BcFace.Length != 0) hash ^= BcFace.GetHashCode();
      if (Normal.Length != 0) hash ^= Normal.GetHashCode();
      if (NormalFace.Length != 0) hash ^= NormalFace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (AvgCharId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AvgCharId);
      }
      personalitys_.WriteTo(output, _repeated_personalitys_codec);
      baseValue_.WriteTo(output, _repeated_baseValue_codec);
      if (Amax.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Amax);
      }
      if (AmaxFace.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AmaxFace);
      }
      if (Bmax.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Bmax);
      }
      if (BmaxFace.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BmaxFace);
      }
      if (Cmax.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Cmax);
      }
      if (CmaxFace.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CmaxFace);
      }
      if (Aplus.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Aplus);
      }
      if (AplusFace.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AplusFace);
      }
      if (Bplus.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Bplus);
      }
      if (BplusFace.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(BplusFace);
      }
      if (Cplus.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Cplus);
      }
      if (CplusFace.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CplusFace);
      }
      if (Ab.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Ab);
      }
      if (AbFace.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(AbFace);
      }
      if (Ac.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Ac);
      }
      if (AcFace.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(AcFace);
      }
      if (Bc.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Bc);
      }
      if (BcFace.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(BcFace);
      }
      if (Normal.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Normal);
      }
      if (NormalFace.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(NormalFace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (AvgCharId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AvgCharId);
      }
      personalitys_.WriteTo(ref output, _repeated_personalitys_codec);
      baseValue_.WriteTo(ref output, _repeated_baseValue_codec);
      if (Amax.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Amax);
      }
      if (AmaxFace.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AmaxFace);
      }
      if (Bmax.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Bmax);
      }
      if (BmaxFace.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BmaxFace);
      }
      if (Cmax.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Cmax);
      }
      if (CmaxFace.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CmaxFace);
      }
      if (Aplus.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Aplus);
      }
      if (AplusFace.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AplusFace);
      }
      if (Bplus.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Bplus);
      }
      if (BplusFace.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(BplusFace);
      }
      if (Cplus.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Cplus);
      }
      if (CplusFace.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CplusFace);
      }
      if (Ab.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Ab);
      }
      if (AbFace.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(AbFace);
      }
      if (Ac.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Ac);
      }
      if (AcFace.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(AcFace);
      }
      if (Bc.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Bc);
      }
      if (BcFace.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(BcFace);
      }
      if (Normal.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Normal);
      }
      if (NormalFace.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(NormalFace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (AvgCharId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvgCharId);
      }
      size += personalitys_.CalculateSize(_repeated_personalitys_codec);
      size += baseValue_.CalculateSize(_repeated_baseValue_codec);
      if (Amax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Amax);
      }
      if (AmaxFace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AmaxFace);
      }
      if (Bmax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bmax);
      }
      if (BmaxFace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BmaxFace);
      }
      if (Cmax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cmax);
      }
      if (CmaxFace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CmaxFace);
      }
      if (Aplus.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Aplus);
      }
      if (AplusFace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AplusFace);
      }
      if (Bplus.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bplus);
      }
      if (BplusFace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BplusFace);
      }
      if (Cplus.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cplus);
      }
      if (CplusFace.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CplusFace);
      }
      if (Ab.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Ab);
      }
      if (AbFace.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AbFace);
      }
      if (Ac.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Ac);
      }
      if (AcFace.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AcFace);
      }
      if (Bc.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Bc);
      }
      if (BcFace.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BcFace);
      }
      if (Normal.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Normal);
      }
      if (NormalFace.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NormalFace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StoryRolePersonality other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.AvgCharId.Length != 0) {
        AvgCharId = other.AvgCharId;
      }
      personalitys_.Add(other.personalitys_);
      baseValue_.Add(other.baseValue_);
      if (other.Amax.Length != 0) {
        Amax = other.Amax;
      }
      if (other.AmaxFace.Length != 0) {
        AmaxFace = other.AmaxFace;
      }
      if (other.Bmax.Length != 0) {
        Bmax = other.Bmax;
      }
      if (other.BmaxFace.Length != 0) {
        BmaxFace = other.BmaxFace;
      }
      if (other.Cmax.Length != 0) {
        Cmax = other.Cmax;
      }
      if (other.CmaxFace.Length != 0) {
        CmaxFace = other.CmaxFace;
      }
      if (other.Aplus.Length != 0) {
        Aplus = other.Aplus;
      }
      if (other.AplusFace.Length != 0) {
        AplusFace = other.AplusFace;
      }
      if (other.Bplus.Length != 0) {
        Bplus = other.Bplus;
      }
      if (other.BplusFace.Length != 0) {
        BplusFace = other.BplusFace;
      }
      if (other.Cplus.Length != 0) {
        Cplus = other.Cplus;
      }
      if (other.CplusFace.Length != 0) {
        CplusFace = other.CplusFace;
      }
      if (other.Ab.Length != 0) {
        Ab = other.Ab;
      }
      if (other.AbFace.Length != 0) {
        AbFace = other.AbFace;
      }
      if (other.Ac.Length != 0) {
        Ac = other.Ac;
      }
      if (other.AcFace.Length != 0) {
        AcFace = other.AcFace;
      }
      if (other.Bc.Length != 0) {
        Bc = other.Bc;
      }
      if (other.BcFace.Length != 0) {
        BcFace = other.BcFace;
      }
      if (other.Normal.Length != 0) {
        Normal = other.Normal;
      }
      if (other.NormalFace.Length != 0) {
        NormalFace = other.NormalFace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            AvgCharId = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            personalitys_.AddEntriesFrom(input, _repeated_personalitys_codec);
            break;
          }
          case 34:
          case 32: {
            baseValue_.AddEntriesFrom(input, _repeated_baseValue_codec);
            break;
          }
          case 42: {
            Amax = input.ReadString();
            break;
          }
          case 50: {
            AmaxFace = input.ReadString();
            break;
          }
          case 58: {
            Bmax = input.ReadString();
            break;
          }
          case 66: {
            BmaxFace = input.ReadString();
            break;
          }
          case 74: {
            Cmax = input.ReadString();
            break;
          }
          case 82: {
            CmaxFace = input.ReadString();
            break;
          }
          case 90: {
            Aplus = input.ReadString();
            break;
          }
          case 98: {
            AplusFace = input.ReadString();
            break;
          }
          case 106: {
            Bplus = input.ReadString();
            break;
          }
          case 114: {
            BplusFace = input.ReadString();
            break;
          }
          case 122: {
            Cplus = input.ReadString();
            break;
          }
          case 130: {
            CplusFace = input.ReadString();
            break;
          }
          case 138: {
            Ab = input.ReadString();
            break;
          }
          case 146: {
            AbFace = input.ReadString();
            break;
          }
          case 154: {
            Ac = input.ReadString();
            break;
          }
          case 162: {
            AcFace = input.ReadString();
            break;
          }
          case 170: {
            Bc = input.ReadString();
            break;
          }
          case 178: {
            BcFace = input.ReadString();
            break;
          }
          case 186: {
            Normal = input.ReadString();
            break;
          }
          case 194: {
            NormalFace = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            AvgCharId = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            personalitys_.AddEntriesFrom(ref input, _repeated_personalitys_codec);
            break;
          }
          case 34:
          case 32: {
            baseValue_.AddEntriesFrom(ref input, _repeated_baseValue_codec);
            break;
          }
          case 42: {
            Amax = input.ReadString();
            break;
          }
          case 50: {
            AmaxFace = input.ReadString();
            break;
          }
          case 58: {
            Bmax = input.ReadString();
            break;
          }
          case 66: {
            BmaxFace = input.ReadString();
            break;
          }
          case 74: {
            Cmax = input.ReadString();
            break;
          }
          case 82: {
            CmaxFace = input.ReadString();
            break;
          }
          case 90: {
            Aplus = input.ReadString();
            break;
          }
          case 98: {
            AplusFace = input.ReadString();
            break;
          }
          case 106: {
            Bplus = input.ReadString();
            break;
          }
          case 114: {
            BplusFace = input.ReadString();
            break;
          }
          case 122: {
            Cplus = input.ReadString();
            break;
          }
          case 130: {
            CplusFace = input.ReadString();
            break;
          }
          case 138: {
            Ab = input.ReadString();
            break;
          }
          case 146: {
            AbFace = input.ReadString();
            break;
          }
          case 154: {
            Ac = input.ReadString();
            break;
          }
          case 162: {
            AcFace = input.ReadString();
            break;
          }
          case 170: {
            Bc = input.ReadString();
            break;
          }
          case 178: {
            BcFace = input.ReadString();
            break;
          }
          case 186: {
            Normal = input.ReadString();
            break;
          }
          case 194: {
            NormalFace = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
