// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: InfinityTower.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from InfinityTower.proto</summary>
  public static partial class InfinityTowerReflection {

    #region Descriptor
    /// <summary>File descriptor for InfinityTower.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InfinityTowerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNJbmZpbml0eVRvd2VyLnByb3RvIq4BCg1JbmZpbml0eVRvd2VyEgoKAmlk",
            "GAEgASgFEgwKBG5hbWUYAiABKAkSFAoMZWxlbWVudF90eXBlGAMgASgFEhwK",
            "FGZvcm1hdGlvbl9zY2VuZV9uYW1lGAQgASgJEgoKAmJnGAUgASgJEhoKEnBy",
            "ZV90b3dlcl9sZXZlbF9pZBgGIAEoBRIQCghvcGVuX2RheRgHIAMoBRIVCg1v",
            "cGVuX2RheV9kZXNjGAggASgJQg6qAgtOb3ZhLkNsaWVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.InfinityTower), global::Nova.Client.InfinityTower.Parser, new[]{ "Id", "Name", "ElementType", "FormationSceneName", "Bg", "PreTowerLevelId", "OpenDay", "OpenDayDesc" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InfinityTower : pb::IMessage<InfinityTower>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfinityTower> _parser = new pb::MessageParser<InfinityTower>(() => new InfinityTower());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InfinityTower> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.InfinityTowerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfinityTower() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfinityTower(InfinityTower other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      elementType_ = other.elementType_;
      formationSceneName_ = other.formationSceneName_;
      bg_ = other.bg_;
      preTowerLevelId_ = other.preTowerLevelId_;
      openDay_ = other.openDay_.Clone();
      openDayDesc_ = other.openDayDesc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfinityTower Clone() {
      return new InfinityTower(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "element_type" field.</summary>
    public const int ElementTypeFieldNumber = 3;
    private int elementType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ElementType {
      get { return elementType_; }
      set {
        elementType_ = value;
      }
    }

    /// <summary>Field number for the "formation_scene_name" field.</summary>
    public const int FormationSceneNameFieldNumber = 4;
    private string formationSceneName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FormationSceneName {
      get { return formationSceneName_; }
      set {
        formationSceneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bg" field.</summary>
    public const int BgFieldNumber = 5;
    private string bg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Bg {
      get { return bg_; }
      set {
        bg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pre_tower_level_id" field.</summary>
    public const int PreTowerLevelIdFieldNumber = 6;
    private int preTowerLevelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PreTowerLevelId {
      get { return preTowerLevelId_; }
      set {
        preTowerLevelId_ = value;
      }
    }

    /// <summary>Field number for the "open_day" field.</summary>
    public const int OpenDayFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_openDay_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> openDay_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> OpenDay {
      get { return openDay_; }
    }

    /// <summary>Field number for the "open_day_desc" field.</summary>
    public const int OpenDayDescFieldNumber = 8;
    private string openDayDesc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OpenDayDesc {
      get { return openDayDesc_; }
      set {
        openDayDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InfinityTower);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InfinityTower other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (ElementType != other.ElementType) return false;
      if (FormationSceneName != other.FormationSceneName) return false;
      if (Bg != other.Bg) return false;
      if (PreTowerLevelId != other.PreTowerLevelId) return false;
      if(!openDay_.Equals(other.openDay_)) return false;
      if (OpenDayDesc != other.OpenDayDesc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ElementType != 0) hash ^= ElementType.GetHashCode();
      if (FormationSceneName.Length != 0) hash ^= FormationSceneName.GetHashCode();
      if (Bg.Length != 0) hash ^= Bg.GetHashCode();
      if (PreTowerLevelId != 0) hash ^= PreTowerLevelId.GetHashCode();
      hash ^= openDay_.GetHashCode();
      if (OpenDayDesc.Length != 0) hash ^= OpenDayDesc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (ElementType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ElementType);
      }
      if (FormationSceneName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FormationSceneName);
      }
      if (Bg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Bg);
      }
      if (PreTowerLevelId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PreTowerLevelId);
      }
      openDay_.WriteTo(output, _repeated_openDay_codec);
      if (OpenDayDesc.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OpenDayDesc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (ElementType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ElementType);
      }
      if (FormationSceneName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FormationSceneName);
      }
      if (Bg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Bg);
      }
      if (PreTowerLevelId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PreTowerLevelId);
      }
      openDay_.WriteTo(ref output, _repeated_openDay_codec);
      if (OpenDayDesc.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OpenDayDesc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ElementType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElementType);
      }
      if (FormationSceneName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormationSceneName);
      }
      if (Bg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bg);
      }
      if (PreTowerLevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PreTowerLevelId);
      }
      size += openDay_.CalculateSize(_repeated_openDay_codec);
      if (OpenDayDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenDayDesc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InfinityTower other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ElementType != 0) {
        ElementType = other.ElementType;
      }
      if (other.FormationSceneName.Length != 0) {
        FormationSceneName = other.FormationSceneName;
      }
      if (other.Bg.Length != 0) {
        Bg = other.Bg;
      }
      if (other.PreTowerLevelId != 0) {
        PreTowerLevelId = other.PreTowerLevelId;
      }
      openDay_.Add(other.openDay_);
      if (other.OpenDayDesc.Length != 0) {
        OpenDayDesc = other.OpenDayDesc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            ElementType = input.ReadInt32();
            break;
          }
          case 34: {
            FormationSceneName = input.ReadString();
            break;
          }
          case 42: {
            Bg = input.ReadString();
            break;
          }
          case 48: {
            PreTowerLevelId = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            openDay_.AddEntriesFrom(input, _repeated_openDay_codec);
            break;
          }
          case 66: {
            OpenDayDesc = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            ElementType = input.ReadInt32();
            break;
          }
          case 34: {
            FormationSceneName = input.ReadString();
            break;
          }
          case 42: {
            Bg = input.ReadString();
            break;
          }
          case 48: {
            PreTowerLevelId = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            openDay_.AddEntriesFrom(ref input, _repeated_openDay_codec);
            break;
          }
          case 66: {
            OpenDayDesc = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
