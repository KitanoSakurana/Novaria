// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TopBar.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from TopBar.proto</summary>
  public static partial class TopBarReflection {

    #region Descriptor
    /// <summary>File descriptor for TopBar.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TopBarReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxUb3BCYXIucHJvdG8ijwEKBlRvcEJhchIKCgJpZBgBIAEoCRINCgV0aXRs",
            "ZRgCIAEoCRIQCghlbnRyeV9pZBgDIAEoBRIRCgloaWRlX2JhY2sYBCABKAgS",
            "DgoGZW5lcmd5GAUgASgIEgwKBGNvaW4YBiABKAgSEAoIY29pbl9pZHMYByAD",
            "KAUSFQoNaGlkZV9jb2luX2FkZBgIIAEoCEIOqgILTm92YS5DbGllbnRiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.TopBar), global::Nova.Client.TopBar.Parser, new[]{ "Id", "Title", "EntryId", "HideBack", "Energy", "Coin", "CoinIds", "HideCoinAdd" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TopBar : pb::IMessage<TopBar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TopBar> _parser = new pb::MessageParser<TopBar>(() => new TopBar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TopBar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.TopBarReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopBar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopBar(TopBar other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      entryId_ = other.entryId_;
      hideBack_ = other.hideBack_;
      energy_ = other.energy_;
      coin_ = other.coin_;
      coinIds_ = other.coinIds_.Clone();
      hideCoinAdd_ = other.hideCoinAdd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopBar Clone() {
      return new TopBar(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entry_id" field.</summary>
    public const int EntryIdFieldNumber = 3;
    private int entryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EntryId {
      get { return entryId_; }
      set {
        entryId_ = value;
      }
    }

    /// <summary>Field number for the "hide_back" field.</summary>
    public const int HideBackFieldNumber = 4;
    private bool hideBack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HideBack {
      get { return hideBack_; }
      set {
        hideBack_ = value;
      }
    }

    /// <summary>Field number for the "energy" field.</summary>
    public const int EnergyFieldNumber = 5;
    private bool energy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Energy {
      get { return energy_; }
      set {
        energy_ = value;
      }
    }

    /// <summary>Field number for the "coin" field.</summary>
    public const int CoinFieldNumber = 6;
    private bool coin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Coin {
      get { return coin_; }
      set {
        coin_ = value;
      }
    }

    /// <summary>Field number for the "coin_ids" field.</summary>
    public const int CoinIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_coinIds_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> coinIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> CoinIds {
      get { return coinIds_; }
    }

    /// <summary>Field number for the "hide_coin_add" field.</summary>
    public const int HideCoinAddFieldNumber = 8;
    private bool hideCoinAdd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HideCoinAdd {
      get { return hideCoinAdd_; }
      set {
        hideCoinAdd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TopBar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TopBar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (EntryId != other.EntryId) return false;
      if (HideBack != other.HideBack) return false;
      if (Energy != other.Energy) return false;
      if (Coin != other.Coin) return false;
      if(!coinIds_.Equals(other.coinIds_)) return false;
      if (HideCoinAdd != other.HideCoinAdd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (EntryId != 0) hash ^= EntryId.GetHashCode();
      if (HideBack != false) hash ^= HideBack.GetHashCode();
      if (Energy != false) hash ^= Energy.GetHashCode();
      if (Coin != false) hash ^= Coin.GetHashCode();
      hash ^= coinIds_.GetHashCode();
      if (HideCoinAdd != false) hash ^= HideCoinAdd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (EntryId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EntryId);
      }
      if (HideBack != false) {
        output.WriteRawTag(32);
        output.WriteBool(HideBack);
      }
      if (Energy != false) {
        output.WriteRawTag(40);
        output.WriteBool(Energy);
      }
      if (Coin != false) {
        output.WriteRawTag(48);
        output.WriteBool(Coin);
      }
      coinIds_.WriteTo(output, _repeated_coinIds_codec);
      if (HideCoinAdd != false) {
        output.WriteRawTag(64);
        output.WriteBool(HideCoinAdd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (EntryId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EntryId);
      }
      if (HideBack != false) {
        output.WriteRawTag(32);
        output.WriteBool(HideBack);
      }
      if (Energy != false) {
        output.WriteRawTag(40);
        output.WriteBool(Energy);
      }
      if (Coin != false) {
        output.WriteRawTag(48);
        output.WriteBool(Coin);
      }
      coinIds_.WriteTo(ref output, _repeated_coinIds_codec);
      if (HideCoinAdd != false) {
        output.WriteRawTag(64);
        output.WriteBool(HideCoinAdd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (EntryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntryId);
      }
      if (HideBack != false) {
        size += 1 + 1;
      }
      if (Energy != false) {
        size += 1 + 1;
      }
      if (Coin != false) {
        size += 1 + 1;
      }
      size += coinIds_.CalculateSize(_repeated_coinIds_codec);
      if (HideCoinAdd != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TopBar other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.EntryId != 0) {
        EntryId = other.EntryId;
      }
      if (other.HideBack != false) {
        HideBack = other.HideBack;
      }
      if (other.Energy != false) {
        Energy = other.Energy;
      }
      if (other.Coin != false) {
        Coin = other.Coin;
      }
      coinIds_.Add(other.coinIds_);
      if (other.HideCoinAdd != false) {
        HideCoinAdd = other.HideCoinAdd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            EntryId = input.ReadInt32();
            break;
          }
          case 32: {
            HideBack = input.ReadBool();
            break;
          }
          case 40: {
            Energy = input.ReadBool();
            break;
          }
          case 48: {
            Coin = input.ReadBool();
            break;
          }
          case 58:
          case 56: {
            coinIds_.AddEntriesFrom(input, _repeated_coinIds_codec);
            break;
          }
          case 64: {
            HideCoinAdd = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            EntryId = input.ReadInt32();
            break;
          }
          case 32: {
            HideBack = input.ReadBool();
            break;
          }
          case 40: {
            Energy = input.ReadBool();
            break;
          }
          case 48: {
            Coin = input.ReadBool();
            break;
          }
          case 58:
          case 56: {
            coinIds_.AddEntriesFrom(ref input, _repeated_coinIds_codec);
            break;
          }
          case 64: {
            HideCoinAdd = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
