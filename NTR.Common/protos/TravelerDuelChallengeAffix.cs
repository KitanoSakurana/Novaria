// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TravelerDuelChallengeAffix.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from TravelerDuelChallengeAffix.proto</summary>
  public static partial class TravelerDuelChallengeAffixReflection {

    #region Descriptor
    /// <summary>File descriptor for TravelerDuelChallengeAffix.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TravelerDuelChallengeAffixReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBUcmF2ZWxlckR1ZWxDaGFsbGVuZ2VBZmZpeC5wcm90byKlAgoaVHJhdmVs",
            "ZXJEdWVsQ2hhbGxlbmdlQWZmaXgSCgoCaWQYASABKAUSEAoIZ3JvdXBfaWQY",
            "AiABKAUSEgoKZGlmZmljdWx0eRgDIAEoBRIaChJ1bmxvY2tfd29ybGRfY2xh",
            "c3MYBCABKAUSGQoRdW5sb2NrX2R1ZWxfbGV2ZWwYBSABKAUSGQoRdW5sb2Nr",
            "X2RpZmZpY3VsdHkYBiABKAUSDAoEbmFtZRgHIAEoCRIMCgRkZXNjGAggASgJ",
            "EgwKBGljb24YCSABKAkSDwoHZWxlbWVudBgKIAEoBRIQCghhZGRfY2FtcBgL",
            "IAMoBRIRCglhZGRfY2xhc3MYDCADKAUSEAoIc2tpbGxfaWQYDSABKAUSEQoJ",
            "YnJhbmNoX2lkGA4gASgFQg6qAgtOb3ZhLkNsaWVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.TravelerDuelChallengeAffix), global::Nova.Client.TravelerDuelChallengeAffix.Parser, new[]{ "Id", "GroupId", "Difficulty", "UnlockWorldClass", "UnlockDuelLevel", "UnlockDifficulty", "Name", "Desc", "Icon", "Element", "AddCamp", "AddClass", "SkillId", "BranchId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TravelerDuelChallengeAffix : pb::IMessage<TravelerDuelChallengeAffix>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TravelerDuelChallengeAffix> _parser = new pb::MessageParser<TravelerDuelChallengeAffix>(() => new TravelerDuelChallengeAffix());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TravelerDuelChallengeAffix> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.TravelerDuelChallengeAffixReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TravelerDuelChallengeAffix() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TravelerDuelChallengeAffix(TravelerDuelChallengeAffix other) : this() {
      id_ = other.id_;
      groupId_ = other.groupId_;
      difficulty_ = other.difficulty_;
      unlockWorldClass_ = other.unlockWorldClass_;
      unlockDuelLevel_ = other.unlockDuelLevel_;
      unlockDifficulty_ = other.unlockDifficulty_;
      name_ = other.name_;
      desc_ = other.desc_;
      icon_ = other.icon_;
      element_ = other.element_;
      addCamp_ = other.addCamp_.Clone();
      addClass_ = other.addClass_.Clone();
      skillId_ = other.skillId_;
      branchId_ = other.branchId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TravelerDuelChallengeAffix Clone() {
      return new TravelerDuelChallengeAffix(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private int groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "difficulty" field.</summary>
    public const int DifficultyFieldNumber = 3;
    private int difficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Difficulty {
      get { return difficulty_; }
      set {
        difficulty_ = value;
      }
    }

    /// <summary>Field number for the "unlock_world_class" field.</summary>
    public const int UnlockWorldClassFieldNumber = 4;
    private int unlockWorldClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnlockWorldClass {
      get { return unlockWorldClass_; }
      set {
        unlockWorldClass_ = value;
      }
    }

    /// <summary>Field number for the "unlock_duel_level" field.</summary>
    public const int UnlockDuelLevelFieldNumber = 5;
    private int unlockDuelLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnlockDuelLevel {
      get { return unlockDuelLevel_; }
      set {
        unlockDuelLevel_ = value;
      }
    }

    /// <summary>Field number for the "unlock_difficulty" field.</summary>
    public const int UnlockDifficultyFieldNumber = 6;
    private int unlockDifficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnlockDifficulty {
      get { return unlockDifficulty_; }
      set {
        unlockDifficulty_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 8;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 9;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "element" field.</summary>
    public const int ElementFieldNumber = 10;
    private int element_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Element {
      get { return element_; }
      set {
        element_ = value;
      }
    }

    /// <summary>Field number for the "add_camp" field.</summary>
    public const int AddCampFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_addCamp_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> addCamp_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> AddCamp {
      get { return addCamp_; }
    }

    /// <summary>Field number for the "add_class" field.</summary>
    public const int AddClassFieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_addClass_codec
        = pb::FieldCodec.ForInt32(98);
    private readonly pbc::RepeatedField<int> addClass_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> AddClass {
      get { return addClass_; }
    }

    /// <summary>Field number for the "skill_id" field.</summary>
    public const int SkillIdFieldNumber = 13;
    private int skillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "branch_id" field.</summary>
    public const int BranchIdFieldNumber = 14;
    private int branchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BranchId {
      get { return branchId_; }
      set {
        branchId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TravelerDuelChallengeAffix);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TravelerDuelChallengeAffix other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (GroupId != other.GroupId) return false;
      if (Difficulty != other.Difficulty) return false;
      if (UnlockWorldClass != other.UnlockWorldClass) return false;
      if (UnlockDuelLevel != other.UnlockDuelLevel) return false;
      if (UnlockDifficulty != other.UnlockDifficulty) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if (Icon != other.Icon) return false;
      if (Element != other.Element) return false;
      if(!addCamp_.Equals(other.addCamp_)) return false;
      if(!addClass_.Equals(other.addClass_)) return false;
      if (SkillId != other.SkillId) return false;
      if (BranchId != other.BranchId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (Difficulty != 0) hash ^= Difficulty.GetHashCode();
      if (UnlockWorldClass != 0) hash ^= UnlockWorldClass.GetHashCode();
      if (UnlockDuelLevel != 0) hash ^= UnlockDuelLevel.GetHashCode();
      if (UnlockDifficulty != 0) hash ^= UnlockDifficulty.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Element != 0) hash ^= Element.GetHashCode();
      hash ^= addCamp_.GetHashCode();
      hash ^= addClass_.GetHashCode();
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (BranchId != 0) hash ^= BranchId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GroupId);
      }
      if (Difficulty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Difficulty);
      }
      if (UnlockWorldClass != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnlockWorldClass);
      }
      if (UnlockDuelLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UnlockDuelLevel);
      }
      if (UnlockDifficulty != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(UnlockDifficulty);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Desc);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Icon);
      }
      if (Element != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Element);
      }
      addCamp_.WriteTo(output, _repeated_addCamp_codec);
      addClass_.WriteTo(output, _repeated_addClass_codec);
      if (SkillId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(SkillId);
      }
      if (BranchId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(BranchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GroupId);
      }
      if (Difficulty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Difficulty);
      }
      if (UnlockWorldClass != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UnlockWorldClass);
      }
      if (UnlockDuelLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UnlockDuelLevel);
      }
      if (UnlockDifficulty != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(UnlockDifficulty);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Desc);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Icon);
      }
      if (Element != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Element);
      }
      addCamp_.WriteTo(ref output, _repeated_addCamp_codec);
      addClass_.WriteTo(ref output, _repeated_addClass_codec);
      if (SkillId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(SkillId);
      }
      if (BranchId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(BranchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
      }
      if (Difficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Difficulty);
      }
      if (UnlockWorldClass != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnlockWorldClass);
      }
      if (UnlockDuelLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnlockDuelLevel);
      }
      if (UnlockDifficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnlockDifficulty);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Element != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Element);
      }
      size += addCamp_.CalculateSize(_repeated_addCamp_codec);
      size += addClass_.CalculateSize(_repeated_addClass_codec);
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (BranchId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BranchId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TravelerDuelChallengeAffix other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      if (other.Difficulty != 0) {
        Difficulty = other.Difficulty;
      }
      if (other.UnlockWorldClass != 0) {
        UnlockWorldClass = other.UnlockWorldClass;
      }
      if (other.UnlockDuelLevel != 0) {
        UnlockDuelLevel = other.UnlockDuelLevel;
      }
      if (other.UnlockDifficulty != 0) {
        UnlockDifficulty = other.UnlockDifficulty;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Element != 0) {
        Element = other.Element;
      }
      addCamp_.Add(other.addCamp_);
      addClass_.Add(other.addClass_);
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      if (other.BranchId != 0) {
        BranchId = other.BranchId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            GroupId = input.ReadInt32();
            break;
          }
          case 24: {
            Difficulty = input.ReadInt32();
            break;
          }
          case 32: {
            UnlockWorldClass = input.ReadInt32();
            break;
          }
          case 40: {
            UnlockDuelLevel = input.ReadInt32();
            break;
          }
          case 48: {
            UnlockDifficulty = input.ReadInt32();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 66: {
            Desc = input.ReadString();
            break;
          }
          case 74: {
            Icon = input.ReadString();
            break;
          }
          case 80: {
            Element = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            addCamp_.AddEntriesFrom(input, _repeated_addCamp_codec);
            break;
          }
          case 98:
          case 96: {
            addClass_.AddEntriesFrom(input, _repeated_addClass_codec);
            break;
          }
          case 104: {
            SkillId = input.ReadInt32();
            break;
          }
          case 112: {
            BranchId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            GroupId = input.ReadInt32();
            break;
          }
          case 24: {
            Difficulty = input.ReadInt32();
            break;
          }
          case 32: {
            UnlockWorldClass = input.ReadInt32();
            break;
          }
          case 40: {
            UnlockDuelLevel = input.ReadInt32();
            break;
          }
          case 48: {
            UnlockDifficulty = input.ReadInt32();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 66: {
            Desc = input.ReadString();
            break;
          }
          case 74: {
            Icon = input.ReadString();
            break;
          }
          case 80: {
            Element = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            addCamp_.AddEntriesFrom(ref input, _repeated_addCamp_codec);
            break;
          }
          case 98:
          case 96: {
            addClass_.AddEntriesFrom(ref input, _repeated_addClass_codec);
            break;
          }
          case 104: {
            SkillId = input.ReadInt32();
            break;
          }
          case 112: {
            BranchId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
