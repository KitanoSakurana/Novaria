// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GuideGroup.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from GuideGroup.proto</summary>
  public static partial class GuideGroupReflection {

    #region Descriptor
    /// <summary>File descriptor for GuideGroup.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GuideGroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBHdWlkZUdyb3VwLnByb3RvIsACCgpHdWlkZUdyb3VwEgoKAmlkGAEgASgF",
            "EhwKFGd1aWRlX2RldGVjdGlvbl90eXBlGAIgASgFEhMKC3Bhc3NpdmVfbXNn",
            "GAMgASgJEhUKDWd1aWRlX3ByZXBvc2UYBCABKAUSFgoOcHJlcG9zZV9wYXJh",
            "bXMYBSABKAkSFgoOZ3VpZGVfcHJlcG9zZTIYBiABKAUSFwoPcHJlcG9zZV9w",
            "YXJhbXMyGAcgASgJEhIKCmd1aWRlX3Bvc3QYCCABKAUSEwoLcG9zdF9wYXJh",
            "bXMYCSABKAkSFQoNZ3VpZGVfdHJpZ2dlchgKIAEoBRIWCg50cmlnZ2VyX3Bh",
            "cmFtcxgLIAEoCRITCgt0b3dlcl9zdGF0ZRgMIAEoCBITCgtzY3JpcHRfcGF0",
            "aBgNIAEoCRIRCglpc19hY3RpdmUYDiABKAhCDqoCC05vdmEuQ2xpZW50YgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.GuideGroup), global::Nova.Client.GuideGroup.Parser, new[]{ "Id", "GuideDetectionType", "PassiveMsg", "GuidePrepose", "PreposeParams", "GuidePrepose2", "PreposeParams2", "GuidePost", "PostParams", "GuideTrigger", "TriggerParams", "TowerState", "ScriptPath", "IsActive" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GuideGroup : pb::IMessage<GuideGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuideGroup> _parser = new pb::MessageParser<GuideGroup>(() => new GuideGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuideGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.GuideGroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuideGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuideGroup(GuideGroup other) : this() {
      id_ = other.id_;
      guideDetectionType_ = other.guideDetectionType_;
      passiveMsg_ = other.passiveMsg_;
      guidePrepose_ = other.guidePrepose_;
      preposeParams_ = other.preposeParams_;
      guidePrepose2_ = other.guidePrepose2_;
      preposeParams2_ = other.preposeParams2_;
      guidePost_ = other.guidePost_;
      postParams_ = other.postParams_;
      guideTrigger_ = other.guideTrigger_;
      triggerParams_ = other.triggerParams_;
      towerState_ = other.towerState_;
      scriptPath_ = other.scriptPath_;
      isActive_ = other.isActive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuideGroup Clone() {
      return new GuideGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "guide_detection_type" field.</summary>
    public const int GuideDetectionTypeFieldNumber = 2;
    private int guideDetectionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuideDetectionType {
      get { return guideDetectionType_; }
      set {
        guideDetectionType_ = value;
      }
    }

    /// <summary>Field number for the "passive_msg" field.</summary>
    public const int PassiveMsgFieldNumber = 3;
    private string passiveMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PassiveMsg {
      get { return passiveMsg_; }
      set {
        passiveMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guide_prepose" field.</summary>
    public const int GuidePreposeFieldNumber = 4;
    private int guidePrepose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuidePrepose {
      get { return guidePrepose_; }
      set {
        guidePrepose_ = value;
      }
    }

    /// <summary>Field number for the "prepose_params" field.</summary>
    public const int PreposeParamsFieldNumber = 5;
    private string preposeParams_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PreposeParams {
      get { return preposeParams_; }
      set {
        preposeParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guide_prepose2" field.</summary>
    public const int GuidePrepose2FieldNumber = 6;
    private int guidePrepose2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuidePrepose2 {
      get { return guidePrepose2_; }
      set {
        guidePrepose2_ = value;
      }
    }

    /// <summary>Field number for the "prepose_params2" field.</summary>
    public const int PreposeParams2FieldNumber = 7;
    private string preposeParams2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PreposeParams2 {
      get { return preposeParams2_; }
      set {
        preposeParams2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guide_post" field.</summary>
    public const int GuidePostFieldNumber = 8;
    private int guidePost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuidePost {
      get { return guidePost_; }
      set {
        guidePost_ = value;
      }
    }

    /// <summary>Field number for the "post_params" field.</summary>
    public const int PostParamsFieldNumber = 9;
    private string postParams_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PostParams {
      get { return postParams_; }
      set {
        postParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guide_trigger" field.</summary>
    public const int GuideTriggerFieldNumber = 10;
    private int guideTrigger_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuideTrigger {
      get { return guideTrigger_; }
      set {
        guideTrigger_ = value;
      }
    }

    /// <summary>Field number for the "trigger_params" field.</summary>
    public const int TriggerParamsFieldNumber = 11;
    private string triggerParams_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TriggerParams {
      get { return triggerParams_; }
      set {
        triggerParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tower_state" field.</summary>
    public const int TowerStateFieldNumber = 12;
    private bool towerState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TowerState {
      get { return towerState_; }
      set {
        towerState_ = value;
      }
    }

    /// <summary>Field number for the "script_path" field.</summary>
    public const int ScriptPathFieldNumber = 13;
    private string scriptPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ScriptPath {
      get { return scriptPath_; }
      set {
        scriptPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_active" field.</summary>
    public const int IsActiveFieldNumber = 14;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuideGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuideGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (GuideDetectionType != other.GuideDetectionType) return false;
      if (PassiveMsg != other.PassiveMsg) return false;
      if (GuidePrepose != other.GuidePrepose) return false;
      if (PreposeParams != other.PreposeParams) return false;
      if (GuidePrepose2 != other.GuidePrepose2) return false;
      if (PreposeParams2 != other.PreposeParams2) return false;
      if (GuidePost != other.GuidePost) return false;
      if (PostParams != other.PostParams) return false;
      if (GuideTrigger != other.GuideTrigger) return false;
      if (TriggerParams != other.TriggerParams) return false;
      if (TowerState != other.TowerState) return false;
      if (ScriptPath != other.ScriptPath) return false;
      if (IsActive != other.IsActive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (GuideDetectionType != 0) hash ^= GuideDetectionType.GetHashCode();
      if (PassiveMsg.Length != 0) hash ^= PassiveMsg.GetHashCode();
      if (GuidePrepose != 0) hash ^= GuidePrepose.GetHashCode();
      if (PreposeParams.Length != 0) hash ^= PreposeParams.GetHashCode();
      if (GuidePrepose2 != 0) hash ^= GuidePrepose2.GetHashCode();
      if (PreposeParams2.Length != 0) hash ^= PreposeParams2.GetHashCode();
      if (GuidePost != 0) hash ^= GuidePost.GetHashCode();
      if (PostParams.Length != 0) hash ^= PostParams.GetHashCode();
      if (GuideTrigger != 0) hash ^= GuideTrigger.GetHashCode();
      if (TriggerParams.Length != 0) hash ^= TriggerParams.GetHashCode();
      if (TowerState != false) hash ^= TowerState.GetHashCode();
      if (ScriptPath.Length != 0) hash ^= ScriptPath.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GuideDetectionType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GuideDetectionType);
      }
      if (PassiveMsg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PassiveMsg);
      }
      if (GuidePrepose != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GuidePrepose);
      }
      if (PreposeParams.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PreposeParams);
      }
      if (GuidePrepose2 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(GuidePrepose2);
      }
      if (PreposeParams2.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PreposeParams2);
      }
      if (GuidePost != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(GuidePost);
      }
      if (PostParams.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(PostParams);
      }
      if (GuideTrigger != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(GuideTrigger);
      }
      if (TriggerParams.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(TriggerParams);
      }
      if (TowerState != false) {
        output.WriteRawTag(96);
        output.WriteBool(TowerState);
      }
      if (ScriptPath.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ScriptPath);
      }
      if (IsActive != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsActive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GuideDetectionType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GuideDetectionType);
      }
      if (PassiveMsg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PassiveMsg);
      }
      if (GuidePrepose != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GuidePrepose);
      }
      if (PreposeParams.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PreposeParams);
      }
      if (GuidePrepose2 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(GuidePrepose2);
      }
      if (PreposeParams2.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PreposeParams2);
      }
      if (GuidePost != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(GuidePost);
      }
      if (PostParams.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(PostParams);
      }
      if (GuideTrigger != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(GuideTrigger);
      }
      if (TriggerParams.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(TriggerParams);
      }
      if (TowerState != false) {
        output.WriteRawTag(96);
        output.WriteBool(TowerState);
      }
      if (ScriptPath.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ScriptPath);
      }
      if (IsActive != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsActive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (GuideDetectionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuideDetectionType);
      }
      if (PassiveMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PassiveMsg);
      }
      if (GuidePrepose != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuidePrepose);
      }
      if (PreposeParams.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreposeParams);
      }
      if (GuidePrepose2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuidePrepose2);
      }
      if (PreposeParams2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreposeParams2);
      }
      if (GuidePost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuidePost);
      }
      if (PostParams.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostParams);
      }
      if (GuideTrigger != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuideTrigger);
      }
      if (TriggerParams.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerParams);
      }
      if (TowerState != false) {
        size += 1 + 1;
      }
      if (ScriptPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScriptPath);
      }
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuideGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.GuideDetectionType != 0) {
        GuideDetectionType = other.GuideDetectionType;
      }
      if (other.PassiveMsg.Length != 0) {
        PassiveMsg = other.PassiveMsg;
      }
      if (other.GuidePrepose != 0) {
        GuidePrepose = other.GuidePrepose;
      }
      if (other.PreposeParams.Length != 0) {
        PreposeParams = other.PreposeParams;
      }
      if (other.GuidePrepose2 != 0) {
        GuidePrepose2 = other.GuidePrepose2;
      }
      if (other.PreposeParams2.Length != 0) {
        PreposeParams2 = other.PreposeParams2;
      }
      if (other.GuidePost != 0) {
        GuidePost = other.GuidePost;
      }
      if (other.PostParams.Length != 0) {
        PostParams = other.PostParams;
      }
      if (other.GuideTrigger != 0) {
        GuideTrigger = other.GuideTrigger;
      }
      if (other.TriggerParams.Length != 0) {
        TriggerParams = other.TriggerParams;
      }
      if (other.TowerState != false) {
        TowerState = other.TowerState;
      }
      if (other.ScriptPath.Length != 0) {
        ScriptPath = other.ScriptPath;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            GuideDetectionType = input.ReadInt32();
            break;
          }
          case 26: {
            PassiveMsg = input.ReadString();
            break;
          }
          case 32: {
            GuidePrepose = input.ReadInt32();
            break;
          }
          case 42: {
            PreposeParams = input.ReadString();
            break;
          }
          case 48: {
            GuidePrepose2 = input.ReadInt32();
            break;
          }
          case 58: {
            PreposeParams2 = input.ReadString();
            break;
          }
          case 64: {
            GuidePost = input.ReadInt32();
            break;
          }
          case 74: {
            PostParams = input.ReadString();
            break;
          }
          case 80: {
            GuideTrigger = input.ReadInt32();
            break;
          }
          case 90: {
            TriggerParams = input.ReadString();
            break;
          }
          case 96: {
            TowerState = input.ReadBool();
            break;
          }
          case 106: {
            ScriptPath = input.ReadString();
            break;
          }
          case 112: {
            IsActive = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            GuideDetectionType = input.ReadInt32();
            break;
          }
          case 26: {
            PassiveMsg = input.ReadString();
            break;
          }
          case 32: {
            GuidePrepose = input.ReadInt32();
            break;
          }
          case 42: {
            PreposeParams = input.ReadString();
            break;
          }
          case 48: {
            GuidePrepose2 = input.ReadInt32();
            break;
          }
          case 58: {
            PreposeParams2 = input.ReadString();
            break;
          }
          case 64: {
            GuidePost = input.ReadInt32();
            break;
          }
          case 74: {
            PostParams = input.ReadString();
            break;
          }
          case 80: {
            GuideTrigger = input.ReadInt32();
            break;
          }
          case 90: {
            TriggerParams = input.ReadString();
            break;
          }
          case 96: {
            TowerState = input.ReadBool();
            break;
          }
          case 106: {
            ScriptPath = input.ReadString();
            break;
          }
          case 112: {
            IsActive = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
