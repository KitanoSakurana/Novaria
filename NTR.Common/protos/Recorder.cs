// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Recorder.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from Recorder.proto</summary>
  public static partial class RecorderReflection {

    #region Descriptor
    /// <summary>File descriptor for Recorder.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RecorderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5SZWNvcmRlci5wcm90byKhEAoIUmVjb3JkZXISEQoJbWF4X2ZyYW1lGAEg",
            "ASgNEhAKCGZsb29yX2lkGAIgASgNEiEKCHNwYXduZXJzGAMgAygLMg8uUmVj",
            "b3JkZXIuU3Bhd24SIQoHZGFtYWdlcxgEIAMoCzIQLlJlY29yZGVyLkRhbWFn",
            "ZRIfCgZkZWF0aHMYBSADKAsyDy5SZWNvcmRlci5EZWF0aBpsCgVTcGF3bhIQ",
            "CghmcmFtZV9pZBgBIAEoDRImCghlbnRfdHlwZRgCIAEoDjIULlJlY29yZGVy",
            "LkVudGl0eVR5cGUSCgoCaWQYAyABKA0SEAoIcHJvdG9faWQYBCABKA0SCwoD",
            "aF9wGAUgASgFGskBCgZEYW1hZ2USCgoCaWQYASABKA0SEAoIZnJhbWVfaWQY",
            "AiABKA0SJgoIZG1nX3R5cGUYAyABKA4yFC5SZWNvcmRlci5EYW1hZ2VUeXBl",
            "Eg0KBXZhbHVlGAQgASgFEhYKDmhpdF9kYW1hZ2VfaV9kGAUgASgFEhAKCGlz",
            "X2NyaXRlGAYgASgIEiAKBGZyb20YByABKAsyEi5SZWNvcmRlci5BdHRhY2tl",
            "chIeCgJ0bxgIIAEoCzISLlJlY29yZGVyLkRlZmVuZGVyGsoFCghBdHRhY2tl",
            "chIKCgJpZBgBIAEoDRIQCghwcm90b19pZBgCIAEoDRIoCgllbnRfY2xhc3MY",
            "AyABKA4yFS5SZWNvcmRlci5FbnRpdHlDbGFzcxILCgNhdGsYBCABKAISGwoT",
            "c2tpbGxfcGVyY2VudF9hbWVuZBgFIAEoAhIiChp0YWxlbnRfZ3JvdXBfcGVy",
            "Y2VudF9hbWVuZBgGIAEoAhIXCg9za2lsbF9hYnNfYW1lbmQYByABKAISHgoW",
            "dGFsZW50X2dyb3VwX2Fic19hbWVuZBgIIAEoAhIcChRwZXJrX2ludGVuc2l0",
            "eV9yYXRpbxgJIAEoAhIWCg5zbG90X2RtZ19yYXRpbxgKIAEoAhILCgNlX2UY",
            "CyABKAISFQoNZ2VuX2RtZ19yYXRpbxgMIAEoAhIQCghkbWdfcGx1cxgNIAEo",
            "AhISCgpjcml0X3JhdGlvGA4gASgCEhcKD2ZpbmFsX2RtZ19yYXRpbxgPIAEo",
            "AhIWCg5maW5hbF9kbWdfcGx1cxgQIAEoAhIRCgljcml0X3JhdGUYESABKAIS",
            "EgoKZGVmX3BpZXJjZRgSIAEoAhISCgpkZWZfaWdub3JlGBMgASgCEg0KBXdf",
            "ZV9wGBQgASgFEg0KBWZfZV9wGBUgASgFEg0KBXNfZV9wGBYgASgFEg0KBWFf",
            "ZV9wGBcgASgFEg0KBWxfZV9wGBggASgFEg0KBWRfZV9wGBkgASgFEg0KBXdf",
            "ZV9pGBogASgCEg0KBWZfZV9pGBsgASgCEg0KBXNfZV9pGBwgASgCEg0KBWFf",
            "ZV9pGB0gASgCEg0KBWxfZV9pGB4gASgCEg0KBWRfZV9pGB8gASgCEhEKCWJ1",
            "ZmZfaV9kcxggIAMoBRITCgtlZmZlY3RfaV9kcxgiIAMoBRInCgphdHRyaWJ1",
            "dGVzGCMgAygLMhMuUmVjb3JkZXIuQXR0cmlidXRlGlkKCUF0dHJpYnV0ZRIO",
            "CgZvcmlnaW4YASABKAISEgoKYmFzZV9hbWVuZBgCIAEoAhIVCg1wZXJjZW50",
            "X2FtZW5kGAMgASgCEhEKCWFic19hbWVuZBgEIAEoAhrcAwoIRGVmZW5kZXIS",
            "CgoCaWQYASABKA0SEAoIcHJvdG9faWQYAiABKA0SKAoJZW50X2NsYXNzGAMg",
            "ASgOMhUuUmVjb3JkZXIuRW50aXR5Q2xhc3MSCwoDaF9wGAQgASgFEg8KB21h",
            "eF9oX3AYBSABKAUSEAoIZXJfYW1lbmQYBiABKAISEQoJZGVmX2FtZW5kGAcg",
            "ASgCEhoKEnJjZF9zbG90X2RtZ19yYXRpbxgIIAEoAhIRCgllX2Vfcl9jX2QY",
            "CSABKAISGQoRZ2VuX2RtZ19yY2RfcmF0aW8YCiABKAISFAoMZG1nX3BsdXNf",
            "cmNkGAsgASgCEg8KB3NyY19kZWYYDCABKAISFwoPY3JpdF9yZXNpc3RhbmNl",
            "GA0gASgCEg0KBXdfZV9yGA4gASgFEg0KBWZfZV9yGA8gASgFEg0KBXNfZV9y",
            "GBAgASgFEg0KBWFfZV9yGBEgASgFEg0KBWxfZV9yGBIgASgFEg0KBWRfZV9y",
            "GBMgASgFEhAKCHN1cHByZXNzGBQgASgCEhEKCWJ1ZmZfaV9kcxgVIAMoBRIT",
            "CgtlZmZlY3RfaV9kcxgXIAMoBRInCgphdHRyaWJ1dGVzGBggAygLMhMuUmVj",
            "b3JkZXIuQXR0cmlidXRlGiUKBURlYXRoEhAKCGZyYW1lX2lkGAEgASgNEgoK",
            "AmlkGAIgASgNIjkKCkVudGl0eVR5cGUSCgoGUExBWUVSEAASCAoEQk9TUxAB",
            "EgoKBkxFQURFUhACEgkKBUVMSVRFEAMivwEKCkRhbWFnZVR5cGUSCgoGTk9S",
            "TUFMEAASCAoESEVBTBABEggKBFJFQUwQAhIKCgZESVJFQ1QQAxIPCgtESVJF",
            "Q1RfSEVBTBAEEgcKA0RPVBAFEgwKCERPVF9IRUFMEAYSDQoJSFBfQUJTT1JC",
            "EAcSDQoJSFBfUkVEVUNFEAgSDgoKSFBfUkVDT1ZFUhAJEg0KCUhQX1JFVkVS",
            "VBAKEhAKDERBTUFHRV9ERUxBWRALEg4KCkhFQUxfREVMQVkQDCIkCgtFbnRp",
            "dHlDbGFzcxIICgRST0xFEAASCwoHTU9OU1RFUhABQg6qAgtOb3ZhLkNsaWVu",
            "dGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Recorder), global::Nova.Client.Recorder.Parser, new[]{ "MaxFrame", "FloorId", "Spawners", "Damages", "Deaths" }, null, new[]{ typeof(global::Nova.Client.Recorder.Types.EntityType), typeof(global::Nova.Client.Recorder.Types.DamageType), typeof(global::Nova.Client.Recorder.Types.EntityClass) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Recorder.Types.Spawn), global::Nova.Client.Recorder.Types.Spawn.Parser, new[]{ "FrameId", "EntType", "Id", "ProtoId", "HP" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Recorder.Types.Damage), global::Nova.Client.Recorder.Types.Damage.Parser, new[]{ "Id", "FrameId", "DmgType", "Value", "HitDamageID", "IsCrite", "From", "To" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Recorder.Types.Attacker), global::Nova.Client.Recorder.Types.Attacker.Parser, new[]{ "Id", "ProtoId", "EntClass", "Atk", "SkillPercentAmend", "TalentGroupPercentAmend", "SkillAbsAmend", "TalentGroupAbsAmend", "PerkIntensityRatio", "SlotDmgRatio", "EE", "GenDmgRatio", "DmgPlus", "CritRatio", "FinalDmgRatio", "FinalDmgPlus", "CritRate", "DefPierce", "DefIgnore", "WEP", "FEP", "SEP", "AEP", "LEP", "DEP", "WEI", "FEI", "SEI", "AEI", "LEI", "DEI", "BuffIDs", "EffectIDs", "Attributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Recorder.Types.Attribute), global::Nova.Client.Recorder.Types.Attribute.Parser, new[]{ "Origin", "BaseAmend", "PercentAmend", "AbsAmend" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Recorder.Types.Defender), global::Nova.Client.Recorder.Types.Defender.Parser, new[]{ "Id", "ProtoId", "EntClass", "HP", "MaxHP", "ErAmend", "DefAmend", "RcdSlotDmgRatio", "EERCD", "GenDmgRcdRatio", "DmgPlusRcd", "SrcDef", "CritResistance", "WER", "FER", "SER", "AER", "LER", "DER", "Suppress", "BuffIDs", "EffectIDs", "Attributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Recorder.Types.Death), global::Nova.Client.Recorder.Types.Death.Parser, new[]{ "FrameId", "Id" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Recorder : pb::IMessage<Recorder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Recorder> _parser = new pb::MessageParser<Recorder>(() => new Recorder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Recorder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.RecorderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Recorder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Recorder(Recorder other) : this() {
      maxFrame_ = other.maxFrame_;
      floorId_ = other.floorId_;
      spawners_ = other.spawners_.Clone();
      damages_ = other.damages_.Clone();
      deaths_ = other.deaths_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Recorder Clone() {
      return new Recorder(this);
    }

    /// <summary>Field number for the "max_frame" field.</summary>
    public const int MaxFrameFieldNumber = 1;
    private uint maxFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxFrame {
      get { return maxFrame_; }
      set {
        maxFrame_ = value;
      }
    }

    /// <summary>Field number for the "floor_id" field.</summary>
    public const int FloorIdFieldNumber = 2;
    private uint floorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FloorId {
      get { return floorId_; }
      set {
        floorId_ = value;
      }
    }

    /// <summary>Field number for the "spawners" field.</summary>
    public const int SpawnersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Nova.Client.Recorder.Types.Spawn> _repeated_spawners_codec
        = pb::FieldCodec.ForMessage(26, global::Nova.Client.Recorder.Types.Spawn.Parser);
    private readonly pbc::RepeatedField<global::Nova.Client.Recorder.Types.Spawn> spawners_ = new pbc::RepeatedField<global::Nova.Client.Recorder.Types.Spawn>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Nova.Client.Recorder.Types.Spawn> Spawners {
      get { return spawners_; }
    }

    /// <summary>Field number for the "damages" field.</summary>
    public const int DamagesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Nova.Client.Recorder.Types.Damage> _repeated_damages_codec
        = pb::FieldCodec.ForMessage(34, global::Nova.Client.Recorder.Types.Damage.Parser);
    private readonly pbc::RepeatedField<global::Nova.Client.Recorder.Types.Damage> damages_ = new pbc::RepeatedField<global::Nova.Client.Recorder.Types.Damage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Nova.Client.Recorder.Types.Damage> Damages {
      get { return damages_; }
    }

    /// <summary>Field number for the "deaths" field.</summary>
    public const int DeathsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Nova.Client.Recorder.Types.Death> _repeated_deaths_codec
        = pb::FieldCodec.ForMessage(42, global::Nova.Client.Recorder.Types.Death.Parser);
    private readonly pbc::RepeatedField<global::Nova.Client.Recorder.Types.Death> deaths_ = new pbc::RepeatedField<global::Nova.Client.Recorder.Types.Death>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Nova.Client.Recorder.Types.Death> Deaths {
      get { return deaths_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Recorder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Recorder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxFrame != other.MaxFrame) return false;
      if (FloorId != other.FloorId) return false;
      if(!spawners_.Equals(other.spawners_)) return false;
      if(!damages_.Equals(other.damages_)) return false;
      if(!deaths_.Equals(other.deaths_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxFrame != 0) hash ^= MaxFrame.GetHashCode();
      if (FloorId != 0) hash ^= FloorId.GetHashCode();
      hash ^= spawners_.GetHashCode();
      hash ^= damages_.GetHashCode();
      hash ^= deaths_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MaxFrame != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MaxFrame);
      }
      if (FloorId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(FloorId);
      }
      spawners_.WriteTo(output, _repeated_spawners_codec);
      damages_.WriteTo(output, _repeated_damages_codec);
      deaths_.WriteTo(output, _repeated_deaths_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MaxFrame != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MaxFrame);
      }
      if (FloorId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(FloorId);
      }
      spawners_.WriteTo(ref output, _repeated_spawners_codec);
      damages_.WriteTo(ref output, _repeated_damages_codec);
      deaths_.WriteTo(ref output, _repeated_deaths_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MaxFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxFrame);
      }
      if (FloorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FloorId);
      }
      size += spawners_.CalculateSize(_repeated_spawners_codec);
      size += damages_.CalculateSize(_repeated_damages_codec);
      size += deaths_.CalculateSize(_repeated_deaths_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Recorder other) {
      if (other == null) {
        return;
      }
      if (other.MaxFrame != 0) {
        MaxFrame = other.MaxFrame;
      }
      if (other.FloorId != 0) {
        FloorId = other.FloorId;
      }
      spawners_.Add(other.spawners_);
      damages_.Add(other.damages_);
      deaths_.Add(other.deaths_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxFrame = input.ReadUInt32();
            break;
          }
          case 16: {
            FloorId = input.ReadUInt32();
            break;
          }
          case 26: {
            spawners_.AddEntriesFrom(input, _repeated_spawners_codec);
            break;
          }
          case 34: {
            damages_.AddEntriesFrom(input, _repeated_damages_codec);
            break;
          }
          case 42: {
            deaths_.AddEntriesFrom(input, _repeated_deaths_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxFrame = input.ReadUInt32();
            break;
          }
          case 16: {
            FloorId = input.ReadUInt32();
            break;
          }
          case 26: {
            spawners_.AddEntriesFrom(ref input, _repeated_spawners_codec);
            break;
          }
          case 34: {
            damages_.AddEntriesFrom(ref input, _repeated_damages_codec);
            break;
          }
          case 42: {
            deaths_.AddEntriesFrom(ref input, _repeated_deaths_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Recorder message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum EntityType {
        [pbr::OriginalName("PLAYER")] Player = 0,
        [pbr::OriginalName("BOSS")] Boss = 1,
        [pbr::OriginalName("LEADER")] Leader = 2,
        [pbr::OriginalName("ELITE")] Elite = 3,
      }

      public enum DamageType {
        [pbr::OriginalName("NORMAL")] Normal = 0,
        [pbr::OriginalName("HEAL")] Heal = 1,
        [pbr::OriginalName("REAL")] Real = 2,
        [pbr::OriginalName("DIRECT")] Direct = 3,
        [pbr::OriginalName("DIRECT_HEAL")] DirectHeal = 4,
        [pbr::OriginalName("DOT")] Dot = 5,
        [pbr::OriginalName("DOT_HEAL")] DotHeal = 6,
        [pbr::OriginalName("HP_ABSORB")] HpAbsorb = 7,
        [pbr::OriginalName("HP_REDUCE")] HpReduce = 8,
        [pbr::OriginalName("HP_RECOVER")] HpRecover = 9,
        [pbr::OriginalName("HP_REVERT")] HpRevert = 10,
        [pbr::OriginalName("DAMAGE_DELAY")] DamageDelay = 11,
        [pbr::OriginalName("HEAL_DELAY")] HealDelay = 12,
      }

      public enum EntityClass {
        [pbr::OriginalName("ROLE")] Role = 0,
        [pbr::OriginalName("MONSTER")] Monster = 1,
      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Spawn : pb::IMessage<Spawn>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Spawn> _parser = new pb::MessageParser<Spawn>(() => new Spawn());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Spawn> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Nova.Client.Recorder.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Spawn() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Spawn(Spawn other) : this() {
          frameId_ = other.frameId_;
          entType_ = other.entType_;
          id_ = other.id_;
          protoId_ = other.protoId_;
          hP_ = other.hP_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Spawn Clone() {
          return new Spawn(this);
        }

        /// <summary>Field number for the "frame_id" field.</summary>
        public const int FrameIdFieldNumber = 1;
        private uint frameId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint FrameId {
          get { return frameId_; }
          set {
            frameId_ = value;
          }
        }

        /// <summary>Field number for the "ent_type" field.</summary>
        public const int EntTypeFieldNumber = 2;
        private global::Nova.Client.Recorder.Types.EntityType entType_ = global::Nova.Client.Recorder.Types.EntityType.Player;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Nova.Client.Recorder.Types.EntityType EntType {
          get { return entType_; }
          set {
            entType_ = value;
          }
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 3;
        private uint id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "proto_id" field.</summary>
        public const int ProtoIdFieldNumber = 4;
        private uint protoId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProtoId {
          get { return protoId_; }
          set {
            protoId_ = value;
          }
        }

        /// <summary>Field number for the "h_p" field.</summary>
        public const int HPFieldNumber = 5;
        private int hP_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int HP {
          get { return hP_; }
          set {
            hP_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Spawn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Spawn other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FrameId != other.FrameId) return false;
          if (EntType != other.EntType) return false;
          if (Id != other.Id) return false;
          if (ProtoId != other.ProtoId) return false;
          if (HP != other.HP) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (FrameId != 0) hash ^= FrameId.GetHashCode();
          if (EntType != global::Nova.Client.Recorder.Types.EntityType.Player) hash ^= EntType.GetHashCode();
          if (Id != 0) hash ^= Id.GetHashCode();
          if (ProtoId != 0) hash ^= ProtoId.GetHashCode();
          if (HP != 0) hash ^= HP.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (FrameId != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(FrameId);
          }
          if (EntType != global::Nova.Client.Recorder.Types.EntityType.Player) {
            output.WriteRawTag(16);
            output.WriteEnum((int) EntType);
          }
          if (Id != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Id);
          }
          if (ProtoId != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(ProtoId);
          }
          if (HP != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(HP);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (FrameId != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(FrameId);
          }
          if (EntType != global::Nova.Client.Recorder.Types.EntityType.Player) {
            output.WriteRawTag(16);
            output.WriteEnum((int) EntType);
          }
          if (Id != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Id);
          }
          if (ProtoId != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(ProtoId);
          }
          if (HP != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(HP);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (FrameId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FrameId);
          }
          if (EntType != global::Nova.Client.Recorder.Types.EntityType.Player) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntType);
          }
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
          }
          if (ProtoId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtoId);
          }
          if (HP != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(HP);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Spawn other) {
          if (other == null) {
            return;
          }
          if (other.FrameId != 0) {
            FrameId = other.FrameId;
          }
          if (other.EntType != global::Nova.Client.Recorder.Types.EntityType.Player) {
            EntType = other.EntType;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.ProtoId != 0) {
            ProtoId = other.ProtoId;
          }
          if (other.HP != 0) {
            HP = other.HP;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                FrameId = input.ReadUInt32();
                break;
              }
              case 16: {
                EntType = (global::Nova.Client.Recorder.Types.EntityType) input.ReadEnum();
                break;
              }
              case 24: {
                Id = input.ReadUInt32();
                break;
              }
              case 32: {
                ProtoId = input.ReadUInt32();
                break;
              }
              case 40: {
                HP = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                FrameId = input.ReadUInt32();
                break;
              }
              case 16: {
                EntType = (global::Nova.Client.Recorder.Types.EntityType) input.ReadEnum();
                break;
              }
              case 24: {
                Id = input.ReadUInt32();
                break;
              }
              case 32: {
                ProtoId = input.ReadUInt32();
                break;
              }
              case 40: {
                HP = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Damage : pb::IMessage<Damage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Damage> _parser = new pb::MessageParser<Damage>(() => new Damage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Damage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Nova.Client.Recorder.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Damage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Damage(Damage other) : this() {
          id_ = other.id_;
          frameId_ = other.frameId_;
          dmgType_ = other.dmgType_;
          value_ = other.value_;
          hitDamageID_ = other.hitDamageID_;
          isCrite_ = other.isCrite_;
          from_ = other.from_ != null ? other.from_.Clone() : null;
          to_ = other.to_ != null ? other.to_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Damage Clone() {
          return new Damage(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private uint id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "frame_id" field.</summary>
        public const int FrameIdFieldNumber = 2;
        private uint frameId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint FrameId {
          get { return frameId_; }
          set {
            frameId_ = value;
          }
        }

        /// <summary>Field number for the "dmg_type" field.</summary>
        public const int DmgTypeFieldNumber = 3;
        private global::Nova.Client.Recorder.Types.DamageType dmgType_ = global::Nova.Client.Recorder.Types.DamageType.Normal;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Nova.Client.Recorder.Types.DamageType DmgType {
          get { return dmgType_; }
          set {
            dmgType_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 4;
        private int value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        /// <summary>Field number for the "hit_damage_i_d" field.</summary>
        public const int HitDamageIDFieldNumber = 5;
        private int hitDamageID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int HitDamageID {
          get { return hitDamageID_; }
          set {
            hitDamageID_ = value;
          }
        }

        /// <summary>Field number for the "is_crite" field.</summary>
        public const int IsCriteFieldNumber = 6;
        private bool isCrite_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool IsCrite {
          get { return isCrite_; }
          set {
            isCrite_ = value;
          }
        }

        /// <summary>Field number for the "from" field.</summary>
        public const int FromFieldNumber = 7;
        private global::Nova.Client.Recorder.Types.Attacker from_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Nova.Client.Recorder.Types.Attacker From {
          get { return from_; }
          set {
            from_ = value;
          }
        }

        /// <summary>Field number for the "to" field.</summary>
        public const int ToFieldNumber = 8;
        private global::Nova.Client.Recorder.Types.Defender to_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Nova.Client.Recorder.Types.Defender To {
          get { return to_; }
          set {
            to_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Damage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Damage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (FrameId != other.FrameId) return false;
          if (DmgType != other.DmgType) return false;
          if (Value != other.Value) return false;
          if (HitDamageID != other.HitDamageID) return false;
          if (IsCrite != other.IsCrite) return false;
          if (!object.Equals(From, other.From)) return false;
          if (!object.Equals(To, other.To)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (FrameId != 0) hash ^= FrameId.GetHashCode();
          if (DmgType != global::Nova.Client.Recorder.Types.DamageType.Normal) hash ^= DmgType.GetHashCode();
          if (Value != 0) hash ^= Value.GetHashCode();
          if (HitDamageID != 0) hash ^= HitDamageID.GetHashCode();
          if (IsCrite != false) hash ^= IsCrite.GetHashCode();
          if (from_ != null) hash ^= From.GetHashCode();
          if (to_ != null) hash ^= To.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Id);
          }
          if (FrameId != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(FrameId);
          }
          if (DmgType != global::Nova.Client.Recorder.Types.DamageType.Normal) {
            output.WriteRawTag(24);
            output.WriteEnum((int) DmgType);
          }
          if (Value != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Value);
          }
          if (HitDamageID != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(HitDamageID);
          }
          if (IsCrite != false) {
            output.WriteRawTag(48);
            output.WriteBool(IsCrite);
          }
          if (from_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(From);
          }
          if (to_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(To);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Id);
          }
          if (FrameId != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(FrameId);
          }
          if (DmgType != global::Nova.Client.Recorder.Types.DamageType.Normal) {
            output.WriteRawTag(24);
            output.WriteEnum((int) DmgType);
          }
          if (Value != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Value);
          }
          if (HitDamageID != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(HitDamageID);
          }
          if (IsCrite != false) {
            output.WriteRawTag(48);
            output.WriteBool(IsCrite);
          }
          if (from_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(From);
          }
          if (to_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(To);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
          }
          if (FrameId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FrameId);
          }
          if (DmgType != global::Nova.Client.Recorder.Types.DamageType.Normal) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DmgType);
          }
          if (Value != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
          }
          if (HitDamageID != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitDamageID);
          }
          if (IsCrite != false) {
            size += 1 + 1;
          }
          if (from_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
          }
          if (to_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Damage other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.FrameId != 0) {
            FrameId = other.FrameId;
          }
          if (other.DmgType != global::Nova.Client.Recorder.Types.DamageType.Normal) {
            DmgType = other.DmgType;
          }
          if (other.Value != 0) {
            Value = other.Value;
          }
          if (other.HitDamageID != 0) {
            HitDamageID = other.HitDamageID;
          }
          if (other.IsCrite != false) {
            IsCrite = other.IsCrite;
          }
          if (other.from_ != null) {
            if (from_ == null) {
              From = new global::Nova.Client.Recorder.Types.Attacker();
            }
            From.MergeFrom(other.From);
          }
          if (other.to_ != null) {
            if (to_ == null) {
              To = new global::Nova.Client.Recorder.Types.Defender();
            }
            To.MergeFrom(other.To);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt32();
                break;
              }
              case 16: {
                FrameId = input.ReadUInt32();
                break;
              }
              case 24: {
                DmgType = (global::Nova.Client.Recorder.Types.DamageType) input.ReadEnum();
                break;
              }
              case 32: {
                Value = input.ReadInt32();
                break;
              }
              case 40: {
                HitDamageID = input.ReadInt32();
                break;
              }
              case 48: {
                IsCrite = input.ReadBool();
                break;
              }
              case 58: {
                if (from_ == null) {
                  From = new global::Nova.Client.Recorder.Types.Attacker();
                }
                input.ReadMessage(From);
                break;
              }
              case 66: {
                if (to_ == null) {
                  To = new global::Nova.Client.Recorder.Types.Defender();
                }
                input.ReadMessage(To);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Id = input.ReadUInt32();
                break;
              }
              case 16: {
                FrameId = input.ReadUInt32();
                break;
              }
              case 24: {
                DmgType = (global::Nova.Client.Recorder.Types.DamageType) input.ReadEnum();
                break;
              }
              case 32: {
                Value = input.ReadInt32();
                break;
              }
              case 40: {
                HitDamageID = input.ReadInt32();
                break;
              }
              case 48: {
                IsCrite = input.ReadBool();
                break;
              }
              case 58: {
                if (from_ == null) {
                  From = new global::Nova.Client.Recorder.Types.Attacker();
                }
                input.ReadMessage(From);
                break;
              }
              case 66: {
                if (to_ == null) {
                  To = new global::Nova.Client.Recorder.Types.Defender();
                }
                input.ReadMessage(To);
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Attacker : pb::IMessage<Attacker>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Attacker> _parser = new pb::MessageParser<Attacker>(() => new Attacker());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Attacker> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Nova.Client.Recorder.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Attacker() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Attacker(Attacker other) : this() {
          id_ = other.id_;
          protoId_ = other.protoId_;
          entClass_ = other.entClass_;
          atk_ = other.atk_;
          skillPercentAmend_ = other.skillPercentAmend_;
          talentGroupPercentAmend_ = other.talentGroupPercentAmend_;
          skillAbsAmend_ = other.skillAbsAmend_;
          talentGroupAbsAmend_ = other.talentGroupAbsAmend_;
          perkIntensityRatio_ = other.perkIntensityRatio_;
          slotDmgRatio_ = other.slotDmgRatio_;
          eE_ = other.eE_;
          genDmgRatio_ = other.genDmgRatio_;
          dmgPlus_ = other.dmgPlus_;
          critRatio_ = other.critRatio_;
          finalDmgRatio_ = other.finalDmgRatio_;
          finalDmgPlus_ = other.finalDmgPlus_;
          critRate_ = other.critRate_;
          defPierce_ = other.defPierce_;
          defIgnore_ = other.defIgnore_;
          wEP_ = other.wEP_;
          fEP_ = other.fEP_;
          sEP_ = other.sEP_;
          aEP_ = other.aEP_;
          lEP_ = other.lEP_;
          dEP_ = other.dEP_;
          wEI_ = other.wEI_;
          fEI_ = other.fEI_;
          sEI_ = other.sEI_;
          aEI_ = other.aEI_;
          lEI_ = other.lEI_;
          dEI_ = other.dEI_;
          buffIDs_ = other.buffIDs_.Clone();
          effectIDs_ = other.effectIDs_.Clone();
          attributes_ = other.attributes_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Attacker Clone() {
          return new Attacker(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private uint id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "proto_id" field.</summary>
        public const int ProtoIdFieldNumber = 2;
        private uint protoId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProtoId {
          get { return protoId_; }
          set {
            protoId_ = value;
          }
        }

        /// <summary>Field number for the "ent_class" field.</summary>
        public const int EntClassFieldNumber = 3;
        private global::Nova.Client.Recorder.Types.EntityClass entClass_ = global::Nova.Client.Recorder.Types.EntityClass.Role;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Nova.Client.Recorder.Types.EntityClass EntClass {
          get { return entClass_; }
          set {
            entClass_ = value;
          }
        }

        /// <summary>Field number for the "atk" field.</summary>
        public const int AtkFieldNumber = 4;
        private float atk_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Atk {
          get { return atk_; }
          set {
            atk_ = value;
          }
        }

        /// <summary>Field number for the "skill_percent_amend" field.</summary>
        public const int SkillPercentAmendFieldNumber = 5;
        private float skillPercentAmend_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float SkillPercentAmend {
          get { return skillPercentAmend_; }
          set {
            skillPercentAmend_ = value;
          }
        }

        /// <summary>Field number for the "talent_group_percent_amend" field.</summary>
        public const int TalentGroupPercentAmendFieldNumber = 6;
        private float talentGroupPercentAmend_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float TalentGroupPercentAmend {
          get { return talentGroupPercentAmend_; }
          set {
            talentGroupPercentAmend_ = value;
          }
        }

        /// <summary>Field number for the "skill_abs_amend" field.</summary>
        public const int SkillAbsAmendFieldNumber = 7;
        private float skillAbsAmend_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float SkillAbsAmend {
          get { return skillAbsAmend_; }
          set {
            skillAbsAmend_ = value;
          }
        }

        /// <summary>Field number for the "talent_group_abs_amend" field.</summary>
        public const int TalentGroupAbsAmendFieldNumber = 8;
        private float talentGroupAbsAmend_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float TalentGroupAbsAmend {
          get { return talentGroupAbsAmend_; }
          set {
            talentGroupAbsAmend_ = value;
          }
        }

        /// <summary>Field number for the "perk_intensity_ratio" field.</summary>
        public const int PerkIntensityRatioFieldNumber = 9;
        private float perkIntensityRatio_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float PerkIntensityRatio {
          get { return perkIntensityRatio_; }
          set {
            perkIntensityRatio_ = value;
          }
        }

        /// <summary>Field number for the "slot_dmg_ratio" field.</summary>
        public const int SlotDmgRatioFieldNumber = 10;
        private float slotDmgRatio_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float SlotDmgRatio {
          get { return slotDmgRatio_; }
          set {
            slotDmgRatio_ = value;
          }
        }

        /// <summary>Field number for the "e_e" field.</summary>
        public const int EEFieldNumber = 11;
        private float eE_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float EE {
          get { return eE_; }
          set {
            eE_ = value;
          }
        }

        /// <summary>Field number for the "gen_dmg_ratio" field.</summary>
        public const int GenDmgRatioFieldNumber = 12;
        private float genDmgRatio_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float GenDmgRatio {
          get { return genDmgRatio_; }
          set {
            genDmgRatio_ = value;
          }
        }

        /// <summary>Field number for the "dmg_plus" field.</summary>
        public const int DmgPlusFieldNumber = 13;
        private float dmgPlus_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float DmgPlus {
          get { return dmgPlus_; }
          set {
            dmgPlus_ = value;
          }
        }

        /// <summary>Field number for the "crit_ratio" field.</summary>
        public const int CritRatioFieldNumber = 14;
        private float critRatio_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float CritRatio {
          get { return critRatio_; }
          set {
            critRatio_ = value;
          }
        }

        /// <summary>Field number for the "final_dmg_ratio" field.</summary>
        public const int FinalDmgRatioFieldNumber = 15;
        private float finalDmgRatio_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float FinalDmgRatio {
          get { return finalDmgRatio_; }
          set {
            finalDmgRatio_ = value;
          }
        }

        /// <summary>Field number for the "final_dmg_plus" field.</summary>
        public const int FinalDmgPlusFieldNumber = 16;
        private float finalDmgPlus_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float FinalDmgPlus {
          get { return finalDmgPlus_; }
          set {
            finalDmgPlus_ = value;
          }
        }

        /// <summary>Field number for the "crit_rate" field.</summary>
        public const int CritRateFieldNumber = 17;
        private float critRate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float CritRate {
          get { return critRate_; }
          set {
            critRate_ = value;
          }
        }

        /// <summary>Field number for the "def_pierce" field.</summary>
        public const int DefPierceFieldNumber = 18;
        private float defPierce_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float DefPierce {
          get { return defPierce_; }
          set {
            defPierce_ = value;
          }
        }

        /// <summary>Field number for the "def_ignore" field.</summary>
        public const int DefIgnoreFieldNumber = 19;
        private float defIgnore_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float DefIgnore {
          get { return defIgnore_; }
          set {
            defIgnore_ = value;
          }
        }

        /// <summary>Field number for the "w_e_p" field.</summary>
        public const int WEPFieldNumber = 20;
        private int wEP_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int WEP {
          get { return wEP_; }
          set {
            wEP_ = value;
          }
        }

        /// <summary>Field number for the "f_e_p" field.</summary>
        public const int FEPFieldNumber = 21;
        private int fEP_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int FEP {
          get { return fEP_; }
          set {
            fEP_ = value;
          }
        }

        /// <summary>Field number for the "s_e_p" field.</summary>
        public const int SEPFieldNumber = 22;
        private int sEP_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int SEP {
          get { return sEP_; }
          set {
            sEP_ = value;
          }
        }

        /// <summary>Field number for the "a_e_p" field.</summary>
        public const int AEPFieldNumber = 23;
        private int aEP_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int AEP {
          get { return aEP_; }
          set {
            aEP_ = value;
          }
        }

        /// <summary>Field number for the "l_e_p" field.</summary>
        public const int LEPFieldNumber = 24;
        private int lEP_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LEP {
          get { return lEP_; }
          set {
            lEP_ = value;
          }
        }

        /// <summary>Field number for the "d_e_p" field.</summary>
        public const int DEPFieldNumber = 25;
        private int dEP_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int DEP {
          get { return dEP_; }
          set {
            dEP_ = value;
          }
        }

        /// <summary>Field number for the "w_e_i" field.</summary>
        public const int WEIFieldNumber = 26;
        private float wEI_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float WEI {
          get { return wEI_; }
          set {
            wEI_ = value;
          }
        }

        /// <summary>Field number for the "f_e_i" field.</summary>
        public const int FEIFieldNumber = 27;
        private float fEI_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float FEI {
          get { return fEI_; }
          set {
            fEI_ = value;
          }
        }

        /// <summary>Field number for the "s_e_i" field.</summary>
        public const int SEIFieldNumber = 28;
        private float sEI_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float SEI {
          get { return sEI_; }
          set {
            sEI_ = value;
          }
        }

        /// <summary>Field number for the "a_e_i" field.</summary>
        public const int AEIFieldNumber = 29;
        private float aEI_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float AEI {
          get { return aEI_; }
          set {
            aEI_ = value;
          }
        }

        /// <summary>Field number for the "l_e_i" field.</summary>
        public const int LEIFieldNumber = 30;
        private float lEI_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float LEI {
          get { return lEI_; }
          set {
            lEI_ = value;
          }
        }

        /// <summary>Field number for the "d_e_i" field.</summary>
        public const int DEIFieldNumber = 31;
        private float dEI_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float DEI {
          get { return dEI_; }
          set {
            dEI_ = value;
          }
        }

        /// <summary>Field number for the "buff_i_ds" field.</summary>
        public const int BuffIDsFieldNumber = 32;
        private static readonly pb::FieldCodec<int> _repeated_buffIDs_codec
            = pb::FieldCodec.ForInt32(258);
        private readonly pbc::RepeatedField<int> buffIDs_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<int> BuffIDs {
          get { return buffIDs_; }
        }

        /// <summary>Field number for the "effect_i_ds" field.</summary>
        public const int EffectIDsFieldNumber = 34;
        private static readonly pb::FieldCodec<int> _repeated_effectIDs_codec
            = pb::FieldCodec.ForInt32(274);
        private readonly pbc::RepeatedField<int> effectIDs_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<int> EffectIDs {
          get { return effectIDs_; }
        }

        /// <summary>Field number for the "attributes" field.</summary>
        public const int AttributesFieldNumber = 35;
        private static readonly pb::FieldCodec<global::Nova.Client.Recorder.Types.Attribute> _repeated_attributes_codec
            = pb::FieldCodec.ForMessage(282, global::Nova.Client.Recorder.Types.Attribute.Parser);
        private readonly pbc::RepeatedField<global::Nova.Client.Recorder.Types.Attribute> attributes_ = new pbc::RepeatedField<global::Nova.Client.Recorder.Types.Attribute>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Nova.Client.Recorder.Types.Attribute> Attributes {
          get { return attributes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Attacker);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Attacker other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (ProtoId != other.ProtoId) return false;
          if (EntClass != other.EntClass) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Atk, other.Atk)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SkillPercentAmend, other.SkillPercentAmend)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TalentGroupPercentAmend, other.TalentGroupPercentAmend)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SkillAbsAmend, other.SkillAbsAmend)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TalentGroupAbsAmend, other.TalentGroupAbsAmend)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PerkIntensityRatio, other.PerkIntensityRatio)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SlotDmgRatio, other.SlotDmgRatio)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EE, other.EE)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GenDmgRatio, other.GenDmgRatio)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DmgPlus, other.DmgPlus)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CritRatio, other.CritRatio)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FinalDmgRatio, other.FinalDmgRatio)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FinalDmgPlus, other.FinalDmgPlus)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CritRate, other.CritRate)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DefPierce, other.DefPierce)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DefIgnore, other.DefIgnore)) return false;
          if (WEP != other.WEP) return false;
          if (FEP != other.FEP) return false;
          if (SEP != other.SEP) return false;
          if (AEP != other.AEP) return false;
          if (LEP != other.LEP) return false;
          if (DEP != other.DEP) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WEI, other.WEI)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FEI, other.FEI)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SEI, other.SEI)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AEI, other.AEI)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LEI, other.LEI)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DEI, other.DEI)) return false;
          if(!buffIDs_.Equals(other.buffIDs_)) return false;
          if(!effectIDs_.Equals(other.effectIDs_)) return false;
          if(!attributes_.Equals(other.attributes_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (ProtoId != 0) hash ^= ProtoId.GetHashCode();
          if (EntClass != global::Nova.Client.Recorder.Types.EntityClass.Role) hash ^= EntClass.GetHashCode();
          if (Atk != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Atk);
          if (SkillPercentAmend != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SkillPercentAmend);
          if (TalentGroupPercentAmend != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TalentGroupPercentAmend);
          if (SkillAbsAmend != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SkillAbsAmend);
          if (TalentGroupAbsAmend != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TalentGroupAbsAmend);
          if (PerkIntensityRatio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PerkIntensityRatio);
          if (SlotDmgRatio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SlotDmgRatio);
          if (EE != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EE);
          if (GenDmgRatio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GenDmgRatio);
          if (DmgPlus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DmgPlus);
          if (CritRatio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CritRatio);
          if (FinalDmgRatio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FinalDmgRatio);
          if (FinalDmgPlus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FinalDmgPlus);
          if (CritRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CritRate);
          if (DefPierce != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DefPierce);
          if (DefIgnore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DefIgnore);
          if (WEP != 0) hash ^= WEP.GetHashCode();
          if (FEP != 0) hash ^= FEP.GetHashCode();
          if (SEP != 0) hash ^= SEP.GetHashCode();
          if (AEP != 0) hash ^= AEP.GetHashCode();
          if (LEP != 0) hash ^= LEP.GetHashCode();
          if (DEP != 0) hash ^= DEP.GetHashCode();
          if (WEI != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WEI);
          if (FEI != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FEI);
          if (SEI != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SEI);
          if (AEI != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AEI);
          if (LEI != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LEI);
          if (DEI != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DEI);
          hash ^= buffIDs_.GetHashCode();
          hash ^= effectIDs_.GetHashCode();
          hash ^= attributes_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Id);
          }
          if (ProtoId != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(ProtoId);
          }
          if (EntClass != global::Nova.Client.Recorder.Types.EntityClass.Role) {
            output.WriteRawTag(24);
            output.WriteEnum((int) EntClass);
          }
          if (Atk != 0F) {
            output.WriteRawTag(37);
            output.WriteFloat(Atk);
          }
          if (SkillPercentAmend != 0F) {
            output.WriteRawTag(45);
            output.WriteFloat(SkillPercentAmend);
          }
          if (TalentGroupPercentAmend != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(TalentGroupPercentAmend);
          }
          if (SkillAbsAmend != 0F) {
            output.WriteRawTag(61);
            output.WriteFloat(SkillAbsAmend);
          }
          if (TalentGroupAbsAmend != 0F) {
            output.WriteRawTag(69);
            output.WriteFloat(TalentGroupAbsAmend);
          }
          if (PerkIntensityRatio != 0F) {
            output.WriteRawTag(77);
            output.WriteFloat(PerkIntensityRatio);
          }
          if (SlotDmgRatio != 0F) {
            output.WriteRawTag(85);
            output.WriteFloat(SlotDmgRatio);
          }
          if (EE != 0F) {
            output.WriteRawTag(93);
            output.WriteFloat(EE);
          }
          if (GenDmgRatio != 0F) {
            output.WriteRawTag(101);
            output.WriteFloat(GenDmgRatio);
          }
          if (DmgPlus != 0F) {
            output.WriteRawTag(109);
            output.WriteFloat(DmgPlus);
          }
          if (CritRatio != 0F) {
            output.WriteRawTag(117);
            output.WriteFloat(CritRatio);
          }
          if (FinalDmgRatio != 0F) {
            output.WriteRawTag(125);
            output.WriteFloat(FinalDmgRatio);
          }
          if (FinalDmgPlus != 0F) {
            output.WriteRawTag(133, 1);
            output.WriteFloat(FinalDmgPlus);
          }
          if (CritRate != 0F) {
            output.WriteRawTag(141, 1);
            output.WriteFloat(CritRate);
          }
          if (DefPierce != 0F) {
            output.WriteRawTag(149, 1);
            output.WriteFloat(DefPierce);
          }
          if (DefIgnore != 0F) {
            output.WriteRawTag(157, 1);
            output.WriteFloat(DefIgnore);
          }
          if (WEP != 0) {
            output.WriteRawTag(160, 1);
            output.WriteInt32(WEP);
          }
          if (FEP != 0) {
            output.WriteRawTag(168, 1);
            output.WriteInt32(FEP);
          }
          if (SEP != 0) {
            output.WriteRawTag(176, 1);
            output.WriteInt32(SEP);
          }
          if (AEP != 0) {
            output.WriteRawTag(184, 1);
            output.WriteInt32(AEP);
          }
          if (LEP != 0) {
            output.WriteRawTag(192, 1);
            output.WriteInt32(LEP);
          }
          if (DEP != 0) {
            output.WriteRawTag(200, 1);
            output.WriteInt32(DEP);
          }
          if (WEI != 0F) {
            output.WriteRawTag(213, 1);
            output.WriteFloat(WEI);
          }
          if (FEI != 0F) {
            output.WriteRawTag(221, 1);
            output.WriteFloat(FEI);
          }
          if (SEI != 0F) {
            output.WriteRawTag(229, 1);
            output.WriteFloat(SEI);
          }
          if (AEI != 0F) {
            output.WriteRawTag(237, 1);
            output.WriteFloat(AEI);
          }
          if (LEI != 0F) {
            output.WriteRawTag(245, 1);
            output.WriteFloat(LEI);
          }
          if (DEI != 0F) {
            output.WriteRawTag(253, 1);
            output.WriteFloat(DEI);
          }
          buffIDs_.WriteTo(output, _repeated_buffIDs_codec);
          effectIDs_.WriteTo(output, _repeated_effectIDs_codec);
          attributes_.WriteTo(output, _repeated_attributes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Id);
          }
          if (ProtoId != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(ProtoId);
          }
          if (EntClass != global::Nova.Client.Recorder.Types.EntityClass.Role) {
            output.WriteRawTag(24);
            output.WriteEnum((int) EntClass);
          }
          if (Atk != 0F) {
            output.WriteRawTag(37);
            output.WriteFloat(Atk);
          }
          if (SkillPercentAmend != 0F) {
            output.WriteRawTag(45);
            output.WriteFloat(SkillPercentAmend);
          }
          if (TalentGroupPercentAmend != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(TalentGroupPercentAmend);
          }
          if (SkillAbsAmend != 0F) {
            output.WriteRawTag(61);
            output.WriteFloat(SkillAbsAmend);
          }
          if (TalentGroupAbsAmend != 0F) {
            output.WriteRawTag(69);
            output.WriteFloat(TalentGroupAbsAmend);
          }
          if (PerkIntensityRatio != 0F) {
            output.WriteRawTag(77);
            output.WriteFloat(PerkIntensityRatio);
          }
          if (SlotDmgRatio != 0F) {
            output.WriteRawTag(85);
            output.WriteFloat(SlotDmgRatio);
          }
          if (EE != 0F) {
            output.WriteRawTag(93);
            output.WriteFloat(EE);
          }
          if (GenDmgRatio != 0F) {
            output.WriteRawTag(101);
            output.WriteFloat(GenDmgRatio);
          }
          if (DmgPlus != 0F) {
            output.WriteRawTag(109);
            output.WriteFloat(DmgPlus);
          }
          if (CritRatio != 0F) {
            output.WriteRawTag(117);
            output.WriteFloat(CritRatio);
          }
          if (FinalDmgRatio != 0F) {
            output.WriteRawTag(125);
            output.WriteFloat(FinalDmgRatio);
          }
          if (FinalDmgPlus != 0F) {
            output.WriteRawTag(133, 1);
            output.WriteFloat(FinalDmgPlus);
          }
          if (CritRate != 0F) {
            output.WriteRawTag(141, 1);
            output.WriteFloat(CritRate);
          }
          if (DefPierce != 0F) {
            output.WriteRawTag(149, 1);
            output.WriteFloat(DefPierce);
          }
          if (DefIgnore != 0F) {
            output.WriteRawTag(157, 1);
            output.WriteFloat(DefIgnore);
          }
          if (WEP != 0) {
            output.WriteRawTag(160, 1);
            output.WriteInt32(WEP);
          }
          if (FEP != 0) {
            output.WriteRawTag(168, 1);
            output.WriteInt32(FEP);
          }
          if (SEP != 0) {
            output.WriteRawTag(176, 1);
            output.WriteInt32(SEP);
          }
          if (AEP != 0) {
            output.WriteRawTag(184, 1);
            output.WriteInt32(AEP);
          }
          if (LEP != 0) {
            output.WriteRawTag(192, 1);
            output.WriteInt32(LEP);
          }
          if (DEP != 0) {
            output.WriteRawTag(200, 1);
            output.WriteInt32(DEP);
          }
          if (WEI != 0F) {
            output.WriteRawTag(213, 1);
            output.WriteFloat(WEI);
          }
          if (FEI != 0F) {
            output.WriteRawTag(221, 1);
            output.WriteFloat(FEI);
          }
          if (SEI != 0F) {
            output.WriteRawTag(229, 1);
            output.WriteFloat(SEI);
          }
          if (AEI != 0F) {
            output.WriteRawTag(237, 1);
            output.WriteFloat(AEI);
          }
          if (LEI != 0F) {
            output.WriteRawTag(245, 1);
            output.WriteFloat(LEI);
          }
          if (DEI != 0F) {
            output.WriteRawTag(253, 1);
            output.WriteFloat(DEI);
          }
          buffIDs_.WriteTo(ref output, _repeated_buffIDs_codec);
          effectIDs_.WriteTo(ref output, _repeated_effectIDs_codec);
          attributes_.WriteTo(ref output, _repeated_attributes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
          }
          if (ProtoId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtoId);
          }
          if (EntClass != global::Nova.Client.Recorder.Types.EntityClass.Role) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntClass);
          }
          if (Atk != 0F) {
            size += 1 + 4;
          }
          if (SkillPercentAmend != 0F) {
            size += 1 + 4;
          }
          if (TalentGroupPercentAmend != 0F) {
            size += 1 + 4;
          }
          if (SkillAbsAmend != 0F) {
            size += 1 + 4;
          }
          if (TalentGroupAbsAmend != 0F) {
            size += 1 + 4;
          }
          if (PerkIntensityRatio != 0F) {
            size += 1 + 4;
          }
          if (SlotDmgRatio != 0F) {
            size += 1 + 4;
          }
          if (EE != 0F) {
            size += 1 + 4;
          }
          if (GenDmgRatio != 0F) {
            size += 1 + 4;
          }
          if (DmgPlus != 0F) {
            size += 1 + 4;
          }
          if (CritRatio != 0F) {
            size += 1 + 4;
          }
          if (FinalDmgRatio != 0F) {
            size += 1 + 4;
          }
          if (FinalDmgPlus != 0F) {
            size += 2 + 4;
          }
          if (CritRate != 0F) {
            size += 2 + 4;
          }
          if (DefPierce != 0F) {
            size += 2 + 4;
          }
          if (DefIgnore != 0F) {
            size += 2 + 4;
          }
          if (WEP != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(WEP);
          }
          if (FEP != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(FEP);
          }
          if (SEP != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(SEP);
          }
          if (AEP != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(AEP);
          }
          if (LEP != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LEP);
          }
          if (DEP != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(DEP);
          }
          if (WEI != 0F) {
            size += 2 + 4;
          }
          if (FEI != 0F) {
            size += 2 + 4;
          }
          if (SEI != 0F) {
            size += 2 + 4;
          }
          if (AEI != 0F) {
            size += 2 + 4;
          }
          if (LEI != 0F) {
            size += 2 + 4;
          }
          if (DEI != 0F) {
            size += 2 + 4;
          }
          size += buffIDs_.CalculateSize(_repeated_buffIDs_codec);
          size += effectIDs_.CalculateSize(_repeated_effectIDs_codec);
          size += attributes_.CalculateSize(_repeated_attributes_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Attacker other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.ProtoId != 0) {
            ProtoId = other.ProtoId;
          }
          if (other.EntClass != global::Nova.Client.Recorder.Types.EntityClass.Role) {
            EntClass = other.EntClass;
          }
          if (other.Atk != 0F) {
            Atk = other.Atk;
          }
          if (other.SkillPercentAmend != 0F) {
            SkillPercentAmend = other.SkillPercentAmend;
          }
          if (other.TalentGroupPercentAmend != 0F) {
            TalentGroupPercentAmend = other.TalentGroupPercentAmend;
          }
          if (other.SkillAbsAmend != 0F) {
            SkillAbsAmend = other.SkillAbsAmend;
          }
          if (other.TalentGroupAbsAmend != 0F) {
            TalentGroupAbsAmend = other.TalentGroupAbsAmend;
          }
          if (other.PerkIntensityRatio != 0F) {
            PerkIntensityRatio = other.PerkIntensityRatio;
          }
          if (other.SlotDmgRatio != 0F) {
            SlotDmgRatio = other.SlotDmgRatio;
          }
          if (other.EE != 0F) {
            EE = other.EE;
          }
          if (other.GenDmgRatio != 0F) {
            GenDmgRatio = other.GenDmgRatio;
          }
          if (other.DmgPlus != 0F) {
            DmgPlus = other.DmgPlus;
          }
          if (other.CritRatio != 0F) {
            CritRatio = other.CritRatio;
          }
          if (other.FinalDmgRatio != 0F) {
            FinalDmgRatio = other.FinalDmgRatio;
          }
          if (other.FinalDmgPlus != 0F) {
            FinalDmgPlus = other.FinalDmgPlus;
          }
          if (other.CritRate != 0F) {
            CritRate = other.CritRate;
          }
          if (other.DefPierce != 0F) {
            DefPierce = other.DefPierce;
          }
          if (other.DefIgnore != 0F) {
            DefIgnore = other.DefIgnore;
          }
          if (other.WEP != 0) {
            WEP = other.WEP;
          }
          if (other.FEP != 0) {
            FEP = other.FEP;
          }
          if (other.SEP != 0) {
            SEP = other.SEP;
          }
          if (other.AEP != 0) {
            AEP = other.AEP;
          }
          if (other.LEP != 0) {
            LEP = other.LEP;
          }
          if (other.DEP != 0) {
            DEP = other.DEP;
          }
          if (other.WEI != 0F) {
            WEI = other.WEI;
          }
          if (other.FEI != 0F) {
            FEI = other.FEI;
          }
          if (other.SEI != 0F) {
            SEI = other.SEI;
          }
          if (other.AEI != 0F) {
            AEI = other.AEI;
          }
          if (other.LEI != 0F) {
            LEI = other.LEI;
          }
          if (other.DEI != 0F) {
            DEI = other.DEI;
          }
          buffIDs_.Add(other.buffIDs_);
          effectIDs_.Add(other.effectIDs_);
          attributes_.Add(other.attributes_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt32();
                break;
              }
              case 16: {
                ProtoId = input.ReadUInt32();
                break;
              }
              case 24: {
                EntClass = (global::Nova.Client.Recorder.Types.EntityClass) input.ReadEnum();
                break;
              }
              case 37: {
                Atk = input.ReadFloat();
                break;
              }
              case 45: {
                SkillPercentAmend = input.ReadFloat();
                break;
              }
              case 53: {
                TalentGroupPercentAmend = input.ReadFloat();
                break;
              }
              case 61: {
                SkillAbsAmend = input.ReadFloat();
                break;
              }
              case 69: {
                TalentGroupAbsAmend = input.ReadFloat();
                break;
              }
              case 77: {
                PerkIntensityRatio = input.ReadFloat();
                break;
              }
              case 85: {
                SlotDmgRatio = input.ReadFloat();
                break;
              }
              case 93: {
                EE = input.ReadFloat();
                break;
              }
              case 101: {
                GenDmgRatio = input.ReadFloat();
                break;
              }
              case 109: {
                DmgPlus = input.ReadFloat();
                break;
              }
              case 117: {
                CritRatio = input.ReadFloat();
                break;
              }
              case 125: {
                FinalDmgRatio = input.ReadFloat();
                break;
              }
              case 133: {
                FinalDmgPlus = input.ReadFloat();
                break;
              }
              case 141: {
                CritRate = input.ReadFloat();
                break;
              }
              case 149: {
                DefPierce = input.ReadFloat();
                break;
              }
              case 157: {
                DefIgnore = input.ReadFloat();
                break;
              }
              case 160: {
                WEP = input.ReadInt32();
                break;
              }
              case 168: {
                FEP = input.ReadInt32();
                break;
              }
              case 176: {
                SEP = input.ReadInt32();
                break;
              }
              case 184: {
                AEP = input.ReadInt32();
                break;
              }
              case 192: {
                LEP = input.ReadInt32();
                break;
              }
              case 200: {
                DEP = input.ReadInt32();
                break;
              }
              case 213: {
                WEI = input.ReadFloat();
                break;
              }
              case 221: {
                FEI = input.ReadFloat();
                break;
              }
              case 229: {
                SEI = input.ReadFloat();
                break;
              }
              case 237: {
                AEI = input.ReadFloat();
                break;
              }
              case 245: {
                LEI = input.ReadFloat();
                break;
              }
              case 253: {
                DEI = input.ReadFloat();
                break;
              }
              case 258:
              case 256: {
                buffIDs_.AddEntriesFrom(input, _repeated_buffIDs_codec);
                break;
              }
              case 274:
              case 272: {
                effectIDs_.AddEntriesFrom(input, _repeated_effectIDs_codec);
                break;
              }
              case 282: {
                attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Id = input.ReadUInt32();
                break;
              }
              case 16: {
                ProtoId = input.ReadUInt32();
                break;
              }
              case 24: {
                EntClass = (global::Nova.Client.Recorder.Types.EntityClass) input.ReadEnum();
                break;
              }
              case 37: {
                Atk = input.ReadFloat();
                break;
              }
              case 45: {
                SkillPercentAmend = input.ReadFloat();
                break;
              }
              case 53: {
                TalentGroupPercentAmend = input.ReadFloat();
                break;
              }
              case 61: {
                SkillAbsAmend = input.ReadFloat();
                break;
              }
              case 69: {
                TalentGroupAbsAmend = input.ReadFloat();
                break;
              }
              case 77: {
                PerkIntensityRatio = input.ReadFloat();
                break;
              }
              case 85: {
                SlotDmgRatio = input.ReadFloat();
                break;
              }
              case 93: {
                EE = input.ReadFloat();
                break;
              }
              case 101: {
                GenDmgRatio = input.ReadFloat();
                break;
              }
              case 109: {
                DmgPlus = input.ReadFloat();
                break;
              }
              case 117: {
                CritRatio = input.ReadFloat();
                break;
              }
              case 125: {
                FinalDmgRatio = input.ReadFloat();
                break;
              }
              case 133: {
                FinalDmgPlus = input.ReadFloat();
                break;
              }
              case 141: {
                CritRate = input.ReadFloat();
                break;
              }
              case 149: {
                DefPierce = input.ReadFloat();
                break;
              }
              case 157: {
                DefIgnore = input.ReadFloat();
                break;
              }
              case 160: {
                WEP = input.ReadInt32();
                break;
              }
              case 168: {
                FEP = input.ReadInt32();
                break;
              }
              case 176: {
                SEP = input.ReadInt32();
                break;
              }
              case 184: {
                AEP = input.ReadInt32();
                break;
              }
              case 192: {
                LEP = input.ReadInt32();
                break;
              }
              case 200: {
                DEP = input.ReadInt32();
                break;
              }
              case 213: {
                WEI = input.ReadFloat();
                break;
              }
              case 221: {
                FEI = input.ReadFloat();
                break;
              }
              case 229: {
                SEI = input.ReadFloat();
                break;
              }
              case 237: {
                AEI = input.ReadFloat();
                break;
              }
              case 245: {
                LEI = input.ReadFloat();
                break;
              }
              case 253: {
                DEI = input.ReadFloat();
                break;
              }
              case 258:
              case 256: {
                buffIDs_.AddEntriesFrom(ref input, _repeated_buffIDs_codec);
                break;
              }
              case 274:
              case 272: {
                effectIDs_.AddEntriesFrom(ref input, _repeated_effectIDs_codec);
                break;
              }
              case 282: {
                attributes_.AddEntriesFrom(ref input, _repeated_attributes_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Attribute : pb::IMessage<Attribute>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Attribute> _parser = new pb::MessageParser<Attribute>(() => new Attribute());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Attribute> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Nova.Client.Recorder.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Attribute() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Attribute(Attribute other) : this() {
          origin_ = other.origin_;
          baseAmend_ = other.baseAmend_;
          percentAmend_ = other.percentAmend_;
          absAmend_ = other.absAmend_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Attribute Clone() {
          return new Attribute(this);
        }

        /// <summary>Field number for the "origin" field.</summary>
        public const int OriginFieldNumber = 1;
        private float origin_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Origin {
          get { return origin_; }
          set {
            origin_ = value;
          }
        }

        /// <summary>Field number for the "base_amend" field.</summary>
        public const int BaseAmendFieldNumber = 2;
        private float baseAmend_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float BaseAmend {
          get { return baseAmend_; }
          set {
            baseAmend_ = value;
          }
        }

        /// <summary>Field number for the "percent_amend" field.</summary>
        public const int PercentAmendFieldNumber = 3;
        private float percentAmend_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float PercentAmend {
          get { return percentAmend_; }
          set {
            percentAmend_ = value;
          }
        }

        /// <summary>Field number for the "abs_amend" field.</summary>
        public const int AbsAmendFieldNumber = 4;
        private float absAmend_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float AbsAmend {
          get { return absAmend_; }
          set {
            absAmend_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Attribute);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Attribute other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Origin, other.Origin)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BaseAmend, other.BaseAmend)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PercentAmend, other.PercentAmend)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AbsAmend, other.AbsAmend)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Origin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Origin);
          if (BaseAmend != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BaseAmend);
          if (PercentAmend != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PercentAmend);
          if (AbsAmend != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AbsAmend);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Origin != 0F) {
            output.WriteRawTag(13);
            output.WriteFloat(Origin);
          }
          if (BaseAmend != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(BaseAmend);
          }
          if (PercentAmend != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(PercentAmend);
          }
          if (AbsAmend != 0F) {
            output.WriteRawTag(37);
            output.WriteFloat(AbsAmend);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Origin != 0F) {
            output.WriteRawTag(13);
            output.WriteFloat(Origin);
          }
          if (BaseAmend != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(BaseAmend);
          }
          if (PercentAmend != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(PercentAmend);
          }
          if (AbsAmend != 0F) {
            output.WriteRawTag(37);
            output.WriteFloat(AbsAmend);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Origin != 0F) {
            size += 1 + 4;
          }
          if (BaseAmend != 0F) {
            size += 1 + 4;
          }
          if (PercentAmend != 0F) {
            size += 1 + 4;
          }
          if (AbsAmend != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Attribute other) {
          if (other == null) {
            return;
          }
          if (other.Origin != 0F) {
            Origin = other.Origin;
          }
          if (other.BaseAmend != 0F) {
            BaseAmend = other.BaseAmend;
          }
          if (other.PercentAmend != 0F) {
            PercentAmend = other.PercentAmend;
          }
          if (other.AbsAmend != 0F) {
            AbsAmend = other.AbsAmend;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 13: {
                Origin = input.ReadFloat();
                break;
              }
              case 21: {
                BaseAmend = input.ReadFloat();
                break;
              }
              case 29: {
                PercentAmend = input.ReadFloat();
                break;
              }
              case 37: {
                AbsAmend = input.ReadFloat();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 13: {
                Origin = input.ReadFloat();
                break;
              }
              case 21: {
                BaseAmend = input.ReadFloat();
                break;
              }
              case 29: {
                PercentAmend = input.ReadFloat();
                break;
              }
              case 37: {
                AbsAmend = input.ReadFloat();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Defender : pb::IMessage<Defender>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Defender> _parser = new pb::MessageParser<Defender>(() => new Defender());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Defender> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Nova.Client.Recorder.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Defender() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Defender(Defender other) : this() {
          id_ = other.id_;
          protoId_ = other.protoId_;
          entClass_ = other.entClass_;
          hP_ = other.hP_;
          maxHP_ = other.maxHP_;
          erAmend_ = other.erAmend_;
          defAmend_ = other.defAmend_;
          rcdSlotDmgRatio_ = other.rcdSlotDmgRatio_;
          eERCD_ = other.eERCD_;
          genDmgRcdRatio_ = other.genDmgRcdRatio_;
          dmgPlusRcd_ = other.dmgPlusRcd_;
          srcDef_ = other.srcDef_;
          critResistance_ = other.critResistance_;
          wER_ = other.wER_;
          fER_ = other.fER_;
          sER_ = other.sER_;
          aER_ = other.aER_;
          lER_ = other.lER_;
          dER_ = other.dER_;
          suppress_ = other.suppress_;
          buffIDs_ = other.buffIDs_.Clone();
          effectIDs_ = other.effectIDs_.Clone();
          attributes_ = other.attributes_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Defender Clone() {
          return new Defender(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private uint id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "proto_id" field.</summary>
        public const int ProtoIdFieldNumber = 2;
        private uint protoId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProtoId {
          get { return protoId_; }
          set {
            protoId_ = value;
          }
        }

        /// <summary>Field number for the "ent_class" field.</summary>
        public const int EntClassFieldNumber = 3;
        private global::Nova.Client.Recorder.Types.EntityClass entClass_ = global::Nova.Client.Recorder.Types.EntityClass.Role;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Nova.Client.Recorder.Types.EntityClass EntClass {
          get { return entClass_; }
          set {
            entClass_ = value;
          }
        }

        /// <summary>Field number for the "h_p" field.</summary>
        public const int HPFieldNumber = 4;
        private int hP_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int HP {
          get { return hP_; }
          set {
            hP_ = value;
          }
        }

        /// <summary>Field number for the "max_h_p" field.</summary>
        public const int MaxHPFieldNumber = 5;
        private int maxHP_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int MaxHP {
          get { return maxHP_; }
          set {
            maxHP_ = value;
          }
        }

        /// <summary>Field number for the "er_amend" field.</summary>
        public const int ErAmendFieldNumber = 6;
        private float erAmend_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float ErAmend {
          get { return erAmend_; }
          set {
            erAmend_ = value;
          }
        }

        /// <summary>Field number for the "def_amend" field.</summary>
        public const int DefAmendFieldNumber = 7;
        private float defAmend_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float DefAmend {
          get { return defAmend_; }
          set {
            defAmend_ = value;
          }
        }

        /// <summary>Field number for the "rcd_slot_dmg_ratio" field.</summary>
        public const int RcdSlotDmgRatioFieldNumber = 8;
        private float rcdSlotDmgRatio_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float RcdSlotDmgRatio {
          get { return rcdSlotDmgRatio_; }
          set {
            rcdSlotDmgRatio_ = value;
          }
        }

        /// <summary>Field number for the "e_e_r_c_d" field.</summary>
        public const int EERCDFieldNumber = 9;
        private float eERCD_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float EERCD {
          get { return eERCD_; }
          set {
            eERCD_ = value;
          }
        }

        /// <summary>Field number for the "gen_dmg_rcd_ratio" field.</summary>
        public const int GenDmgRcdRatioFieldNumber = 10;
        private float genDmgRcdRatio_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float GenDmgRcdRatio {
          get { return genDmgRcdRatio_; }
          set {
            genDmgRcdRatio_ = value;
          }
        }

        /// <summary>Field number for the "dmg_plus_rcd" field.</summary>
        public const int DmgPlusRcdFieldNumber = 11;
        private float dmgPlusRcd_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float DmgPlusRcd {
          get { return dmgPlusRcd_; }
          set {
            dmgPlusRcd_ = value;
          }
        }

        /// <summary>Field number for the "src_def" field.</summary>
        public const int SrcDefFieldNumber = 12;
        private float srcDef_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float SrcDef {
          get { return srcDef_; }
          set {
            srcDef_ = value;
          }
        }

        /// <summary>Field number for the "crit_resistance" field.</summary>
        public const int CritResistanceFieldNumber = 13;
        private float critResistance_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float CritResistance {
          get { return critResistance_; }
          set {
            critResistance_ = value;
          }
        }

        /// <summary>Field number for the "w_e_r" field.</summary>
        public const int WERFieldNumber = 14;
        private int wER_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int WER {
          get { return wER_; }
          set {
            wER_ = value;
          }
        }

        /// <summary>Field number for the "f_e_r" field.</summary>
        public const int FERFieldNumber = 15;
        private int fER_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int FER {
          get { return fER_; }
          set {
            fER_ = value;
          }
        }

        /// <summary>Field number for the "s_e_r" field.</summary>
        public const int SERFieldNumber = 16;
        private int sER_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int SER {
          get { return sER_; }
          set {
            sER_ = value;
          }
        }

        /// <summary>Field number for the "a_e_r" field.</summary>
        public const int AERFieldNumber = 17;
        private int aER_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int AER {
          get { return aER_; }
          set {
            aER_ = value;
          }
        }

        /// <summary>Field number for the "l_e_r" field.</summary>
        public const int LERFieldNumber = 18;
        private int lER_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LER {
          get { return lER_; }
          set {
            lER_ = value;
          }
        }

        /// <summary>Field number for the "d_e_r" field.</summary>
        public const int DERFieldNumber = 19;
        private int dER_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int DER {
          get { return dER_; }
          set {
            dER_ = value;
          }
        }

        /// <summary>Field number for the "suppress" field.</summary>
        public const int SuppressFieldNumber = 20;
        private float suppress_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Suppress {
          get { return suppress_; }
          set {
            suppress_ = value;
          }
        }

        /// <summary>Field number for the "buff_i_ds" field.</summary>
        public const int BuffIDsFieldNumber = 21;
        private static readonly pb::FieldCodec<int> _repeated_buffIDs_codec
            = pb::FieldCodec.ForInt32(170);
        private readonly pbc::RepeatedField<int> buffIDs_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<int> BuffIDs {
          get { return buffIDs_; }
        }

        /// <summary>Field number for the "effect_i_ds" field.</summary>
        public const int EffectIDsFieldNumber = 23;
        private static readonly pb::FieldCodec<int> _repeated_effectIDs_codec
            = pb::FieldCodec.ForInt32(186);
        private readonly pbc::RepeatedField<int> effectIDs_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<int> EffectIDs {
          get { return effectIDs_; }
        }

        /// <summary>Field number for the "attributes" field.</summary>
        public const int AttributesFieldNumber = 24;
        private static readonly pb::FieldCodec<global::Nova.Client.Recorder.Types.Attribute> _repeated_attributes_codec
            = pb::FieldCodec.ForMessage(194, global::Nova.Client.Recorder.Types.Attribute.Parser);
        private readonly pbc::RepeatedField<global::Nova.Client.Recorder.Types.Attribute> attributes_ = new pbc::RepeatedField<global::Nova.Client.Recorder.Types.Attribute>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Nova.Client.Recorder.Types.Attribute> Attributes {
          get { return attributes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Defender);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Defender other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (ProtoId != other.ProtoId) return false;
          if (EntClass != other.EntClass) return false;
          if (HP != other.HP) return false;
          if (MaxHP != other.MaxHP) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ErAmend, other.ErAmend)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DefAmend, other.DefAmend)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RcdSlotDmgRatio, other.RcdSlotDmgRatio)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EERCD, other.EERCD)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GenDmgRcdRatio, other.GenDmgRcdRatio)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DmgPlusRcd, other.DmgPlusRcd)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SrcDef, other.SrcDef)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CritResistance, other.CritResistance)) return false;
          if (WER != other.WER) return false;
          if (FER != other.FER) return false;
          if (SER != other.SER) return false;
          if (AER != other.AER) return false;
          if (LER != other.LER) return false;
          if (DER != other.DER) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Suppress, other.Suppress)) return false;
          if(!buffIDs_.Equals(other.buffIDs_)) return false;
          if(!effectIDs_.Equals(other.effectIDs_)) return false;
          if(!attributes_.Equals(other.attributes_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (ProtoId != 0) hash ^= ProtoId.GetHashCode();
          if (EntClass != global::Nova.Client.Recorder.Types.EntityClass.Role) hash ^= EntClass.GetHashCode();
          if (HP != 0) hash ^= HP.GetHashCode();
          if (MaxHP != 0) hash ^= MaxHP.GetHashCode();
          if (ErAmend != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ErAmend);
          if (DefAmend != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DefAmend);
          if (RcdSlotDmgRatio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RcdSlotDmgRatio);
          if (EERCD != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EERCD);
          if (GenDmgRcdRatio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GenDmgRcdRatio);
          if (DmgPlusRcd != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DmgPlusRcd);
          if (SrcDef != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SrcDef);
          if (CritResistance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CritResistance);
          if (WER != 0) hash ^= WER.GetHashCode();
          if (FER != 0) hash ^= FER.GetHashCode();
          if (SER != 0) hash ^= SER.GetHashCode();
          if (AER != 0) hash ^= AER.GetHashCode();
          if (LER != 0) hash ^= LER.GetHashCode();
          if (DER != 0) hash ^= DER.GetHashCode();
          if (Suppress != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Suppress);
          hash ^= buffIDs_.GetHashCode();
          hash ^= effectIDs_.GetHashCode();
          hash ^= attributes_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Id);
          }
          if (ProtoId != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(ProtoId);
          }
          if (EntClass != global::Nova.Client.Recorder.Types.EntityClass.Role) {
            output.WriteRawTag(24);
            output.WriteEnum((int) EntClass);
          }
          if (HP != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(HP);
          }
          if (MaxHP != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(MaxHP);
          }
          if (ErAmend != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(ErAmend);
          }
          if (DefAmend != 0F) {
            output.WriteRawTag(61);
            output.WriteFloat(DefAmend);
          }
          if (RcdSlotDmgRatio != 0F) {
            output.WriteRawTag(69);
            output.WriteFloat(RcdSlotDmgRatio);
          }
          if (EERCD != 0F) {
            output.WriteRawTag(77);
            output.WriteFloat(EERCD);
          }
          if (GenDmgRcdRatio != 0F) {
            output.WriteRawTag(85);
            output.WriteFloat(GenDmgRcdRatio);
          }
          if (DmgPlusRcd != 0F) {
            output.WriteRawTag(93);
            output.WriteFloat(DmgPlusRcd);
          }
          if (SrcDef != 0F) {
            output.WriteRawTag(101);
            output.WriteFloat(SrcDef);
          }
          if (CritResistance != 0F) {
            output.WriteRawTag(109);
            output.WriteFloat(CritResistance);
          }
          if (WER != 0) {
            output.WriteRawTag(112);
            output.WriteInt32(WER);
          }
          if (FER != 0) {
            output.WriteRawTag(120);
            output.WriteInt32(FER);
          }
          if (SER != 0) {
            output.WriteRawTag(128, 1);
            output.WriteInt32(SER);
          }
          if (AER != 0) {
            output.WriteRawTag(136, 1);
            output.WriteInt32(AER);
          }
          if (LER != 0) {
            output.WriteRawTag(144, 1);
            output.WriteInt32(LER);
          }
          if (DER != 0) {
            output.WriteRawTag(152, 1);
            output.WriteInt32(DER);
          }
          if (Suppress != 0F) {
            output.WriteRawTag(165, 1);
            output.WriteFloat(Suppress);
          }
          buffIDs_.WriteTo(output, _repeated_buffIDs_codec);
          effectIDs_.WriteTo(output, _repeated_effectIDs_codec);
          attributes_.WriteTo(output, _repeated_attributes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Id);
          }
          if (ProtoId != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(ProtoId);
          }
          if (EntClass != global::Nova.Client.Recorder.Types.EntityClass.Role) {
            output.WriteRawTag(24);
            output.WriteEnum((int) EntClass);
          }
          if (HP != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(HP);
          }
          if (MaxHP != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(MaxHP);
          }
          if (ErAmend != 0F) {
            output.WriteRawTag(53);
            output.WriteFloat(ErAmend);
          }
          if (DefAmend != 0F) {
            output.WriteRawTag(61);
            output.WriteFloat(DefAmend);
          }
          if (RcdSlotDmgRatio != 0F) {
            output.WriteRawTag(69);
            output.WriteFloat(RcdSlotDmgRatio);
          }
          if (EERCD != 0F) {
            output.WriteRawTag(77);
            output.WriteFloat(EERCD);
          }
          if (GenDmgRcdRatio != 0F) {
            output.WriteRawTag(85);
            output.WriteFloat(GenDmgRcdRatio);
          }
          if (DmgPlusRcd != 0F) {
            output.WriteRawTag(93);
            output.WriteFloat(DmgPlusRcd);
          }
          if (SrcDef != 0F) {
            output.WriteRawTag(101);
            output.WriteFloat(SrcDef);
          }
          if (CritResistance != 0F) {
            output.WriteRawTag(109);
            output.WriteFloat(CritResistance);
          }
          if (WER != 0) {
            output.WriteRawTag(112);
            output.WriteInt32(WER);
          }
          if (FER != 0) {
            output.WriteRawTag(120);
            output.WriteInt32(FER);
          }
          if (SER != 0) {
            output.WriteRawTag(128, 1);
            output.WriteInt32(SER);
          }
          if (AER != 0) {
            output.WriteRawTag(136, 1);
            output.WriteInt32(AER);
          }
          if (LER != 0) {
            output.WriteRawTag(144, 1);
            output.WriteInt32(LER);
          }
          if (DER != 0) {
            output.WriteRawTag(152, 1);
            output.WriteInt32(DER);
          }
          if (Suppress != 0F) {
            output.WriteRawTag(165, 1);
            output.WriteFloat(Suppress);
          }
          buffIDs_.WriteTo(ref output, _repeated_buffIDs_codec);
          effectIDs_.WriteTo(ref output, _repeated_effectIDs_codec);
          attributes_.WriteTo(ref output, _repeated_attributes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
          }
          if (ProtoId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtoId);
          }
          if (EntClass != global::Nova.Client.Recorder.Types.EntityClass.Role) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntClass);
          }
          if (HP != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(HP);
          }
          if (MaxHP != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxHP);
          }
          if (ErAmend != 0F) {
            size += 1 + 4;
          }
          if (DefAmend != 0F) {
            size += 1 + 4;
          }
          if (RcdSlotDmgRatio != 0F) {
            size += 1 + 4;
          }
          if (EERCD != 0F) {
            size += 1 + 4;
          }
          if (GenDmgRcdRatio != 0F) {
            size += 1 + 4;
          }
          if (DmgPlusRcd != 0F) {
            size += 1 + 4;
          }
          if (SrcDef != 0F) {
            size += 1 + 4;
          }
          if (CritResistance != 0F) {
            size += 1 + 4;
          }
          if (WER != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(WER);
          }
          if (FER != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(FER);
          }
          if (SER != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(SER);
          }
          if (AER != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(AER);
          }
          if (LER != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(LER);
          }
          if (DER != 0) {
            size += 2 + pb::CodedOutputStream.ComputeInt32Size(DER);
          }
          if (Suppress != 0F) {
            size += 2 + 4;
          }
          size += buffIDs_.CalculateSize(_repeated_buffIDs_codec);
          size += effectIDs_.CalculateSize(_repeated_effectIDs_codec);
          size += attributes_.CalculateSize(_repeated_attributes_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Defender other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.ProtoId != 0) {
            ProtoId = other.ProtoId;
          }
          if (other.EntClass != global::Nova.Client.Recorder.Types.EntityClass.Role) {
            EntClass = other.EntClass;
          }
          if (other.HP != 0) {
            HP = other.HP;
          }
          if (other.MaxHP != 0) {
            MaxHP = other.MaxHP;
          }
          if (other.ErAmend != 0F) {
            ErAmend = other.ErAmend;
          }
          if (other.DefAmend != 0F) {
            DefAmend = other.DefAmend;
          }
          if (other.RcdSlotDmgRatio != 0F) {
            RcdSlotDmgRatio = other.RcdSlotDmgRatio;
          }
          if (other.EERCD != 0F) {
            EERCD = other.EERCD;
          }
          if (other.GenDmgRcdRatio != 0F) {
            GenDmgRcdRatio = other.GenDmgRcdRatio;
          }
          if (other.DmgPlusRcd != 0F) {
            DmgPlusRcd = other.DmgPlusRcd;
          }
          if (other.SrcDef != 0F) {
            SrcDef = other.SrcDef;
          }
          if (other.CritResistance != 0F) {
            CritResistance = other.CritResistance;
          }
          if (other.WER != 0) {
            WER = other.WER;
          }
          if (other.FER != 0) {
            FER = other.FER;
          }
          if (other.SER != 0) {
            SER = other.SER;
          }
          if (other.AER != 0) {
            AER = other.AER;
          }
          if (other.LER != 0) {
            LER = other.LER;
          }
          if (other.DER != 0) {
            DER = other.DER;
          }
          if (other.Suppress != 0F) {
            Suppress = other.Suppress;
          }
          buffIDs_.Add(other.buffIDs_);
          effectIDs_.Add(other.effectIDs_);
          attributes_.Add(other.attributes_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadUInt32();
                break;
              }
              case 16: {
                ProtoId = input.ReadUInt32();
                break;
              }
              case 24: {
                EntClass = (global::Nova.Client.Recorder.Types.EntityClass) input.ReadEnum();
                break;
              }
              case 32: {
                HP = input.ReadInt32();
                break;
              }
              case 40: {
                MaxHP = input.ReadInt32();
                break;
              }
              case 53: {
                ErAmend = input.ReadFloat();
                break;
              }
              case 61: {
                DefAmend = input.ReadFloat();
                break;
              }
              case 69: {
                RcdSlotDmgRatio = input.ReadFloat();
                break;
              }
              case 77: {
                EERCD = input.ReadFloat();
                break;
              }
              case 85: {
                GenDmgRcdRatio = input.ReadFloat();
                break;
              }
              case 93: {
                DmgPlusRcd = input.ReadFloat();
                break;
              }
              case 101: {
                SrcDef = input.ReadFloat();
                break;
              }
              case 109: {
                CritResistance = input.ReadFloat();
                break;
              }
              case 112: {
                WER = input.ReadInt32();
                break;
              }
              case 120: {
                FER = input.ReadInt32();
                break;
              }
              case 128: {
                SER = input.ReadInt32();
                break;
              }
              case 136: {
                AER = input.ReadInt32();
                break;
              }
              case 144: {
                LER = input.ReadInt32();
                break;
              }
              case 152: {
                DER = input.ReadInt32();
                break;
              }
              case 165: {
                Suppress = input.ReadFloat();
                break;
              }
              case 170:
              case 168: {
                buffIDs_.AddEntriesFrom(input, _repeated_buffIDs_codec);
                break;
              }
              case 186:
              case 184: {
                effectIDs_.AddEntriesFrom(input, _repeated_effectIDs_codec);
                break;
              }
              case 194: {
                attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Id = input.ReadUInt32();
                break;
              }
              case 16: {
                ProtoId = input.ReadUInt32();
                break;
              }
              case 24: {
                EntClass = (global::Nova.Client.Recorder.Types.EntityClass) input.ReadEnum();
                break;
              }
              case 32: {
                HP = input.ReadInt32();
                break;
              }
              case 40: {
                MaxHP = input.ReadInt32();
                break;
              }
              case 53: {
                ErAmend = input.ReadFloat();
                break;
              }
              case 61: {
                DefAmend = input.ReadFloat();
                break;
              }
              case 69: {
                RcdSlotDmgRatio = input.ReadFloat();
                break;
              }
              case 77: {
                EERCD = input.ReadFloat();
                break;
              }
              case 85: {
                GenDmgRcdRatio = input.ReadFloat();
                break;
              }
              case 93: {
                DmgPlusRcd = input.ReadFloat();
                break;
              }
              case 101: {
                SrcDef = input.ReadFloat();
                break;
              }
              case 109: {
                CritResistance = input.ReadFloat();
                break;
              }
              case 112: {
                WER = input.ReadInt32();
                break;
              }
              case 120: {
                FER = input.ReadInt32();
                break;
              }
              case 128: {
                SER = input.ReadInt32();
                break;
              }
              case 136: {
                AER = input.ReadInt32();
                break;
              }
              case 144: {
                LER = input.ReadInt32();
                break;
              }
              case 152: {
                DER = input.ReadInt32();
                break;
              }
              case 165: {
                Suppress = input.ReadFloat();
                break;
              }
              case 170:
              case 168: {
                buffIDs_.AddEntriesFrom(ref input, _repeated_buffIDs_codec);
                break;
              }
              case 186:
              case 184: {
                effectIDs_.AddEntriesFrom(ref input, _repeated_effectIDs_codec);
                break;
              }
              case 194: {
                attributes_.AddEntriesFrom(ref input, _repeated_attributes_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Death : pb::IMessage<Death>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Death> _parser = new pb::MessageParser<Death>(() => new Death());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Death> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Nova.Client.Recorder.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Death() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Death(Death other) : this() {
          frameId_ = other.frameId_;
          id_ = other.id_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Death Clone() {
          return new Death(this);
        }

        /// <summary>Field number for the "frame_id" field.</summary>
        public const int FrameIdFieldNumber = 1;
        private uint frameId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint FrameId {
          get { return frameId_; }
          set {
            frameId_ = value;
          }
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 2;
        private uint id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Death);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Death other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FrameId != other.FrameId) return false;
          if (Id != other.Id) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (FrameId != 0) hash ^= FrameId.GetHashCode();
          if (Id != 0) hash ^= Id.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (FrameId != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(FrameId);
          }
          if (Id != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (FrameId != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(FrameId);
          }
          if (Id != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (FrameId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FrameId);
          }
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Death other) {
          if (other == null) {
            return;
          }
          if (other.FrameId != 0) {
            FrameId = other.FrameId;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                FrameId = input.ReadUInt32();
                break;
              }
              case 16: {
                Id = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                FrameId = input.ReadUInt32();
                break;
              }
              case 16: {
                Id = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
