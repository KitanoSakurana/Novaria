// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: StarTowerFloor.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from StarTowerFloor.proto</summary>
  public static partial class StarTowerFloorReflection {

    #region Descriptor
    /// <summary>File descriptor for StarTowerFloor.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StarTowerFloorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRTdGFyVG93ZXJGbG9vci5wcm90byLVAQoOU3RhclRvd2VyRmxvb3ISCgoC",
            "aWQYASABKAUSHAoUY29tbW9uX2dhbWVwbGF5X3R5cGUYAiABKAUSGgoSY29t",
            "bW9uX21vbnN0ZXJfc2V0GAMgASgJEhIKCmxpbWl0X3RpbWUYBCABKAUSHAoU",
            "ZHJvcF9vYmplY3RfZ3JvdXBfaWQYBSABKAUSGAoQZHJvcF9vYmplY3RfcmF0",
            "ZRgGIAEoBRIUCgxkcm9wX21heF9udW0YByABKAUSGwoTbW9uc3Rlcl9zdXJw",
            "bHVzX251bRgIIAEoBUIOqgILTm92YS5DbGllbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.StarTowerFloor), global::Nova.Client.StarTowerFloor.Parser, new[]{ "Id", "CommonGameplayType", "CommonMonsterSet", "LimitTime", "DropObjectGroupId", "DropObjectRate", "DropMaxNum", "MonsterSurplusNum" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StarTowerFloor : pb::IMessage<StarTowerFloor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StarTowerFloor> _parser = new pb::MessageParser<StarTowerFloor>(() => new StarTowerFloor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StarTowerFloor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.StarTowerFloorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StarTowerFloor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StarTowerFloor(StarTowerFloor other) : this() {
      id_ = other.id_;
      commonGameplayType_ = other.commonGameplayType_;
      commonMonsterSet_ = other.commonMonsterSet_;
      limitTime_ = other.limitTime_;
      dropObjectGroupId_ = other.dropObjectGroupId_;
      dropObjectRate_ = other.dropObjectRate_;
      dropMaxNum_ = other.dropMaxNum_;
      monsterSurplusNum_ = other.monsterSurplusNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StarTowerFloor Clone() {
      return new StarTowerFloor(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "common_gameplay_type" field.</summary>
    public const int CommonGameplayTypeFieldNumber = 2;
    private int commonGameplayType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CommonGameplayType {
      get { return commonGameplayType_; }
      set {
        commonGameplayType_ = value;
      }
    }

    /// <summary>Field number for the "common_monster_set" field.</summary>
    public const int CommonMonsterSetFieldNumber = 3;
    private string commonMonsterSet_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CommonMonsterSet {
      get { return commonMonsterSet_; }
      set {
        commonMonsterSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit_time" field.</summary>
    public const int LimitTimeFieldNumber = 4;
    private int limitTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LimitTime {
      get { return limitTime_; }
      set {
        limitTime_ = value;
      }
    }

    /// <summary>Field number for the "drop_object_group_id" field.</summary>
    public const int DropObjectGroupIdFieldNumber = 5;
    private int dropObjectGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DropObjectGroupId {
      get { return dropObjectGroupId_; }
      set {
        dropObjectGroupId_ = value;
      }
    }

    /// <summary>Field number for the "drop_object_rate" field.</summary>
    public const int DropObjectRateFieldNumber = 6;
    private int dropObjectRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DropObjectRate {
      get { return dropObjectRate_; }
      set {
        dropObjectRate_ = value;
      }
    }

    /// <summary>Field number for the "drop_max_num" field.</summary>
    public const int DropMaxNumFieldNumber = 7;
    private int dropMaxNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DropMaxNum {
      get { return dropMaxNum_; }
      set {
        dropMaxNum_ = value;
      }
    }

    /// <summary>Field number for the "monster_surplus_num" field.</summary>
    public const int MonsterSurplusNumFieldNumber = 8;
    private int monsterSurplusNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MonsterSurplusNum {
      get { return monsterSurplusNum_; }
      set {
        monsterSurplusNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StarTowerFloor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StarTowerFloor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CommonGameplayType != other.CommonGameplayType) return false;
      if (CommonMonsterSet != other.CommonMonsterSet) return false;
      if (LimitTime != other.LimitTime) return false;
      if (DropObjectGroupId != other.DropObjectGroupId) return false;
      if (DropObjectRate != other.DropObjectRate) return false;
      if (DropMaxNum != other.DropMaxNum) return false;
      if (MonsterSurplusNum != other.MonsterSurplusNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CommonGameplayType != 0) hash ^= CommonGameplayType.GetHashCode();
      if (CommonMonsterSet.Length != 0) hash ^= CommonMonsterSet.GetHashCode();
      if (LimitTime != 0) hash ^= LimitTime.GetHashCode();
      if (DropObjectGroupId != 0) hash ^= DropObjectGroupId.GetHashCode();
      if (DropObjectRate != 0) hash ^= DropObjectRate.GetHashCode();
      if (DropMaxNum != 0) hash ^= DropMaxNum.GetHashCode();
      if (MonsterSurplusNum != 0) hash ^= MonsterSurplusNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CommonGameplayType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CommonGameplayType);
      }
      if (CommonMonsterSet.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CommonMonsterSet);
      }
      if (LimitTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LimitTime);
      }
      if (DropObjectGroupId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DropObjectGroupId);
      }
      if (DropObjectRate != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(DropObjectRate);
      }
      if (DropMaxNum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DropMaxNum);
      }
      if (MonsterSurplusNum != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MonsterSurplusNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CommonGameplayType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CommonGameplayType);
      }
      if (CommonMonsterSet.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CommonMonsterSet);
      }
      if (LimitTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LimitTime);
      }
      if (DropObjectGroupId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DropObjectGroupId);
      }
      if (DropObjectRate != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(DropObjectRate);
      }
      if (DropMaxNum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DropMaxNum);
      }
      if (MonsterSurplusNum != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MonsterSurplusNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CommonGameplayType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommonGameplayType);
      }
      if (CommonMonsterSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommonMonsterSet);
      }
      if (LimitTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LimitTime);
      }
      if (DropObjectGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DropObjectGroupId);
      }
      if (DropObjectRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DropObjectRate);
      }
      if (DropMaxNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DropMaxNum);
      }
      if (MonsterSurplusNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterSurplusNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StarTowerFloor other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CommonGameplayType != 0) {
        CommonGameplayType = other.CommonGameplayType;
      }
      if (other.CommonMonsterSet.Length != 0) {
        CommonMonsterSet = other.CommonMonsterSet;
      }
      if (other.LimitTime != 0) {
        LimitTime = other.LimitTime;
      }
      if (other.DropObjectGroupId != 0) {
        DropObjectGroupId = other.DropObjectGroupId;
      }
      if (other.DropObjectRate != 0) {
        DropObjectRate = other.DropObjectRate;
      }
      if (other.DropMaxNum != 0) {
        DropMaxNum = other.DropMaxNum;
      }
      if (other.MonsterSurplusNum != 0) {
        MonsterSurplusNum = other.MonsterSurplusNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CommonGameplayType = input.ReadInt32();
            break;
          }
          case 26: {
            CommonMonsterSet = input.ReadString();
            break;
          }
          case 32: {
            LimitTime = input.ReadInt32();
            break;
          }
          case 40: {
            DropObjectGroupId = input.ReadInt32();
            break;
          }
          case 48: {
            DropObjectRate = input.ReadInt32();
            break;
          }
          case 56: {
            DropMaxNum = input.ReadInt32();
            break;
          }
          case 64: {
            MonsterSurplusNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CommonGameplayType = input.ReadInt32();
            break;
          }
          case 26: {
            CommonMonsterSet = input.ReadString();
            break;
          }
          case 32: {
            LimitTime = input.ReadInt32();
            break;
          }
          case 40: {
            DropObjectGroupId = input.ReadInt32();
            break;
          }
          case 48: {
            DropObjectRate = input.ReadInt32();
            break;
          }
          case 56: {
            DropMaxNum = input.ReadInt32();
            break;
          }
          case 64: {
            MonsterSurplusNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
