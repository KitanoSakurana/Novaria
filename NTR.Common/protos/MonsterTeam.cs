// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MonsterTeam.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from MonsterTeam.proto</summary>
  public static partial class MonsterTeamReflection {

    #region Descriptor
    /// <summary>File descriptor for MonsterTeam.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MonsterTeamReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFNb25zdGVyVGVhbS5wcm90byKpAQoLTW9uc3RlclRlYW0SCgoCaWQYASAB",
            "KAUSEAoIbWF0ZTBfaWQYAiABKAUSEAoIbWF0ZTFfaWQYAyABKAUSEAoIbWF0",
            "ZTJfaWQYBCABKAUSEAoIbWF0ZTNfaWQYBSABKAUSEAoIbWF0ZTRfaWQYBiAB",
            "KAUSEAoIbWF0ZTVfaWQYByABKAUSEAoIbWF0ZTZfaWQYCCABKAUSEAoIbWF0",
            "ZTdfaWQYCSABKAVCDqoCC05vdmEuQ2xpZW50YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.MonsterTeam), global::Nova.Client.MonsterTeam.Parser, new[]{ "Id", "Mate0Id", "Mate1Id", "Mate2Id", "Mate3Id", "Mate4Id", "Mate5Id", "Mate6Id", "Mate7Id" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MonsterTeam : pb::IMessage<MonsterTeam>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonsterTeam> _parser = new pb::MessageParser<MonsterTeam>(() => new MonsterTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MonsterTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.MonsterTeamReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterTeam(MonsterTeam other) : this() {
      id_ = other.id_;
      mate0Id_ = other.mate0Id_;
      mate1Id_ = other.mate1Id_;
      mate2Id_ = other.mate2Id_;
      mate3Id_ = other.mate3Id_;
      mate4Id_ = other.mate4Id_;
      mate5Id_ = other.mate5Id_;
      mate6Id_ = other.mate6Id_;
      mate7Id_ = other.mate7Id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterTeam Clone() {
      return new MonsterTeam(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "mate0_id" field.</summary>
    public const int Mate0IdFieldNumber = 2;
    private int mate0Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mate0Id {
      get { return mate0Id_; }
      set {
        mate0Id_ = value;
      }
    }

    /// <summary>Field number for the "mate1_id" field.</summary>
    public const int Mate1IdFieldNumber = 3;
    private int mate1Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mate1Id {
      get { return mate1Id_; }
      set {
        mate1Id_ = value;
      }
    }

    /// <summary>Field number for the "mate2_id" field.</summary>
    public const int Mate2IdFieldNumber = 4;
    private int mate2Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mate2Id {
      get { return mate2Id_; }
      set {
        mate2Id_ = value;
      }
    }

    /// <summary>Field number for the "mate3_id" field.</summary>
    public const int Mate3IdFieldNumber = 5;
    private int mate3Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mate3Id {
      get { return mate3Id_; }
      set {
        mate3Id_ = value;
      }
    }

    /// <summary>Field number for the "mate4_id" field.</summary>
    public const int Mate4IdFieldNumber = 6;
    private int mate4Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mate4Id {
      get { return mate4Id_; }
      set {
        mate4Id_ = value;
      }
    }

    /// <summary>Field number for the "mate5_id" field.</summary>
    public const int Mate5IdFieldNumber = 7;
    private int mate5Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mate5Id {
      get { return mate5Id_; }
      set {
        mate5Id_ = value;
      }
    }

    /// <summary>Field number for the "mate6_id" field.</summary>
    public const int Mate6IdFieldNumber = 8;
    private int mate6Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mate6Id {
      get { return mate6Id_; }
      set {
        mate6Id_ = value;
      }
    }

    /// <summary>Field number for the "mate7_id" field.</summary>
    public const int Mate7IdFieldNumber = 9;
    private int mate7Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mate7Id {
      get { return mate7Id_; }
      set {
        mate7Id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MonsterTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MonsterTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Mate0Id != other.Mate0Id) return false;
      if (Mate1Id != other.Mate1Id) return false;
      if (Mate2Id != other.Mate2Id) return false;
      if (Mate3Id != other.Mate3Id) return false;
      if (Mate4Id != other.Mate4Id) return false;
      if (Mate5Id != other.Mate5Id) return false;
      if (Mate6Id != other.Mate6Id) return false;
      if (Mate7Id != other.Mate7Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Mate0Id != 0) hash ^= Mate0Id.GetHashCode();
      if (Mate1Id != 0) hash ^= Mate1Id.GetHashCode();
      if (Mate2Id != 0) hash ^= Mate2Id.GetHashCode();
      if (Mate3Id != 0) hash ^= Mate3Id.GetHashCode();
      if (Mate4Id != 0) hash ^= Mate4Id.GetHashCode();
      if (Mate5Id != 0) hash ^= Mate5Id.GetHashCode();
      if (Mate6Id != 0) hash ^= Mate6Id.GetHashCode();
      if (Mate7Id != 0) hash ^= Mate7Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Mate0Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Mate0Id);
      }
      if (Mate1Id != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Mate1Id);
      }
      if (Mate2Id != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Mate2Id);
      }
      if (Mate3Id != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Mate3Id);
      }
      if (Mate4Id != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Mate4Id);
      }
      if (Mate5Id != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Mate5Id);
      }
      if (Mate6Id != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Mate6Id);
      }
      if (Mate7Id != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Mate7Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Mate0Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Mate0Id);
      }
      if (Mate1Id != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Mate1Id);
      }
      if (Mate2Id != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Mate2Id);
      }
      if (Mate3Id != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Mate3Id);
      }
      if (Mate4Id != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Mate4Id);
      }
      if (Mate5Id != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Mate5Id);
      }
      if (Mate6Id != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Mate6Id);
      }
      if (Mate7Id != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Mate7Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Mate0Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mate0Id);
      }
      if (Mate1Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mate1Id);
      }
      if (Mate2Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mate2Id);
      }
      if (Mate3Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mate3Id);
      }
      if (Mate4Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mate4Id);
      }
      if (Mate5Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mate5Id);
      }
      if (Mate6Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mate6Id);
      }
      if (Mate7Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mate7Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MonsterTeam other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Mate0Id != 0) {
        Mate0Id = other.Mate0Id;
      }
      if (other.Mate1Id != 0) {
        Mate1Id = other.Mate1Id;
      }
      if (other.Mate2Id != 0) {
        Mate2Id = other.Mate2Id;
      }
      if (other.Mate3Id != 0) {
        Mate3Id = other.Mate3Id;
      }
      if (other.Mate4Id != 0) {
        Mate4Id = other.Mate4Id;
      }
      if (other.Mate5Id != 0) {
        Mate5Id = other.Mate5Id;
      }
      if (other.Mate6Id != 0) {
        Mate6Id = other.Mate6Id;
      }
      if (other.Mate7Id != 0) {
        Mate7Id = other.Mate7Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Mate0Id = input.ReadInt32();
            break;
          }
          case 24: {
            Mate1Id = input.ReadInt32();
            break;
          }
          case 32: {
            Mate2Id = input.ReadInt32();
            break;
          }
          case 40: {
            Mate3Id = input.ReadInt32();
            break;
          }
          case 48: {
            Mate4Id = input.ReadInt32();
            break;
          }
          case 56: {
            Mate5Id = input.ReadInt32();
            break;
          }
          case 64: {
            Mate6Id = input.ReadInt32();
            break;
          }
          case 72: {
            Mate7Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Mate0Id = input.ReadInt32();
            break;
          }
          case 24: {
            Mate1Id = input.ReadInt32();
            break;
          }
          case 32: {
            Mate2Id = input.ReadInt32();
            break;
          }
          case 40: {
            Mate3Id = input.ReadInt32();
            break;
          }
          case 48: {
            Mate4Id = input.ReadInt32();
            break;
          }
          case 56: {
            Mate5Id = input.ReadInt32();
            break;
          }
          case 64: {
            Mate6Id = input.ReadInt32();
            break;
          }
          case 72: {
            Mate7Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
