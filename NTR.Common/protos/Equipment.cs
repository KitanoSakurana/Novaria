// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Equipment.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from Equipment.proto</summary>
  public static partial class EquipmentReflection {

    #region Descriptor
    /// <summary>File descriptor for Equipment.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EquipmentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9FcXVpcG1lbnQucHJvdG8iqwIKCUVxdWlwbWVudBIKCgJpZBgBIAEoBRIM",
            "CgRuYW1lGAIgASgJEhYKDmVxdWlwbWVudF90eXBlGAMgASgFEhUKDWF0dHJf",
            "Z3JvdXBfaWQYBCABKAUSFAoMZXhwX2dyb3VwX2lkGAUgASgFEhEKCW1heF9s",
            "ZXZlbBgGIAEoBRIZChFyYW5kb21fYXR0cl9jb3VudBgHIAEoBRIaChJhdHRy",
            "MV91bmxvY2tfbGV2ZWwYCCABKAUSGgoSYXR0cjJfdW5sb2NrX2xldmVsGAkg",
            "ASgFEhoKEmF0dHIzX3VubG9ja19sZXZlbBgKIAEoBRIaChJhdHRyNF91bmxv",
            "Y2tfbGV2ZWwYCyABKAUSEwoLcHJvdmlkZV9leHAYDCABKAUSDAoEaWNvbhgN",
            "IAEoCUIOqgILTm92YS5DbGllbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Equipment), global::Nova.Client.Equipment.Parser, new[]{ "Id", "Name", "EquipmentType", "AttrGroupId", "ExpGroupId", "MaxLevel", "RandomAttrCount", "Attr1UnlockLevel", "Attr2UnlockLevel", "Attr3UnlockLevel", "Attr4UnlockLevel", "ProvideExp", "Icon" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Equipment : pb::IMessage<Equipment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Equipment> _parser = new pb::MessageParser<Equipment>(() => new Equipment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Equipment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.EquipmentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment(Equipment other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      equipmentType_ = other.equipmentType_;
      attrGroupId_ = other.attrGroupId_;
      expGroupId_ = other.expGroupId_;
      maxLevel_ = other.maxLevel_;
      randomAttrCount_ = other.randomAttrCount_;
      attr1UnlockLevel_ = other.attr1UnlockLevel_;
      attr2UnlockLevel_ = other.attr2UnlockLevel_;
      attr3UnlockLevel_ = other.attr3UnlockLevel_;
      attr4UnlockLevel_ = other.attr4UnlockLevel_;
      provideExp_ = other.provideExp_;
      icon_ = other.icon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment Clone() {
      return new Equipment(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "equipment_type" field.</summary>
    public const int EquipmentTypeFieldNumber = 3;
    private int equipmentType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EquipmentType {
      get { return equipmentType_; }
      set {
        equipmentType_ = value;
      }
    }

    /// <summary>Field number for the "attr_group_id" field.</summary>
    public const int AttrGroupIdFieldNumber = 4;
    private int attrGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttrGroupId {
      get { return attrGroupId_; }
      set {
        attrGroupId_ = value;
      }
    }

    /// <summary>Field number for the "exp_group_id" field.</summary>
    public const int ExpGroupIdFieldNumber = 5;
    private int expGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExpGroupId {
      get { return expGroupId_; }
      set {
        expGroupId_ = value;
      }
    }

    /// <summary>Field number for the "max_level" field.</summary>
    public const int MaxLevelFieldNumber = 6;
    private int maxLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxLevel {
      get { return maxLevel_; }
      set {
        maxLevel_ = value;
      }
    }

    /// <summary>Field number for the "random_attr_count" field.</summary>
    public const int RandomAttrCountFieldNumber = 7;
    private int randomAttrCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RandomAttrCount {
      get { return randomAttrCount_; }
      set {
        randomAttrCount_ = value;
      }
    }

    /// <summary>Field number for the "attr1_unlock_level" field.</summary>
    public const int Attr1UnlockLevelFieldNumber = 8;
    private int attr1UnlockLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Attr1UnlockLevel {
      get { return attr1UnlockLevel_; }
      set {
        attr1UnlockLevel_ = value;
      }
    }

    /// <summary>Field number for the "attr2_unlock_level" field.</summary>
    public const int Attr2UnlockLevelFieldNumber = 9;
    private int attr2UnlockLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Attr2UnlockLevel {
      get { return attr2UnlockLevel_; }
      set {
        attr2UnlockLevel_ = value;
      }
    }

    /// <summary>Field number for the "attr3_unlock_level" field.</summary>
    public const int Attr3UnlockLevelFieldNumber = 10;
    private int attr3UnlockLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Attr3UnlockLevel {
      get { return attr3UnlockLevel_; }
      set {
        attr3UnlockLevel_ = value;
      }
    }

    /// <summary>Field number for the "attr4_unlock_level" field.</summary>
    public const int Attr4UnlockLevelFieldNumber = 11;
    private int attr4UnlockLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Attr4UnlockLevel {
      get { return attr4UnlockLevel_; }
      set {
        attr4UnlockLevel_ = value;
      }
    }

    /// <summary>Field number for the "provide_exp" field.</summary>
    public const int ProvideExpFieldNumber = 12;
    private int provideExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProvideExp {
      get { return provideExp_; }
      set {
        provideExp_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 13;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Equipment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Equipment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (EquipmentType != other.EquipmentType) return false;
      if (AttrGroupId != other.AttrGroupId) return false;
      if (ExpGroupId != other.ExpGroupId) return false;
      if (MaxLevel != other.MaxLevel) return false;
      if (RandomAttrCount != other.RandomAttrCount) return false;
      if (Attr1UnlockLevel != other.Attr1UnlockLevel) return false;
      if (Attr2UnlockLevel != other.Attr2UnlockLevel) return false;
      if (Attr3UnlockLevel != other.Attr3UnlockLevel) return false;
      if (Attr4UnlockLevel != other.Attr4UnlockLevel) return false;
      if (ProvideExp != other.ProvideExp) return false;
      if (Icon != other.Icon) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (EquipmentType != 0) hash ^= EquipmentType.GetHashCode();
      if (AttrGroupId != 0) hash ^= AttrGroupId.GetHashCode();
      if (ExpGroupId != 0) hash ^= ExpGroupId.GetHashCode();
      if (MaxLevel != 0) hash ^= MaxLevel.GetHashCode();
      if (RandomAttrCount != 0) hash ^= RandomAttrCount.GetHashCode();
      if (Attr1UnlockLevel != 0) hash ^= Attr1UnlockLevel.GetHashCode();
      if (Attr2UnlockLevel != 0) hash ^= Attr2UnlockLevel.GetHashCode();
      if (Attr3UnlockLevel != 0) hash ^= Attr3UnlockLevel.GetHashCode();
      if (Attr4UnlockLevel != 0) hash ^= Attr4UnlockLevel.GetHashCode();
      if (ProvideExp != 0) hash ^= ProvideExp.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (EquipmentType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EquipmentType);
      }
      if (AttrGroupId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttrGroupId);
      }
      if (ExpGroupId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ExpGroupId);
      }
      if (MaxLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxLevel);
      }
      if (RandomAttrCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RandomAttrCount);
      }
      if (Attr1UnlockLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Attr1UnlockLevel);
      }
      if (Attr2UnlockLevel != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Attr2UnlockLevel);
      }
      if (Attr3UnlockLevel != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Attr3UnlockLevel);
      }
      if (Attr4UnlockLevel != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Attr4UnlockLevel);
      }
      if (ProvideExp != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ProvideExp);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (EquipmentType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EquipmentType);
      }
      if (AttrGroupId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttrGroupId);
      }
      if (ExpGroupId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ExpGroupId);
      }
      if (MaxLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxLevel);
      }
      if (RandomAttrCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RandomAttrCount);
      }
      if (Attr1UnlockLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Attr1UnlockLevel);
      }
      if (Attr2UnlockLevel != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Attr2UnlockLevel);
      }
      if (Attr3UnlockLevel != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Attr3UnlockLevel);
      }
      if (Attr4UnlockLevel != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Attr4UnlockLevel);
      }
      if (ProvideExp != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ProvideExp);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (EquipmentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipmentType);
      }
      if (AttrGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttrGroupId);
      }
      if (ExpGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpGroupId);
      }
      if (MaxLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxLevel);
      }
      if (RandomAttrCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandomAttrCount);
      }
      if (Attr1UnlockLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Attr1UnlockLevel);
      }
      if (Attr2UnlockLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Attr2UnlockLevel);
      }
      if (Attr3UnlockLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Attr3UnlockLevel);
      }
      if (Attr4UnlockLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Attr4UnlockLevel);
      }
      if (ProvideExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProvideExp);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Equipment other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.EquipmentType != 0) {
        EquipmentType = other.EquipmentType;
      }
      if (other.AttrGroupId != 0) {
        AttrGroupId = other.AttrGroupId;
      }
      if (other.ExpGroupId != 0) {
        ExpGroupId = other.ExpGroupId;
      }
      if (other.MaxLevel != 0) {
        MaxLevel = other.MaxLevel;
      }
      if (other.RandomAttrCount != 0) {
        RandomAttrCount = other.RandomAttrCount;
      }
      if (other.Attr1UnlockLevel != 0) {
        Attr1UnlockLevel = other.Attr1UnlockLevel;
      }
      if (other.Attr2UnlockLevel != 0) {
        Attr2UnlockLevel = other.Attr2UnlockLevel;
      }
      if (other.Attr3UnlockLevel != 0) {
        Attr3UnlockLevel = other.Attr3UnlockLevel;
      }
      if (other.Attr4UnlockLevel != 0) {
        Attr4UnlockLevel = other.Attr4UnlockLevel;
      }
      if (other.ProvideExp != 0) {
        ProvideExp = other.ProvideExp;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            EquipmentType = input.ReadInt32();
            break;
          }
          case 32: {
            AttrGroupId = input.ReadInt32();
            break;
          }
          case 40: {
            ExpGroupId = input.ReadInt32();
            break;
          }
          case 48: {
            MaxLevel = input.ReadInt32();
            break;
          }
          case 56: {
            RandomAttrCount = input.ReadInt32();
            break;
          }
          case 64: {
            Attr1UnlockLevel = input.ReadInt32();
            break;
          }
          case 72: {
            Attr2UnlockLevel = input.ReadInt32();
            break;
          }
          case 80: {
            Attr3UnlockLevel = input.ReadInt32();
            break;
          }
          case 88: {
            Attr4UnlockLevel = input.ReadInt32();
            break;
          }
          case 96: {
            ProvideExp = input.ReadInt32();
            break;
          }
          case 106: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            EquipmentType = input.ReadInt32();
            break;
          }
          case 32: {
            AttrGroupId = input.ReadInt32();
            break;
          }
          case 40: {
            ExpGroupId = input.ReadInt32();
            break;
          }
          case 48: {
            MaxLevel = input.ReadInt32();
            break;
          }
          case 56: {
            RandomAttrCount = input.ReadInt32();
            break;
          }
          case 64: {
            Attr1UnlockLevel = input.ReadInt32();
            break;
          }
          case 72: {
            Attr2UnlockLevel = input.ReadInt32();
            break;
          }
          case 80: {
            Attr3UnlockLevel = input.ReadInt32();
            break;
          }
          case 88: {
            Attr4UnlockLevel = input.ReadInt32();
            break;
          }
          case 96: {
            ProvideExp = input.ReadInt32();
            break;
          }
          case 106: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
