// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: VampireEnemySet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from VampireEnemySet.proto</summary>
  public static partial class VampireEnemySetReflection {

    #region Descriptor
    /// <summary>File descriptor for VampireEnemySet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VampireEnemySetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVWYW1waXJlRW5lbXlTZXQucHJvdG8ipQIKD1ZhbXBpcmVFbmVteVNldBIO",
            "CgZzZXRfaWQYASABKAUSEQoJZ3JvdXBfbnVtGAIgASgFEhIKCm1vbnN0ZXJf",
            "aWQYAyABKAUSFAoMbGV2ZWxfY2hhbmdlGAQgASgFEhIKCmRlbGF5X3RpbWUY",
            "BSABKAUSDwoHbWF4X251bRgGIAEoBRIQCghhZGRfZGF0YRgHIAMoBRIcChRt",
            "YXhfbnVtX2ltcHJvdmVfZGF0YRgIIAMoBRIaChJtb25zdGVyX3NwYXduX3R5",
            "cGUYCSABKAUSFQoNbW9uc3Rlcl9wb2ludBgKIAEoBRIQCghkcm9wX2V4cBgL",
            "IAMoBRISCgpkcm9wX2NoZXN0GAwgAygFEhcKD21vbnN0ZXJfd2FybmluZxgN",
            "IAEoBUIOqgILTm92YS5DbGllbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.VampireEnemySet), global::Nova.Client.VampireEnemySet.Parser, new[]{ "SetId", "GroupNum", "MonsterId", "LevelChange", "DelayTime", "MaxNum", "AddData", "MaxNumImproveData", "MonsterSpawnType", "MonsterPoint", "DropExp", "DropChest", "MonsterWarning" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class VampireEnemySet : pb::IMessage<VampireEnemySet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VampireEnemySet> _parser = new pb::MessageParser<VampireEnemySet>(() => new VampireEnemySet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VampireEnemySet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.VampireEnemySetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VampireEnemySet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VampireEnemySet(VampireEnemySet other) : this() {
      setId_ = other.setId_;
      groupNum_ = other.groupNum_;
      monsterId_ = other.monsterId_;
      levelChange_ = other.levelChange_;
      delayTime_ = other.delayTime_;
      maxNum_ = other.maxNum_;
      addData_ = other.addData_.Clone();
      maxNumImproveData_ = other.maxNumImproveData_.Clone();
      monsterSpawnType_ = other.monsterSpawnType_;
      monsterPoint_ = other.monsterPoint_;
      dropExp_ = other.dropExp_.Clone();
      dropChest_ = other.dropChest_.Clone();
      monsterWarning_ = other.monsterWarning_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VampireEnemySet Clone() {
      return new VampireEnemySet(this);
    }

    /// <summary>Field number for the "set_id" field.</summary>
    public const int SetIdFieldNumber = 1;
    private int setId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SetId {
      get { return setId_; }
      set {
        setId_ = value;
      }
    }

    /// <summary>Field number for the "group_num" field.</summary>
    public const int GroupNumFieldNumber = 2;
    private int groupNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupNum {
      get { return groupNum_; }
      set {
        groupNum_ = value;
      }
    }

    /// <summary>Field number for the "monster_id" field.</summary>
    public const int MonsterIdFieldNumber = 3;
    private int monsterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MonsterId {
      get { return monsterId_; }
      set {
        monsterId_ = value;
      }
    }

    /// <summary>Field number for the "level_change" field.</summary>
    public const int LevelChangeFieldNumber = 4;
    private int levelChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LevelChange {
      get { return levelChange_; }
      set {
        levelChange_ = value;
      }
    }

    /// <summary>Field number for the "delay_time" field.</summary>
    public const int DelayTimeFieldNumber = 5;
    private int delayTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DelayTime {
      get { return delayTime_; }
      set {
        delayTime_ = value;
      }
    }

    /// <summary>Field number for the "max_num" field.</summary>
    public const int MaxNumFieldNumber = 6;
    private int maxNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxNum {
      get { return maxNum_; }
      set {
        maxNum_ = value;
      }
    }

    /// <summary>Field number for the "add_data" field.</summary>
    public const int AddDataFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_addData_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> addData_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> AddData {
      get { return addData_; }
    }

    /// <summary>Field number for the "max_num_improve_data" field.</summary>
    public const int MaxNumImproveDataFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_maxNumImproveData_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> maxNumImproveData_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MaxNumImproveData {
      get { return maxNumImproveData_; }
    }

    /// <summary>Field number for the "monster_spawn_type" field.</summary>
    public const int MonsterSpawnTypeFieldNumber = 9;
    private int monsterSpawnType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MonsterSpawnType {
      get { return monsterSpawnType_; }
      set {
        monsterSpawnType_ = value;
      }
    }

    /// <summary>Field number for the "monster_point" field.</summary>
    public const int MonsterPointFieldNumber = 10;
    private int monsterPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MonsterPoint {
      get { return monsterPoint_; }
      set {
        monsterPoint_ = value;
      }
    }

    /// <summary>Field number for the "drop_exp" field.</summary>
    public const int DropExpFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_dropExp_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> dropExp_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> DropExp {
      get { return dropExp_; }
    }

    /// <summary>Field number for the "drop_chest" field.</summary>
    public const int DropChestFieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_dropChest_codec
        = pb::FieldCodec.ForInt32(98);
    private readonly pbc::RepeatedField<int> dropChest_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> DropChest {
      get { return dropChest_; }
    }

    /// <summary>Field number for the "monster_warning" field.</summary>
    public const int MonsterWarningFieldNumber = 13;
    private int monsterWarning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MonsterWarning {
      get { return monsterWarning_; }
      set {
        monsterWarning_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VampireEnemySet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VampireEnemySet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SetId != other.SetId) return false;
      if (GroupNum != other.GroupNum) return false;
      if (MonsterId != other.MonsterId) return false;
      if (LevelChange != other.LevelChange) return false;
      if (DelayTime != other.DelayTime) return false;
      if (MaxNum != other.MaxNum) return false;
      if(!addData_.Equals(other.addData_)) return false;
      if(!maxNumImproveData_.Equals(other.maxNumImproveData_)) return false;
      if (MonsterSpawnType != other.MonsterSpawnType) return false;
      if (MonsterPoint != other.MonsterPoint) return false;
      if(!dropExp_.Equals(other.dropExp_)) return false;
      if(!dropChest_.Equals(other.dropChest_)) return false;
      if (MonsterWarning != other.MonsterWarning) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SetId != 0) hash ^= SetId.GetHashCode();
      if (GroupNum != 0) hash ^= GroupNum.GetHashCode();
      if (MonsterId != 0) hash ^= MonsterId.GetHashCode();
      if (LevelChange != 0) hash ^= LevelChange.GetHashCode();
      if (DelayTime != 0) hash ^= DelayTime.GetHashCode();
      if (MaxNum != 0) hash ^= MaxNum.GetHashCode();
      hash ^= addData_.GetHashCode();
      hash ^= maxNumImproveData_.GetHashCode();
      if (MonsterSpawnType != 0) hash ^= MonsterSpawnType.GetHashCode();
      if (MonsterPoint != 0) hash ^= MonsterPoint.GetHashCode();
      hash ^= dropExp_.GetHashCode();
      hash ^= dropChest_.GetHashCode();
      if (MonsterWarning != 0) hash ^= MonsterWarning.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SetId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SetId);
      }
      if (GroupNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GroupNum);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MonsterId);
      }
      if (LevelChange != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LevelChange);
      }
      if (DelayTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DelayTime);
      }
      if (MaxNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxNum);
      }
      addData_.WriteTo(output, _repeated_addData_codec);
      maxNumImproveData_.WriteTo(output, _repeated_maxNumImproveData_codec);
      if (MonsterSpawnType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MonsterSpawnType);
      }
      if (MonsterPoint != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(MonsterPoint);
      }
      dropExp_.WriteTo(output, _repeated_dropExp_codec);
      dropChest_.WriteTo(output, _repeated_dropChest_codec);
      if (MonsterWarning != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(MonsterWarning);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SetId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SetId);
      }
      if (GroupNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GroupNum);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MonsterId);
      }
      if (LevelChange != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LevelChange);
      }
      if (DelayTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DelayTime);
      }
      if (MaxNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxNum);
      }
      addData_.WriteTo(ref output, _repeated_addData_codec);
      maxNumImproveData_.WriteTo(ref output, _repeated_maxNumImproveData_codec);
      if (MonsterSpawnType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MonsterSpawnType);
      }
      if (MonsterPoint != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(MonsterPoint);
      }
      dropExp_.WriteTo(ref output, _repeated_dropExp_codec);
      dropChest_.WriteTo(ref output, _repeated_dropChest_codec);
      if (MonsterWarning != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(MonsterWarning);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SetId);
      }
      if (GroupNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupNum);
      }
      if (MonsterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterId);
      }
      if (LevelChange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelChange);
      }
      if (DelayTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DelayTime);
      }
      if (MaxNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNum);
      }
      size += addData_.CalculateSize(_repeated_addData_codec);
      size += maxNumImproveData_.CalculateSize(_repeated_maxNumImproveData_codec);
      if (MonsterSpawnType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterSpawnType);
      }
      if (MonsterPoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterPoint);
      }
      size += dropExp_.CalculateSize(_repeated_dropExp_codec);
      size += dropChest_.CalculateSize(_repeated_dropChest_codec);
      if (MonsterWarning != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterWarning);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VampireEnemySet other) {
      if (other == null) {
        return;
      }
      if (other.SetId != 0) {
        SetId = other.SetId;
      }
      if (other.GroupNum != 0) {
        GroupNum = other.GroupNum;
      }
      if (other.MonsterId != 0) {
        MonsterId = other.MonsterId;
      }
      if (other.LevelChange != 0) {
        LevelChange = other.LevelChange;
      }
      if (other.DelayTime != 0) {
        DelayTime = other.DelayTime;
      }
      if (other.MaxNum != 0) {
        MaxNum = other.MaxNum;
      }
      addData_.Add(other.addData_);
      maxNumImproveData_.Add(other.maxNumImproveData_);
      if (other.MonsterSpawnType != 0) {
        MonsterSpawnType = other.MonsterSpawnType;
      }
      if (other.MonsterPoint != 0) {
        MonsterPoint = other.MonsterPoint;
      }
      dropExp_.Add(other.dropExp_);
      dropChest_.Add(other.dropChest_);
      if (other.MonsterWarning != 0) {
        MonsterWarning = other.MonsterWarning;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SetId = input.ReadInt32();
            break;
          }
          case 16: {
            GroupNum = input.ReadInt32();
            break;
          }
          case 24: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 32: {
            LevelChange = input.ReadInt32();
            break;
          }
          case 40: {
            DelayTime = input.ReadInt32();
            break;
          }
          case 48: {
            MaxNum = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            addData_.AddEntriesFrom(input, _repeated_addData_codec);
            break;
          }
          case 66:
          case 64: {
            maxNumImproveData_.AddEntriesFrom(input, _repeated_maxNumImproveData_codec);
            break;
          }
          case 72: {
            MonsterSpawnType = input.ReadInt32();
            break;
          }
          case 80: {
            MonsterPoint = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            dropExp_.AddEntriesFrom(input, _repeated_dropExp_codec);
            break;
          }
          case 98:
          case 96: {
            dropChest_.AddEntriesFrom(input, _repeated_dropChest_codec);
            break;
          }
          case 104: {
            MonsterWarning = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SetId = input.ReadInt32();
            break;
          }
          case 16: {
            GroupNum = input.ReadInt32();
            break;
          }
          case 24: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 32: {
            LevelChange = input.ReadInt32();
            break;
          }
          case 40: {
            DelayTime = input.ReadInt32();
            break;
          }
          case 48: {
            MaxNum = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            addData_.AddEntriesFrom(ref input, _repeated_addData_codec);
            break;
          }
          case 66:
          case 64: {
            maxNumImproveData_.AddEntriesFrom(ref input, _repeated_maxNumImproveData_codec);
            break;
          }
          case 72: {
            MonsterSpawnType = input.ReadInt32();
            break;
          }
          case 80: {
            MonsterPoint = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            dropExp_.AddEntriesFrom(ref input, _repeated_dropExp_codec);
            break;
          }
          case 98:
          case 96: {
            dropChest_.AddEntriesFrom(ref input, _repeated_dropChest_codec);
            break;
          }
          case 104: {
            MonsterWarning = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
