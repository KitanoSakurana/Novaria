// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PreviewMonsterList.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from PreviewMonsterList.proto</summary>
  public static partial class PreviewMonsterListReflection {

    #region Descriptor
    /// <summary>File descriptor for PreviewMonsterList.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PreviewMonsterListReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQcmV2aWV3TW9uc3Rlckxpc3QucHJvdG8i5wIKElByZXZpZXdNb25zdGVy",
            "TGlzdBIKCgJpZBgBIAEoBRIMCgRpY29uGAIgASgJEgwKBG5hbWUYAyABKAkS",
            "FAoMcmVzaXN0X2VfZV90GAQgAygFEg0KBWVfZV90GAUgAygFEgwKBGRlc2MY",
            "BiABKAkSEgoKc2tpbGxfZGVzYxgHIAEoCRIPCgdlcGljX2x2GAggASgFEgsK",
            "A2hfcBgJIAEoBRINCgVhX3RfaxgKIAEoBRINCgVkX2VfZhgLIAEoBRIZChF0",
            "X29fdV9nX2hfbl9lX3NfcxgMIAEoBRIWCg5hYmlsaXR5X3RpdGxlMRgNIAEo",
            "CRIVCg1hYmlsaXR5X2Rlc2MxGA4gASgJEhYKDmFiaWxpdHlfdGl0bGUyGA8g",
            "ASgJEhUKDWFiaWxpdHlfZGVzYzIYECABKAkSFgoOYWJpbGl0eV90aXRsZTMY",
            "ESABKAkSFQoNYWJpbGl0eV9kZXNjMxgSIAEoCUIOqgILTm92YS5DbGllbnRi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.PreviewMonsterList), global::Nova.Client.PreviewMonsterList.Parser, new[]{ "Id", "Icon", "Name", "ResistEET", "EET", "Desc", "SkillDesc", "EpicLv", "HP", "ATK", "DEF", "TOUGHNESS", "AbilityTitle1", "AbilityDesc1", "AbilityTitle2", "AbilityDesc2", "AbilityTitle3", "AbilityDesc3" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PreviewMonsterList : pb::IMessage<PreviewMonsterList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PreviewMonsterList> _parser = new pb::MessageParser<PreviewMonsterList>(() => new PreviewMonsterList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PreviewMonsterList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.PreviewMonsterListReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreviewMonsterList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreviewMonsterList(PreviewMonsterList other) : this() {
      id_ = other.id_;
      icon_ = other.icon_;
      name_ = other.name_;
      resistEET_ = other.resistEET_.Clone();
      eET_ = other.eET_.Clone();
      desc_ = other.desc_;
      skillDesc_ = other.skillDesc_;
      epicLv_ = other.epicLv_;
      hP_ = other.hP_;
      aTK_ = other.aTK_;
      dEF_ = other.dEF_;
      tOUGHNESS_ = other.tOUGHNESS_;
      abilityTitle1_ = other.abilityTitle1_;
      abilityDesc1_ = other.abilityDesc1_;
      abilityTitle2_ = other.abilityTitle2_;
      abilityDesc2_ = other.abilityDesc2_;
      abilityTitle3_ = other.abilityTitle3_;
      abilityDesc3_ = other.abilityDesc3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreviewMonsterList Clone() {
      return new PreviewMonsterList(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 2;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resist_e_e_t" field.</summary>
    public const int ResistEETFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_resistEET_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> resistEET_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ResistEET {
      get { return resistEET_; }
    }

    /// <summary>Field number for the "e_e_t" field.</summary>
    public const int EETFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_eET_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> eET_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> EET {
      get { return eET_; }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 6;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skill_desc" field.</summary>
    public const int SkillDescFieldNumber = 7;
    private string skillDesc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SkillDesc {
      get { return skillDesc_; }
      set {
        skillDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "epic_lv" field.</summary>
    public const int EpicLvFieldNumber = 8;
    private int epicLv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EpicLv {
      get { return epicLv_; }
      set {
        epicLv_ = value;
      }
    }

    /// <summary>Field number for the "h_p" field.</summary>
    public const int HPFieldNumber = 9;
    private int hP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HP {
      get { return hP_; }
      set {
        hP_ = value;
      }
    }

    /// <summary>Field number for the "a_t_k" field.</summary>
    public const int ATKFieldNumber = 10;
    private int aTK_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ATK {
      get { return aTK_; }
      set {
        aTK_ = value;
      }
    }

    /// <summary>Field number for the "d_e_f" field.</summary>
    public const int DEFFieldNumber = 11;
    private int dEF_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DEF {
      get { return dEF_; }
      set {
        dEF_ = value;
      }
    }

    /// <summary>Field number for the "t_o_u_g_h_n_e_s_s" field.</summary>
    public const int TOUGHNESSFieldNumber = 12;
    private int tOUGHNESS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TOUGHNESS {
      get { return tOUGHNESS_; }
      set {
        tOUGHNESS_ = value;
      }
    }

    /// <summary>Field number for the "ability_title1" field.</summary>
    public const int AbilityTitle1FieldNumber = 13;
    private string abilityTitle1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AbilityTitle1 {
      get { return abilityTitle1_; }
      set {
        abilityTitle1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ability_desc1" field.</summary>
    public const int AbilityDesc1FieldNumber = 14;
    private string abilityDesc1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AbilityDesc1 {
      get { return abilityDesc1_; }
      set {
        abilityDesc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ability_title2" field.</summary>
    public const int AbilityTitle2FieldNumber = 15;
    private string abilityTitle2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AbilityTitle2 {
      get { return abilityTitle2_; }
      set {
        abilityTitle2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ability_desc2" field.</summary>
    public const int AbilityDesc2FieldNumber = 16;
    private string abilityDesc2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AbilityDesc2 {
      get { return abilityDesc2_; }
      set {
        abilityDesc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ability_title3" field.</summary>
    public const int AbilityTitle3FieldNumber = 17;
    private string abilityTitle3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AbilityTitle3 {
      get { return abilityTitle3_; }
      set {
        abilityTitle3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ability_desc3" field.</summary>
    public const int AbilityDesc3FieldNumber = 18;
    private string abilityDesc3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AbilityDesc3 {
      get { return abilityDesc3_; }
      set {
        abilityDesc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PreviewMonsterList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PreviewMonsterList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Icon != other.Icon) return false;
      if (Name != other.Name) return false;
      if(!resistEET_.Equals(other.resistEET_)) return false;
      if(!eET_.Equals(other.eET_)) return false;
      if (Desc != other.Desc) return false;
      if (SkillDesc != other.SkillDesc) return false;
      if (EpicLv != other.EpicLv) return false;
      if (HP != other.HP) return false;
      if (ATK != other.ATK) return false;
      if (DEF != other.DEF) return false;
      if (TOUGHNESS != other.TOUGHNESS) return false;
      if (AbilityTitle1 != other.AbilityTitle1) return false;
      if (AbilityDesc1 != other.AbilityDesc1) return false;
      if (AbilityTitle2 != other.AbilityTitle2) return false;
      if (AbilityDesc2 != other.AbilityDesc2) return false;
      if (AbilityTitle3 != other.AbilityTitle3) return false;
      if (AbilityDesc3 != other.AbilityDesc3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= resistEET_.GetHashCode();
      hash ^= eET_.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (SkillDesc.Length != 0) hash ^= SkillDesc.GetHashCode();
      if (EpicLv != 0) hash ^= EpicLv.GetHashCode();
      if (HP != 0) hash ^= HP.GetHashCode();
      if (ATK != 0) hash ^= ATK.GetHashCode();
      if (DEF != 0) hash ^= DEF.GetHashCode();
      if (TOUGHNESS != 0) hash ^= TOUGHNESS.GetHashCode();
      if (AbilityTitle1.Length != 0) hash ^= AbilityTitle1.GetHashCode();
      if (AbilityDesc1.Length != 0) hash ^= AbilityDesc1.GetHashCode();
      if (AbilityTitle2.Length != 0) hash ^= AbilityTitle2.GetHashCode();
      if (AbilityDesc2.Length != 0) hash ^= AbilityDesc2.GetHashCode();
      if (AbilityTitle3.Length != 0) hash ^= AbilityTitle3.GetHashCode();
      if (AbilityDesc3.Length != 0) hash ^= AbilityDesc3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      resistEET_.WriteTo(output, _repeated_resistEET_codec);
      eET_.WriteTo(output, _repeated_eET_codec);
      if (Desc.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Desc);
      }
      if (SkillDesc.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SkillDesc);
      }
      if (EpicLv != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EpicLv);
      }
      if (HP != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(HP);
      }
      if (ATK != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ATK);
      }
      if (DEF != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(DEF);
      }
      if (TOUGHNESS != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(TOUGHNESS);
      }
      if (AbilityTitle1.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(AbilityTitle1);
      }
      if (AbilityDesc1.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(AbilityDesc1);
      }
      if (AbilityTitle2.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(AbilityTitle2);
      }
      if (AbilityDesc2.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(AbilityDesc2);
      }
      if (AbilityTitle3.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AbilityTitle3);
      }
      if (AbilityDesc3.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(AbilityDesc3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      resistEET_.WriteTo(ref output, _repeated_resistEET_codec);
      eET_.WriteTo(ref output, _repeated_eET_codec);
      if (Desc.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Desc);
      }
      if (SkillDesc.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SkillDesc);
      }
      if (EpicLv != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EpicLv);
      }
      if (HP != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(HP);
      }
      if (ATK != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ATK);
      }
      if (DEF != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(DEF);
      }
      if (TOUGHNESS != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(TOUGHNESS);
      }
      if (AbilityTitle1.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(AbilityTitle1);
      }
      if (AbilityDesc1.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(AbilityDesc1);
      }
      if (AbilityTitle2.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(AbilityTitle2);
      }
      if (AbilityDesc2.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(AbilityDesc2);
      }
      if (AbilityTitle3.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AbilityTitle3);
      }
      if (AbilityDesc3.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(AbilityDesc3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += resistEET_.CalculateSize(_repeated_resistEET_codec);
      size += eET_.CalculateSize(_repeated_eET_codec);
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (SkillDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillDesc);
      }
      if (EpicLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EpicLv);
      }
      if (HP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HP);
      }
      if (ATK != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ATK);
      }
      if (DEF != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DEF);
      }
      if (TOUGHNESS != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TOUGHNESS);
      }
      if (AbilityTitle1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbilityTitle1);
      }
      if (AbilityDesc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbilityDesc1);
      }
      if (AbilityTitle2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbilityTitle2);
      }
      if (AbilityDesc2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AbilityDesc2);
      }
      if (AbilityTitle3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AbilityTitle3);
      }
      if (AbilityDesc3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AbilityDesc3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PreviewMonsterList other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      resistEET_.Add(other.resistEET_);
      eET_.Add(other.eET_);
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.SkillDesc.Length != 0) {
        SkillDesc = other.SkillDesc;
      }
      if (other.EpicLv != 0) {
        EpicLv = other.EpicLv;
      }
      if (other.HP != 0) {
        HP = other.HP;
      }
      if (other.ATK != 0) {
        ATK = other.ATK;
      }
      if (other.DEF != 0) {
        DEF = other.DEF;
      }
      if (other.TOUGHNESS != 0) {
        TOUGHNESS = other.TOUGHNESS;
      }
      if (other.AbilityTitle1.Length != 0) {
        AbilityTitle1 = other.AbilityTitle1;
      }
      if (other.AbilityDesc1.Length != 0) {
        AbilityDesc1 = other.AbilityDesc1;
      }
      if (other.AbilityTitle2.Length != 0) {
        AbilityTitle2 = other.AbilityTitle2;
      }
      if (other.AbilityDesc2.Length != 0) {
        AbilityDesc2 = other.AbilityDesc2;
      }
      if (other.AbilityTitle3.Length != 0) {
        AbilityTitle3 = other.AbilityTitle3;
      }
      if (other.AbilityDesc3.Length != 0) {
        AbilityDesc3 = other.AbilityDesc3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            resistEET_.AddEntriesFrom(input, _repeated_resistEET_codec);
            break;
          }
          case 42:
          case 40: {
            eET_.AddEntriesFrom(input, _repeated_eET_codec);
            break;
          }
          case 50: {
            Desc = input.ReadString();
            break;
          }
          case 58: {
            SkillDesc = input.ReadString();
            break;
          }
          case 64: {
            EpicLv = input.ReadInt32();
            break;
          }
          case 72: {
            HP = input.ReadInt32();
            break;
          }
          case 80: {
            ATK = input.ReadInt32();
            break;
          }
          case 88: {
            DEF = input.ReadInt32();
            break;
          }
          case 96: {
            TOUGHNESS = input.ReadInt32();
            break;
          }
          case 106: {
            AbilityTitle1 = input.ReadString();
            break;
          }
          case 114: {
            AbilityDesc1 = input.ReadString();
            break;
          }
          case 122: {
            AbilityTitle2 = input.ReadString();
            break;
          }
          case 130: {
            AbilityDesc2 = input.ReadString();
            break;
          }
          case 138: {
            AbilityTitle3 = input.ReadString();
            break;
          }
          case 146: {
            AbilityDesc3 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            resistEET_.AddEntriesFrom(ref input, _repeated_resistEET_codec);
            break;
          }
          case 42:
          case 40: {
            eET_.AddEntriesFrom(ref input, _repeated_eET_codec);
            break;
          }
          case 50: {
            Desc = input.ReadString();
            break;
          }
          case 58: {
            SkillDesc = input.ReadString();
            break;
          }
          case 64: {
            EpicLv = input.ReadInt32();
            break;
          }
          case 72: {
            HP = input.ReadInt32();
            break;
          }
          case 80: {
            ATK = input.ReadInt32();
            break;
          }
          case 88: {
            DEF = input.ReadInt32();
            break;
          }
          case 96: {
            TOUGHNESS = input.ReadInt32();
            break;
          }
          case 106: {
            AbilityTitle1 = input.ReadString();
            break;
          }
          case 114: {
            AbilityDesc1 = input.ReadString();
            break;
          }
          case 122: {
            AbilityTitle2 = input.ReadString();
            break;
          }
          case 130: {
            AbilityDesc2 = input.ReadString();
            break;
          }
          case 138: {
            AbilityTitle3 = input.ReadString();
            break;
          }
          case 146: {
            AbilityDesc3 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
