// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Mainline.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from Mainline.proto</summary>
  public static partial class MainlineReflection {

    #region Descriptor
    /// <summary>File descriptor for Mainline.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MainlineReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5NYWlubGluZS5wcm90byKDBQoITWFpbmxpbmUSCgoCaWQYASABKAUSCwoD",
            "bnVtGAIgASgJEgwKBG5hbWUYAyABKAkSDAoEZGVzYxgEIAEoCRIMCgR0eXBl",
            "GAUgASgFEg4KBmVuZXJneRgGIAEoBRISCgpjaGFwdGVyX2lkGAcgASgFEgwK",
            "BHByZXYYCCADKAUSDAoEZm9ybRgJIAMoBRIOCgZhdmdfaWQYCiABKAkSFwoP",
            "dHJpYWxfY2hhcmFjdGVyGAsgAygFEhUKDWJlZm9yZV9hdmdfaWQYDCABKAkS",
            "FAoMYWZ0ZXJfYXZnX2lkGA0gASgJEhYKDmVuZXJneV9jb25zdW1lGA4gASgF",
            "EhMKC3VubG9ja19pdGVtGA8gASgFEhIKCnVubG9ja19xdHkYECABKAUSEwoL",
            "Z2xvYl9yZXdhcmQYESABKAUSFgoOcmV3YXJkX3ByZXZpZXcYEiABKAkSEwoL",
            "aXRlbV9yZXdhcmQYEyABKAUSGQoRZmlyc3RfaXRlbV9yZXdhcmQYFCABKAUS",
            "FgoOZGlhbW9uZF9yZXdhcmQYFSABKAUSGAoQbWluX2NoZXN0X3Jld2FyZBgW",
            "IAEoCRIYChBtYXhfY2hlc3RfcmV3YXJkGBcgASgJEhMKC2NoYXJfYmFubmVk",
            "GBggAygFEhAKCGZsb29yX2lkGBkgAygFEgwKBGljb24YGiABKAkSDgoGcG9z",
            "X2lkGBsgASgFEiAKGHByZXZpZXdfbW9uc3Rlcl9ncm91cF9pZBgcIAEoBRIR",
            "CglyZWNvbW1lbmQYHSABKAUSDgoGcmVwZWF0GB4gASgIEhQKDHN1Yl9tYXBf",
            "bmFtZRgfIAEoBRIUCgxtYWlubGluZV9pbWcYICABKAlCDqoCC05vdmEuQ2xp",
            "ZW50YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Mainline), global::Nova.Client.Mainline.Parser, new[]{ "Id", "Num", "Name", "Desc", "Type", "Energy", "ChapterId", "Prev", "Form", "AvgId", "TrialCharacter", "BeforeAvgId", "AfterAvgId", "EnergyConsume", "UnlockItem", "UnlockQty", "GlobReward", "RewardPreview", "ItemReward", "FirstItemReward", "DiamondReward", "MinChestReward", "MaxChestReward", "CharBanned", "FloorId", "Icon", "PosId", "PreviewMonsterGroupId", "Recommend", "Repeat", "SubMapName", "MainlineImg" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Mainline : pb::IMessage<Mainline>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Mainline> _parser = new pb::MessageParser<Mainline>(() => new Mainline());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Mainline> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.MainlineReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mainline() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mainline(Mainline other) : this() {
      id_ = other.id_;
      num_ = other.num_;
      name_ = other.name_;
      desc_ = other.desc_;
      type_ = other.type_;
      energy_ = other.energy_;
      chapterId_ = other.chapterId_;
      prev_ = other.prev_.Clone();
      form_ = other.form_.Clone();
      avgId_ = other.avgId_;
      trialCharacter_ = other.trialCharacter_.Clone();
      beforeAvgId_ = other.beforeAvgId_;
      afterAvgId_ = other.afterAvgId_;
      energyConsume_ = other.energyConsume_;
      unlockItem_ = other.unlockItem_;
      unlockQty_ = other.unlockQty_;
      globReward_ = other.globReward_;
      rewardPreview_ = other.rewardPreview_;
      itemReward_ = other.itemReward_;
      firstItemReward_ = other.firstItemReward_;
      diamondReward_ = other.diamondReward_;
      minChestReward_ = other.minChestReward_;
      maxChestReward_ = other.maxChestReward_;
      charBanned_ = other.charBanned_.Clone();
      floorId_ = other.floorId_.Clone();
      icon_ = other.icon_;
      posId_ = other.posId_;
      previewMonsterGroupId_ = other.previewMonsterGroupId_;
      recommend_ = other.recommend_;
      repeat_ = other.repeat_;
      subMapName_ = other.subMapName_;
      mainlineImg_ = other.mainlineImg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mainline Clone() {
      return new Mainline(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private string num_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Num {
      get { return num_; }
      set {
        num_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 4;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "energy" field.</summary>
    public const int EnergyFieldNumber = 6;
    private int energy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Energy {
      get { return energy_; }
      set {
        energy_ = value;
      }
    }

    /// <summary>Field number for the "chapter_id" field.</summary>
    public const int ChapterIdFieldNumber = 7;
    private int chapterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChapterId {
      get { return chapterId_; }
      set {
        chapterId_ = value;
      }
    }

    /// <summary>Field number for the "prev" field.</summary>
    public const int PrevFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_prev_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> prev_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Prev {
      get { return prev_; }
    }

    /// <summary>Field number for the "form" field.</summary>
    public const int FormFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_form_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> form_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Form {
      get { return form_; }
    }

    /// <summary>Field number for the "avg_id" field.</summary>
    public const int AvgIdFieldNumber = 10;
    private string avgId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvgId {
      get { return avgId_; }
      set {
        avgId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trial_character" field.</summary>
    public const int TrialCharacterFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_trialCharacter_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> trialCharacter_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> TrialCharacter {
      get { return trialCharacter_; }
    }

    /// <summary>Field number for the "before_avg_id" field.</summary>
    public const int BeforeAvgIdFieldNumber = 12;
    private string beforeAvgId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BeforeAvgId {
      get { return beforeAvgId_; }
      set {
        beforeAvgId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "after_avg_id" field.</summary>
    public const int AfterAvgIdFieldNumber = 13;
    private string afterAvgId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AfterAvgId {
      get { return afterAvgId_; }
      set {
        afterAvgId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "energy_consume" field.</summary>
    public const int EnergyConsumeFieldNumber = 14;
    private int energyConsume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EnergyConsume {
      get { return energyConsume_; }
      set {
        energyConsume_ = value;
      }
    }

    /// <summary>Field number for the "unlock_item" field.</summary>
    public const int UnlockItemFieldNumber = 15;
    private int unlockItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnlockItem {
      get { return unlockItem_; }
      set {
        unlockItem_ = value;
      }
    }

    /// <summary>Field number for the "unlock_qty" field.</summary>
    public const int UnlockQtyFieldNumber = 16;
    private int unlockQty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnlockQty {
      get { return unlockQty_; }
      set {
        unlockQty_ = value;
      }
    }

    /// <summary>Field number for the "glob_reward" field.</summary>
    public const int GlobRewardFieldNumber = 17;
    private int globReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GlobReward {
      get { return globReward_; }
      set {
        globReward_ = value;
      }
    }

    /// <summary>Field number for the "reward_preview" field.</summary>
    public const int RewardPreviewFieldNumber = 18;
    private string rewardPreview_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RewardPreview {
      get { return rewardPreview_; }
      set {
        rewardPreview_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item_reward" field.</summary>
    public const int ItemRewardFieldNumber = 19;
    private int itemReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemReward {
      get { return itemReward_; }
      set {
        itemReward_ = value;
      }
    }

    /// <summary>Field number for the "first_item_reward" field.</summary>
    public const int FirstItemRewardFieldNumber = 20;
    private int firstItemReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FirstItemReward {
      get { return firstItemReward_; }
      set {
        firstItemReward_ = value;
      }
    }

    /// <summary>Field number for the "diamond_reward" field.</summary>
    public const int DiamondRewardFieldNumber = 21;
    private int diamondReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DiamondReward {
      get { return diamondReward_; }
      set {
        diamondReward_ = value;
      }
    }

    /// <summary>Field number for the "min_chest_reward" field.</summary>
    public const int MinChestRewardFieldNumber = 22;
    private string minChestReward_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MinChestReward {
      get { return minChestReward_; }
      set {
        minChestReward_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_chest_reward" field.</summary>
    public const int MaxChestRewardFieldNumber = 23;
    private string maxChestReward_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaxChestReward {
      get { return maxChestReward_; }
      set {
        maxChestReward_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "char_banned" field.</summary>
    public const int CharBannedFieldNumber = 24;
    private static readonly pb::FieldCodec<int> _repeated_charBanned_codec
        = pb::FieldCodec.ForInt32(194);
    private readonly pbc::RepeatedField<int> charBanned_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> CharBanned {
      get { return charBanned_; }
    }

    /// <summary>Field number for the "floor_id" field.</summary>
    public const int FloorIdFieldNumber = 25;
    private static readonly pb::FieldCodec<int> _repeated_floorId_codec
        = pb::FieldCodec.ForInt32(202);
    private readonly pbc::RepeatedField<int> floorId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> FloorId {
      get { return floorId_; }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 26;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pos_id" field.</summary>
    public const int PosIdFieldNumber = 27;
    private int posId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PosId {
      get { return posId_; }
      set {
        posId_ = value;
      }
    }

    /// <summary>Field number for the "preview_monster_group_id" field.</summary>
    public const int PreviewMonsterGroupIdFieldNumber = 28;
    private int previewMonsterGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PreviewMonsterGroupId {
      get { return previewMonsterGroupId_; }
      set {
        previewMonsterGroupId_ = value;
      }
    }

    /// <summary>Field number for the "recommend" field.</summary>
    public const int RecommendFieldNumber = 29;
    private int recommend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Recommend {
      get { return recommend_; }
      set {
        recommend_ = value;
      }
    }

    /// <summary>Field number for the "repeat" field.</summary>
    public const int RepeatFieldNumber = 30;
    private bool repeat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Repeat {
      get { return repeat_; }
      set {
        repeat_ = value;
      }
    }

    /// <summary>Field number for the "sub_map_name" field.</summary>
    public const int SubMapNameFieldNumber = 31;
    private int subMapName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SubMapName {
      get { return subMapName_; }
      set {
        subMapName_ = value;
      }
    }

    /// <summary>Field number for the "mainline_img" field.</summary>
    public const int MainlineImgFieldNumber = 32;
    private string mainlineImg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MainlineImg {
      get { return mainlineImg_; }
      set {
        mainlineImg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Mainline);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Mainline other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Num != other.Num) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if (Type != other.Type) return false;
      if (Energy != other.Energy) return false;
      if (ChapterId != other.ChapterId) return false;
      if(!prev_.Equals(other.prev_)) return false;
      if(!form_.Equals(other.form_)) return false;
      if (AvgId != other.AvgId) return false;
      if(!trialCharacter_.Equals(other.trialCharacter_)) return false;
      if (BeforeAvgId != other.BeforeAvgId) return false;
      if (AfterAvgId != other.AfterAvgId) return false;
      if (EnergyConsume != other.EnergyConsume) return false;
      if (UnlockItem != other.UnlockItem) return false;
      if (UnlockQty != other.UnlockQty) return false;
      if (GlobReward != other.GlobReward) return false;
      if (RewardPreview != other.RewardPreview) return false;
      if (ItemReward != other.ItemReward) return false;
      if (FirstItemReward != other.FirstItemReward) return false;
      if (DiamondReward != other.DiamondReward) return false;
      if (MinChestReward != other.MinChestReward) return false;
      if (MaxChestReward != other.MaxChestReward) return false;
      if(!charBanned_.Equals(other.charBanned_)) return false;
      if(!floorId_.Equals(other.floorId_)) return false;
      if (Icon != other.Icon) return false;
      if (PosId != other.PosId) return false;
      if (PreviewMonsterGroupId != other.PreviewMonsterGroupId) return false;
      if (Recommend != other.Recommend) return false;
      if (Repeat != other.Repeat) return false;
      if (SubMapName != other.SubMapName) return false;
      if (MainlineImg != other.MainlineImg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Num.Length != 0) hash ^= Num.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Energy != 0) hash ^= Energy.GetHashCode();
      if (ChapterId != 0) hash ^= ChapterId.GetHashCode();
      hash ^= prev_.GetHashCode();
      hash ^= form_.GetHashCode();
      if (AvgId.Length != 0) hash ^= AvgId.GetHashCode();
      hash ^= trialCharacter_.GetHashCode();
      if (BeforeAvgId.Length != 0) hash ^= BeforeAvgId.GetHashCode();
      if (AfterAvgId.Length != 0) hash ^= AfterAvgId.GetHashCode();
      if (EnergyConsume != 0) hash ^= EnergyConsume.GetHashCode();
      if (UnlockItem != 0) hash ^= UnlockItem.GetHashCode();
      if (UnlockQty != 0) hash ^= UnlockQty.GetHashCode();
      if (GlobReward != 0) hash ^= GlobReward.GetHashCode();
      if (RewardPreview.Length != 0) hash ^= RewardPreview.GetHashCode();
      if (ItemReward != 0) hash ^= ItemReward.GetHashCode();
      if (FirstItemReward != 0) hash ^= FirstItemReward.GetHashCode();
      if (DiamondReward != 0) hash ^= DiamondReward.GetHashCode();
      if (MinChestReward.Length != 0) hash ^= MinChestReward.GetHashCode();
      if (MaxChestReward.Length != 0) hash ^= MaxChestReward.GetHashCode();
      hash ^= charBanned_.GetHashCode();
      hash ^= floorId_.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (PosId != 0) hash ^= PosId.GetHashCode();
      if (PreviewMonsterGroupId != 0) hash ^= PreviewMonsterGroupId.GetHashCode();
      if (Recommend != 0) hash ^= Recommend.GetHashCode();
      if (Repeat != false) hash ^= Repeat.GetHashCode();
      if (SubMapName != 0) hash ^= SubMapName.GetHashCode();
      if (MainlineImg.Length != 0) hash ^= MainlineImg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Num.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Num);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Desc);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Type);
      }
      if (Energy != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Energy);
      }
      if (ChapterId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ChapterId);
      }
      prev_.WriteTo(output, _repeated_prev_codec);
      form_.WriteTo(output, _repeated_form_codec);
      if (AvgId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(AvgId);
      }
      trialCharacter_.WriteTo(output, _repeated_trialCharacter_codec);
      if (BeforeAvgId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(BeforeAvgId);
      }
      if (AfterAvgId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(AfterAvgId);
      }
      if (EnergyConsume != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(EnergyConsume);
      }
      if (UnlockItem != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(UnlockItem);
      }
      if (UnlockQty != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(UnlockQty);
      }
      if (GlobReward != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(GlobReward);
      }
      if (RewardPreview.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(RewardPreview);
      }
      if (ItemReward != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ItemReward);
      }
      if (FirstItemReward != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(FirstItemReward);
      }
      if (DiamondReward != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(DiamondReward);
      }
      if (MinChestReward.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(MinChestReward);
      }
      if (MaxChestReward.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(MaxChestReward);
      }
      charBanned_.WriteTo(output, _repeated_charBanned_codec);
      floorId_.WriteTo(output, _repeated_floorId_codec);
      if (Icon.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(Icon);
      }
      if (PosId != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(PosId);
      }
      if (PreviewMonsterGroupId != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(PreviewMonsterGroupId);
      }
      if (Recommend != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(Recommend);
      }
      if (Repeat != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(Repeat);
      }
      if (SubMapName != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(SubMapName);
      }
      if (MainlineImg.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(MainlineImg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Num.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Num);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Desc);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Type);
      }
      if (Energy != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Energy);
      }
      if (ChapterId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ChapterId);
      }
      prev_.WriteTo(ref output, _repeated_prev_codec);
      form_.WriteTo(ref output, _repeated_form_codec);
      if (AvgId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(AvgId);
      }
      trialCharacter_.WriteTo(ref output, _repeated_trialCharacter_codec);
      if (BeforeAvgId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(BeforeAvgId);
      }
      if (AfterAvgId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(AfterAvgId);
      }
      if (EnergyConsume != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(EnergyConsume);
      }
      if (UnlockItem != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(UnlockItem);
      }
      if (UnlockQty != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(UnlockQty);
      }
      if (GlobReward != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(GlobReward);
      }
      if (RewardPreview.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(RewardPreview);
      }
      if (ItemReward != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ItemReward);
      }
      if (FirstItemReward != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(FirstItemReward);
      }
      if (DiamondReward != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(DiamondReward);
      }
      if (MinChestReward.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(MinChestReward);
      }
      if (MaxChestReward.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(MaxChestReward);
      }
      charBanned_.WriteTo(ref output, _repeated_charBanned_codec);
      floorId_.WriteTo(ref output, _repeated_floorId_codec);
      if (Icon.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(Icon);
      }
      if (PosId != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(PosId);
      }
      if (PreviewMonsterGroupId != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(PreviewMonsterGroupId);
      }
      if (Recommend != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(Recommend);
      }
      if (Repeat != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(Repeat);
      }
      if (SubMapName != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(SubMapName);
      }
      if (MainlineImg.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(MainlineImg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Num.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Energy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Energy);
      }
      if (ChapterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChapterId);
      }
      size += prev_.CalculateSize(_repeated_prev_codec);
      size += form_.CalculateSize(_repeated_form_codec);
      if (AvgId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvgId);
      }
      size += trialCharacter_.CalculateSize(_repeated_trialCharacter_codec);
      if (BeforeAvgId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BeforeAvgId);
      }
      if (AfterAvgId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AfterAvgId);
      }
      if (EnergyConsume != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnergyConsume);
      }
      if (UnlockItem != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnlockItem);
      }
      if (UnlockQty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UnlockQty);
      }
      if (GlobReward != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GlobReward);
      }
      if (RewardPreview.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RewardPreview);
      }
      if (ItemReward != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ItemReward);
      }
      if (FirstItemReward != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FirstItemReward);
      }
      if (DiamondReward != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DiamondReward);
      }
      if (MinChestReward.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MinChestReward);
      }
      if (MaxChestReward.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MaxChestReward);
      }
      size += charBanned_.CalculateSize(_repeated_charBanned_codec);
      size += floorId_.CalculateSize(_repeated_floorId_codec);
      if (Icon.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (PosId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PosId);
      }
      if (PreviewMonsterGroupId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PreviewMonsterGroupId);
      }
      if (Recommend != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Recommend);
      }
      if (Repeat != false) {
        size += 2 + 1;
      }
      if (SubMapName != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SubMapName);
      }
      if (MainlineImg.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MainlineImg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Mainline other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Num.Length != 0) {
        Num = other.Num;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Energy != 0) {
        Energy = other.Energy;
      }
      if (other.ChapterId != 0) {
        ChapterId = other.ChapterId;
      }
      prev_.Add(other.prev_);
      form_.Add(other.form_);
      if (other.AvgId.Length != 0) {
        AvgId = other.AvgId;
      }
      trialCharacter_.Add(other.trialCharacter_);
      if (other.BeforeAvgId.Length != 0) {
        BeforeAvgId = other.BeforeAvgId;
      }
      if (other.AfterAvgId.Length != 0) {
        AfterAvgId = other.AfterAvgId;
      }
      if (other.EnergyConsume != 0) {
        EnergyConsume = other.EnergyConsume;
      }
      if (other.UnlockItem != 0) {
        UnlockItem = other.UnlockItem;
      }
      if (other.UnlockQty != 0) {
        UnlockQty = other.UnlockQty;
      }
      if (other.GlobReward != 0) {
        GlobReward = other.GlobReward;
      }
      if (other.RewardPreview.Length != 0) {
        RewardPreview = other.RewardPreview;
      }
      if (other.ItemReward != 0) {
        ItemReward = other.ItemReward;
      }
      if (other.FirstItemReward != 0) {
        FirstItemReward = other.FirstItemReward;
      }
      if (other.DiamondReward != 0) {
        DiamondReward = other.DiamondReward;
      }
      if (other.MinChestReward.Length != 0) {
        MinChestReward = other.MinChestReward;
      }
      if (other.MaxChestReward.Length != 0) {
        MaxChestReward = other.MaxChestReward;
      }
      charBanned_.Add(other.charBanned_);
      floorId_.Add(other.floorId_);
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.PosId != 0) {
        PosId = other.PosId;
      }
      if (other.PreviewMonsterGroupId != 0) {
        PreviewMonsterGroupId = other.PreviewMonsterGroupId;
      }
      if (other.Recommend != 0) {
        Recommend = other.Recommend;
      }
      if (other.Repeat != false) {
        Repeat = other.Repeat;
      }
      if (other.SubMapName != 0) {
        SubMapName = other.SubMapName;
      }
      if (other.MainlineImg.Length != 0) {
        MainlineImg = other.MainlineImg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Num = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Desc = input.ReadString();
            break;
          }
          case 40: {
            Type = input.ReadInt32();
            break;
          }
          case 48: {
            Energy = input.ReadInt32();
            break;
          }
          case 56: {
            ChapterId = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            prev_.AddEntriesFrom(input, _repeated_prev_codec);
            break;
          }
          case 74:
          case 72: {
            form_.AddEntriesFrom(input, _repeated_form_codec);
            break;
          }
          case 82: {
            AvgId = input.ReadString();
            break;
          }
          case 90:
          case 88: {
            trialCharacter_.AddEntriesFrom(input, _repeated_trialCharacter_codec);
            break;
          }
          case 98: {
            BeforeAvgId = input.ReadString();
            break;
          }
          case 106: {
            AfterAvgId = input.ReadString();
            break;
          }
          case 112: {
            EnergyConsume = input.ReadInt32();
            break;
          }
          case 120: {
            UnlockItem = input.ReadInt32();
            break;
          }
          case 128: {
            UnlockQty = input.ReadInt32();
            break;
          }
          case 136: {
            GlobReward = input.ReadInt32();
            break;
          }
          case 146: {
            RewardPreview = input.ReadString();
            break;
          }
          case 152: {
            ItemReward = input.ReadInt32();
            break;
          }
          case 160: {
            FirstItemReward = input.ReadInt32();
            break;
          }
          case 168: {
            DiamondReward = input.ReadInt32();
            break;
          }
          case 178: {
            MinChestReward = input.ReadString();
            break;
          }
          case 186: {
            MaxChestReward = input.ReadString();
            break;
          }
          case 194:
          case 192: {
            charBanned_.AddEntriesFrom(input, _repeated_charBanned_codec);
            break;
          }
          case 202:
          case 200: {
            floorId_.AddEntriesFrom(input, _repeated_floorId_codec);
            break;
          }
          case 210: {
            Icon = input.ReadString();
            break;
          }
          case 216: {
            PosId = input.ReadInt32();
            break;
          }
          case 224: {
            PreviewMonsterGroupId = input.ReadInt32();
            break;
          }
          case 232: {
            Recommend = input.ReadInt32();
            break;
          }
          case 240: {
            Repeat = input.ReadBool();
            break;
          }
          case 248: {
            SubMapName = input.ReadInt32();
            break;
          }
          case 258: {
            MainlineImg = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Num = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Desc = input.ReadString();
            break;
          }
          case 40: {
            Type = input.ReadInt32();
            break;
          }
          case 48: {
            Energy = input.ReadInt32();
            break;
          }
          case 56: {
            ChapterId = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            prev_.AddEntriesFrom(ref input, _repeated_prev_codec);
            break;
          }
          case 74:
          case 72: {
            form_.AddEntriesFrom(ref input, _repeated_form_codec);
            break;
          }
          case 82: {
            AvgId = input.ReadString();
            break;
          }
          case 90:
          case 88: {
            trialCharacter_.AddEntriesFrom(ref input, _repeated_trialCharacter_codec);
            break;
          }
          case 98: {
            BeforeAvgId = input.ReadString();
            break;
          }
          case 106: {
            AfterAvgId = input.ReadString();
            break;
          }
          case 112: {
            EnergyConsume = input.ReadInt32();
            break;
          }
          case 120: {
            UnlockItem = input.ReadInt32();
            break;
          }
          case 128: {
            UnlockQty = input.ReadInt32();
            break;
          }
          case 136: {
            GlobReward = input.ReadInt32();
            break;
          }
          case 146: {
            RewardPreview = input.ReadString();
            break;
          }
          case 152: {
            ItemReward = input.ReadInt32();
            break;
          }
          case 160: {
            FirstItemReward = input.ReadInt32();
            break;
          }
          case 168: {
            DiamondReward = input.ReadInt32();
            break;
          }
          case 178: {
            MinChestReward = input.ReadString();
            break;
          }
          case 186: {
            MaxChestReward = input.ReadString();
            break;
          }
          case 194:
          case 192: {
            charBanned_.AddEntriesFrom(ref input, _repeated_charBanned_codec);
            break;
          }
          case 202:
          case 200: {
            floorId_.AddEntriesFrom(ref input, _repeated_floorId_codec);
            break;
          }
          case 210: {
            Icon = input.ReadString();
            break;
          }
          case 216: {
            PosId = input.ReadInt32();
            break;
          }
          case 224: {
            PreviewMonsterGroupId = input.ReadInt32();
            break;
          }
          case 232: {
            Recommend = input.ReadInt32();
            break;
          }
          case 240: {
            Repeat = input.ReadBool();
            break;
          }
          case 248: {
            SubMapName = input.ReadInt32();
            break;
          }
          case 258: {
            MainlineImg = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
