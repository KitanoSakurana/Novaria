// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: NPCSkin.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from NPCSkin.proto</summary>
  public static partial class NPCSkinReflection {

    #region Descriptor
    /// <summary>File descriptor for NPCSkin.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NPCSkinReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1OUENTa2luLnByb3RvIukCCgdOUENTa2luEgoKAmlkGAEgASgFEgwKBG5h",
            "bWUYAiABKAkSDAoEZGVzYxgDIAEoCRIPCgdpc19zaG93GAQgASgIEg8KB2No",
            "YXJfaWQYBSABKAUSDAoEdHlwZRgGIAEoBRITCgtzb3VyY2VfZGVzYxgHIAEo",
            "BRIMCgRpY29uGAggASgJEhYKDnNtYWxsX3BvcnRyYWl0GAkgASgJEhMKC21v",
            "ZGVsX3NjYWxlGAogASgFEg0KBW1vZGVsGAsgASgJEhAKCHBvcnRyYWl0GAwg",
            "ASgJEgoKAmJnGA0gASgJEg4KBm9mZnNldBgOIAEoCRIMCgRsMl9kGA8gASgJ",
            "EhwKFGZ1bGxfc2NyZWVuX3BvcnRyYWl0GBAgASgJEhIKCnNraW5fdGhlbWUY",
            "ESABKAUSGgoSaW50ZXJhY3RpdmVfYWN0aW9uGBIgASgIEh0KFWludGVyYWN0",
            "aXZlX2FjdGlvbl9pZBgTIAEoBUIOqgILTm92YS5DbGllbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.NPCSkin), global::Nova.Client.NPCSkin.Parser, new[]{ "Id", "Name", "Desc", "IsShow", "CharId", "Type", "SourceDesc", "Icon", "SmallPortrait", "ModelScale", "Model", "Portrait", "Bg", "Offset", "L2D", "FullScreenPortrait", "SkinTheme", "InteractiveAction", "InteractiveActionId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NPCSkin : pb::IMessage<NPCSkin>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NPCSkin> _parser = new pb::MessageParser<NPCSkin>(() => new NPCSkin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NPCSkin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.NPCSkinReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NPCSkin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NPCSkin(NPCSkin other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      desc_ = other.desc_;
      isShow_ = other.isShow_;
      charId_ = other.charId_;
      type_ = other.type_;
      sourceDesc_ = other.sourceDesc_;
      icon_ = other.icon_;
      smallPortrait_ = other.smallPortrait_;
      modelScale_ = other.modelScale_;
      model_ = other.model_;
      portrait_ = other.portrait_;
      bg_ = other.bg_;
      offset_ = other.offset_;
      l2D_ = other.l2D_;
      fullScreenPortrait_ = other.fullScreenPortrait_;
      skinTheme_ = other.skinTheme_;
      interactiveAction_ = other.interactiveAction_;
      interactiveActionId_ = other.interactiveActionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NPCSkin Clone() {
      return new NPCSkin(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_show" field.</summary>
    public const int IsShowFieldNumber = 4;
    private bool isShow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsShow {
      get { return isShow_; }
      set {
        isShow_ = value;
      }
    }

    /// <summary>Field number for the "char_id" field.</summary>
    public const int CharIdFieldNumber = 5;
    private int charId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CharId {
      get { return charId_; }
      set {
        charId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 6;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "source_desc" field.</summary>
    public const int SourceDescFieldNumber = 7;
    private int sourceDesc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SourceDesc {
      get { return sourceDesc_; }
      set {
        sourceDesc_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 8;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "small_portrait" field.</summary>
    public const int SmallPortraitFieldNumber = 9;
    private string smallPortrait_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SmallPortrait {
      get { return smallPortrait_; }
      set {
        smallPortrait_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_scale" field.</summary>
    public const int ModelScaleFieldNumber = 10;
    private int modelScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ModelScale {
      get { return modelScale_; }
      set {
        modelScale_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 11;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "portrait" field.</summary>
    public const int PortraitFieldNumber = 12;
    private string portrait_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Portrait {
      get { return portrait_; }
      set {
        portrait_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bg" field.</summary>
    public const int BgFieldNumber = 13;
    private string bg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Bg {
      get { return bg_; }
      set {
        bg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 14;
    private string offset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Offset {
      get { return offset_; }
      set {
        offset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "l2_d" field.</summary>
    public const int L2DFieldNumber = 15;
    private string l2D_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string L2D {
      get { return l2D_; }
      set {
        l2D_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "full_screen_portrait" field.</summary>
    public const int FullScreenPortraitFieldNumber = 16;
    private string fullScreenPortrait_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FullScreenPortrait {
      get { return fullScreenPortrait_; }
      set {
        fullScreenPortrait_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skin_theme" field.</summary>
    public const int SkinThemeFieldNumber = 17;
    private int skinTheme_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkinTheme {
      get { return skinTheme_; }
      set {
        skinTheme_ = value;
      }
    }

    /// <summary>Field number for the "interactive_action" field.</summary>
    public const int InteractiveActionFieldNumber = 18;
    private bool interactiveAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InteractiveAction {
      get { return interactiveAction_; }
      set {
        interactiveAction_ = value;
      }
    }

    /// <summary>Field number for the "interactive_action_id" field.</summary>
    public const int InteractiveActionIdFieldNumber = 19;
    private int interactiveActionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InteractiveActionId {
      get { return interactiveActionId_; }
      set {
        interactiveActionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NPCSkin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NPCSkin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if (IsShow != other.IsShow) return false;
      if (CharId != other.CharId) return false;
      if (Type != other.Type) return false;
      if (SourceDesc != other.SourceDesc) return false;
      if (Icon != other.Icon) return false;
      if (SmallPortrait != other.SmallPortrait) return false;
      if (ModelScale != other.ModelScale) return false;
      if (Model != other.Model) return false;
      if (Portrait != other.Portrait) return false;
      if (Bg != other.Bg) return false;
      if (Offset != other.Offset) return false;
      if (L2D != other.L2D) return false;
      if (FullScreenPortrait != other.FullScreenPortrait) return false;
      if (SkinTheme != other.SkinTheme) return false;
      if (InteractiveAction != other.InteractiveAction) return false;
      if (InteractiveActionId != other.InteractiveActionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (IsShow != false) hash ^= IsShow.GetHashCode();
      if (CharId != 0) hash ^= CharId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (SourceDesc != 0) hash ^= SourceDesc.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (SmallPortrait.Length != 0) hash ^= SmallPortrait.GetHashCode();
      if (ModelScale != 0) hash ^= ModelScale.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (Portrait.Length != 0) hash ^= Portrait.GetHashCode();
      if (Bg.Length != 0) hash ^= Bg.GetHashCode();
      if (Offset.Length != 0) hash ^= Offset.GetHashCode();
      if (L2D.Length != 0) hash ^= L2D.GetHashCode();
      if (FullScreenPortrait.Length != 0) hash ^= FullScreenPortrait.GetHashCode();
      if (SkinTheme != 0) hash ^= SkinTheme.GetHashCode();
      if (InteractiveAction != false) hash ^= InteractiveAction.GetHashCode();
      if (InteractiveActionId != 0) hash ^= InteractiveActionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (IsShow != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsShow);
      }
      if (CharId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CharId);
      }
      if (Type != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Type);
      }
      if (SourceDesc != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SourceDesc);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Icon);
      }
      if (SmallPortrait.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SmallPortrait);
      }
      if (ModelScale != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ModelScale);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Model);
      }
      if (Portrait.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Portrait);
      }
      if (Bg.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Bg);
      }
      if (Offset.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Offset);
      }
      if (L2D.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(L2D);
      }
      if (FullScreenPortrait.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(FullScreenPortrait);
      }
      if (SkinTheme != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(SkinTheme);
      }
      if (InteractiveAction != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(InteractiveAction);
      }
      if (InteractiveActionId != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(InteractiveActionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (IsShow != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsShow);
      }
      if (CharId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CharId);
      }
      if (Type != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Type);
      }
      if (SourceDesc != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SourceDesc);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Icon);
      }
      if (SmallPortrait.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SmallPortrait);
      }
      if (ModelScale != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ModelScale);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Model);
      }
      if (Portrait.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Portrait);
      }
      if (Bg.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Bg);
      }
      if (Offset.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Offset);
      }
      if (L2D.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(L2D);
      }
      if (FullScreenPortrait.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(FullScreenPortrait);
      }
      if (SkinTheme != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(SkinTheme);
      }
      if (InteractiveAction != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(InteractiveAction);
      }
      if (InteractiveActionId != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(InteractiveActionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (IsShow != false) {
        size += 1 + 1;
      }
      if (CharId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (SourceDesc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SourceDesc);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (SmallPortrait.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SmallPortrait);
      }
      if (ModelScale != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelScale);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (Portrait.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Portrait);
      }
      if (Bg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bg);
      }
      if (Offset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Offset);
      }
      if (L2D.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(L2D);
      }
      if (FullScreenPortrait.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FullScreenPortrait);
      }
      if (SkinTheme != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SkinTheme);
      }
      if (InteractiveAction != false) {
        size += 2 + 1;
      }
      if (InteractiveActionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(InteractiveActionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NPCSkin other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.IsShow != false) {
        IsShow = other.IsShow;
      }
      if (other.CharId != 0) {
        CharId = other.CharId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.SourceDesc != 0) {
        SourceDesc = other.SourceDesc;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.SmallPortrait.Length != 0) {
        SmallPortrait = other.SmallPortrait;
      }
      if (other.ModelScale != 0) {
        ModelScale = other.ModelScale;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.Portrait.Length != 0) {
        Portrait = other.Portrait;
      }
      if (other.Bg.Length != 0) {
        Bg = other.Bg;
      }
      if (other.Offset.Length != 0) {
        Offset = other.Offset;
      }
      if (other.L2D.Length != 0) {
        L2D = other.L2D;
      }
      if (other.FullScreenPortrait.Length != 0) {
        FullScreenPortrait = other.FullScreenPortrait;
      }
      if (other.SkinTheme != 0) {
        SkinTheme = other.SkinTheme;
      }
      if (other.InteractiveAction != false) {
        InteractiveAction = other.InteractiveAction;
      }
      if (other.InteractiveActionId != 0) {
        InteractiveActionId = other.InteractiveActionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 32: {
            IsShow = input.ReadBool();
            break;
          }
          case 40: {
            CharId = input.ReadInt32();
            break;
          }
          case 48: {
            Type = input.ReadInt32();
            break;
          }
          case 56: {
            SourceDesc = input.ReadInt32();
            break;
          }
          case 66: {
            Icon = input.ReadString();
            break;
          }
          case 74: {
            SmallPortrait = input.ReadString();
            break;
          }
          case 80: {
            ModelScale = input.ReadInt32();
            break;
          }
          case 90: {
            Model = input.ReadString();
            break;
          }
          case 98: {
            Portrait = input.ReadString();
            break;
          }
          case 106: {
            Bg = input.ReadString();
            break;
          }
          case 114: {
            Offset = input.ReadString();
            break;
          }
          case 122: {
            L2D = input.ReadString();
            break;
          }
          case 130: {
            FullScreenPortrait = input.ReadString();
            break;
          }
          case 136: {
            SkinTheme = input.ReadInt32();
            break;
          }
          case 144: {
            InteractiveAction = input.ReadBool();
            break;
          }
          case 152: {
            InteractiveActionId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 32: {
            IsShow = input.ReadBool();
            break;
          }
          case 40: {
            CharId = input.ReadInt32();
            break;
          }
          case 48: {
            Type = input.ReadInt32();
            break;
          }
          case 56: {
            SourceDesc = input.ReadInt32();
            break;
          }
          case 66: {
            Icon = input.ReadString();
            break;
          }
          case 74: {
            SmallPortrait = input.ReadString();
            break;
          }
          case 80: {
            ModelScale = input.ReadInt32();
            break;
          }
          case 90: {
            Model = input.ReadString();
            break;
          }
          case 98: {
            Portrait = input.ReadString();
            break;
          }
          case 106: {
            Bg = input.ReadString();
            break;
          }
          case 114: {
            Offset = input.ReadString();
            break;
          }
          case 122: {
            L2D = input.ReadString();
            break;
          }
          case 130: {
            FullScreenPortrait = input.ReadString();
            break;
          }
          case 136: {
            SkinTheme = input.ReadInt32();
            break;
          }
          case 144: {
            InteractiveAction = input.ReadBool();
            break;
          }
          case 152: {
            InteractiveActionId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
