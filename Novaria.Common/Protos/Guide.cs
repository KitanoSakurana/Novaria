// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Guide.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from Guide.proto</summary>
  public static partial class GuideReflection {

    #region Descriptor
    /// <summary>File descriptor for Guide.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GuideReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtHdWlkZS5wcm90byLEAwoFR3VpZGUSCgoCaWQYASABKAUSEAoIZ3JvdXBf",
            "aWQYAiABKAUSDAoEc3RlcBgDIAEoBRIMCgR0eXBlGAQgASgFEhUKDWd1aWRl",
            "X3ByZXBvc2UYBSABKAUSFgoOcHJlcG9zZV9wYXJhbXMYBiABKAkSFQoNZ3Vp",
            "ZGVfdHJpZ2dlchgHIAEoBRIWCg50cmlnZ2VyX3BhcmFtcxgIIAEoCRIQCghl",
            "bmRfdHlwZRgJIAEoBRIVCg1jZW50ZXJfb2Zmc2V0GAogASgCEhEKCWJpbmRf",
            "aWNvbhgLIAMoCRIdChViaW5kX2ljb25fY2hpbGRfY291bnQYDCABKAUSDAoE",
            "c2l6ZRgNIAMoBRIRCglkZXZpYXRpb24YDiADKAUSDQoFZGVsYXkYDyABKAUS",
            "DAoEaGVhZBgQIAEoCRIMCgRkZXNjGBEgASgJEhYKDmRlc2NfZGV2aWF0aW9u",
            "GBIgAygFEhYKDmhhbmRfZGV2aWF0aW9uGBMgAygFEhUKDWhhbmRfcm90YXRp",
            "b24YFCABKAUSEgoKZGljdGlvbmFyeRgVIAEoBRIOCgZhdmdfaWQYFiABKAkS",
            "EQoJaXNfYWN0aXZlGBcgASgIQg6qAgtOb3ZhLkNsaWVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Guide), global::Nova.Client.Guide.Parser, new[]{ "Id", "GroupId", "Step", "Type", "GuidePrepose", "PreposeParams", "GuideTrigger", "TriggerParams", "EndType", "CenterOffset", "BindIcon", "BindIconChildCount", "Size", "Deviation", "Delay", "Head", "Desc", "DescDeviation", "HandDeviation", "HandRotation", "Dictionary", "AvgId", "IsActive" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Guide : pb::IMessage<Guide>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Guide> _parser = new pb::MessageParser<Guide>(() => new Guide());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Guide> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.GuideReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Guide() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Guide(Guide other) : this() {
      id_ = other.id_;
      groupId_ = other.groupId_;
      step_ = other.step_;
      type_ = other.type_;
      guidePrepose_ = other.guidePrepose_;
      preposeParams_ = other.preposeParams_;
      guideTrigger_ = other.guideTrigger_;
      triggerParams_ = other.triggerParams_;
      endType_ = other.endType_;
      centerOffset_ = other.centerOffset_;
      bindIcon_ = other.bindIcon_.Clone();
      bindIconChildCount_ = other.bindIconChildCount_;
      size_ = other.size_.Clone();
      deviation_ = other.deviation_.Clone();
      delay_ = other.delay_;
      head_ = other.head_;
      desc_ = other.desc_;
      descDeviation_ = other.descDeviation_.Clone();
      handDeviation_ = other.handDeviation_.Clone();
      handRotation_ = other.handRotation_;
      dictionary_ = other.dictionary_;
      avgId_ = other.avgId_;
      isActive_ = other.isActive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Guide Clone() {
      return new Guide(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private int groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 3;
    private int step_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Step {
      get { return step_; }
      set {
        step_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "guide_prepose" field.</summary>
    public const int GuidePreposeFieldNumber = 5;
    private int guidePrepose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuidePrepose {
      get { return guidePrepose_; }
      set {
        guidePrepose_ = value;
      }
    }

    /// <summary>Field number for the "prepose_params" field.</summary>
    public const int PreposeParamsFieldNumber = 6;
    private string preposeParams_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PreposeParams {
      get { return preposeParams_; }
      set {
        preposeParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guide_trigger" field.</summary>
    public const int GuideTriggerFieldNumber = 7;
    private int guideTrigger_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuideTrigger {
      get { return guideTrigger_; }
      set {
        guideTrigger_ = value;
      }
    }

    /// <summary>Field number for the "trigger_params" field.</summary>
    public const int TriggerParamsFieldNumber = 8;
    private string triggerParams_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TriggerParams {
      get { return triggerParams_; }
      set {
        triggerParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_type" field.</summary>
    public const int EndTypeFieldNumber = 9;
    private int endType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EndType {
      get { return endType_; }
      set {
        endType_ = value;
      }
    }

    /// <summary>Field number for the "center_offset" field.</summary>
    public const int CenterOffsetFieldNumber = 10;
    private float centerOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CenterOffset {
      get { return centerOffset_; }
      set {
        centerOffset_ = value;
      }
    }

    /// <summary>Field number for the "bind_icon" field.</summary>
    public const int BindIconFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_bindIcon_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> bindIcon_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BindIcon {
      get { return bindIcon_; }
    }

    /// <summary>Field number for the "bind_icon_child_count" field.</summary>
    public const int BindIconChildCountFieldNumber = 12;
    private int bindIconChildCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BindIconChildCount {
      get { return bindIconChildCount_; }
      set {
        bindIconChildCount_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 13;
    private static readonly pb::FieldCodec<int> _repeated_size_codec
        = pb::FieldCodec.ForInt32(106);
    private readonly pbc::RepeatedField<int> size_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Size {
      get { return size_; }
    }

    /// <summary>Field number for the "deviation" field.</summary>
    public const int DeviationFieldNumber = 14;
    private static readonly pb::FieldCodec<int> _repeated_deviation_codec
        = pb::FieldCodec.ForInt32(114);
    private readonly pbc::RepeatedField<int> deviation_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Deviation {
      get { return deviation_; }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 15;
    private int delay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "head" field.</summary>
    public const int HeadFieldNumber = 16;
    private string head_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Head {
      get { return head_; }
      set {
        head_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 17;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc_deviation" field.</summary>
    public const int DescDeviationFieldNumber = 18;
    private static readonly pb::FieldCodec<int> _repeated_descDeviation_codec
        = pb::FieldCodec.ForInt32(146);
    private readonly pbc::RepeatedField<int> descDeviation_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> DescDeviation {
      get { return descDeviation_; }
    }

    /// <summary>Field number for the "hand_deviation" field.</summary>
    public const int HandDeviationFieldNumber = 19;
    private static readonly pb::FieldCodec<int> _repeated_handDeviation_codec
        = pb::FieldCodec.ForInt32(154);
    private readonly pbc::RepeatedField<int> handDeviation_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> HandDeviation {
      get { return handDeviation_; }
    }

    /// <summary>Field number for the "hand_rotation" field.</summary>
    public const int HandRotationFieldNumber = 20;
    private int handRotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandRotation {
      get { return handRotation_; }
      set {
        handRotation_ = value;
      }
    }

    /// <summary>Field number for the "dictionary" field.</summary>
    public const int DictionaryFieldNumber = 21;
    private int dictionary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dictionary {
      get { return dictionary_; }
      set {
        dictionary_ = value;
      }
    }

    /// <summary>Field number for the "avg_id" field.</summary>
    public const int AvgIdFieldNumber = 22;
    private string avgId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvgId {
      get { return avgId_; }
      set {
        avgId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_active" field.</summary>
    public const int IsActiveFieldNumber = 23;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Guide);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Guide other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (GroupId != other.GroupId) return false;
      if (Step != other.Step) return false;
      if (Type != other.Type) return false;
      if (GuidePrepose != other.GuidePrepose) return false;
      if (PreposeParams != other.PreposeParams) return false;
      if (GuideTrigger != other.GuideTrigger) return false;
      if (TriggerParams != other.TriggerParams) return false;
      if (EndType != other.EndType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CenterOffset, other.CenterOffset)) return false;
      if(!bindIcon_.Equals(other.bindIcon_)) return false;
      if (BindIconChildCount != other.BindIconChildCount) return false;
      if(!size_.Equals(other.size_)) return false;
      if(!deviation_.Equals(other.deviation_)) return false;
      if (Delay != other.Delay) return false;
      if (Head != other.Head) return false;
      if (Desc != other.Desc) return false;
      if(!descDeviation_.Equals(other.descDeviation_)) return false;
      if(!handDeviation_.Equals(other.handDeviation_)) return false;
      if (HandRotation != other.HandRotation) return false;
      if (Dictionary != other.Dictionary) return false;
      if (AvgId != other.AvgId) return false;
      if (IsActive != other.IsActive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (Step != 0) hash ^= Step.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (GuidePrepose != 0) hash ^= GuidePrepose.GetHashCode();
      if (PreposeParams.Length != 0) hash ^= PreposeParams.GetHashCode();
      if (GuideTrigger != 0) hash ^= GuideTrigger.GetHashCode();
      if (TriggerParams.Length != 0) hash ^= TriggerParams.GetHashCode();
      if (EndType != 0) hash ^= EndType.GetHashCode();
      if (CenterOffset != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CenterOffset);
      hash ^= bindIcon_.GetHashCode();
      if (BindIconChildCount != 0) hash ^= BindIconChildCount.GetHashCode();
      hash ^= size_.GetHashCode();
      hash ^= deviation_.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (Head.Length != 0) hash ^= Head.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      hash ^= descDeviation_.GetHashCode();
      hash ^= handDeviation_.GetHashCode();
      if (HandRotation != 0) hash ^= HandRotation.GetHashCode();
      if (Dictionary != 0) hash ^= Dictionary.GetHashCode();
      if (AvgId.Length != 0) hash ^= AvgId.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GroupId);
      }
      if (Step != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Step);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (GuidePrepose != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GuidePrepose);
      }
      if (PreposeParams.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PreposeParams);
      }
      if (GuideTrigger != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(GuideTrigger);
      }
      if (TriggerParams.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TriggerParams);
      }
      if (EndType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(EndType);
      }
      if (CenterOffset != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(CenterOffset);
      }
      bindIcon_.WriteTo(output, _repeated_bindIcon_codec);
      if (BindIconChildCount != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BindIconChildCount);
      }
      size_.WriteTo(output, _repeated_size_codec);
      deviation_.WriteTo(output, _repeated_deviation_codec);
      if (Delay != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Delay);
      }
      if (Head.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Head);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Desc);
      }
      descDeviation_.WriteTo(output, _repeated_descDeviation_codec);
      handDeviation_.WriteTo(output, _repeated_handDeviation_codec);
      if (HandRotation != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(HandRotation);
      }
      if (Dictionary != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(Dictionary);
      }
      if (AvgId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(AvgId);
      }
      if (IsActive != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsActive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GroupId);
      }
      if (Step != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Step);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (GuidePrepose != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GuidePrepose);
      }
      if (PreposeParams.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PreposeParams);
      }
      if (GuideTrigger != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(GuideTrigger);
      }
      if (TriggerParams.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TriggerParams);
      }
      if (EndType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(EndType);
      }
      if (CenterOffset != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(CenterOffset);
      }
      bindIcon_.WriteTo(ref output, _repeated_bindIcon_codec);
      if (BindIconChildCount != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BindIconChildCount);
      }
      size_.WriteTo(ref output, _repeated_size_codec);
      deviation_.WriteTo(ref output, _repeated_deviation_codec);
      if (Delay != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Delay);
      }
      if (Head.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Head);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Desc);
      }
      descDeviation_.WriteTo(ref output, _repeated_descDeviation_codec);
      handDeviation_.WriteTo(ref output, _repeated_handDeviation_codec);
      if (HandRotation != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(HandRotation);
      }
      if (Dictionary != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(Dictionary);
      }
      if (AvgId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(AvgId);
      }
      if (IsActive != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsActive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
      }
      if (Step != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Step);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (GuidePrepose != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuidePrepose);
      }
      if (PreposeParams.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreposeParams);
      }
      if (GuideTrigger != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuideTrigger);
      }
      if (TriggerParams.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerParams);
      }
      if (EndType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndType);
      }
      if (CenterOffset != 0F) {
        size += 1 + 4;
      }
      size += bindIcon_.CalculateSize(_repeated_bindIcon_codec);
      if (BindIconChildCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BindIconChildCount);
      }
      size += size_.CalculateSize(_repeated_size_codec);
      size += deviation_.CalculateSize(_repeated_deviation_codec);
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Delay);
      }
      if (Head.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Head);
      }
      if (Desc.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      size += descDeviation_.CalculateSize(_repeated_descDeviation_codec);
      size += handDeviation_.CalculateSize(_repeated_handDeviation_codec);
      if (HandRotation != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HandRotation);
      }
      if (Dictionary != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Dictionary);
      }
      if (AvgId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AvgId);
      }
      if (IsActive != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Guide other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      if (other.Step != 0) {
        Step = other.Step;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.GuidePrepose != 0) {
        GuidePrepose = other.GuidePrepose;
      }
      if (other.PreposeParams.Length != 0) {
        PreposeParams = other.PreposeParams;
      }
      if (other.GuideTrigger != 0) {
        GuideTrigger = other.GuideTrigger;
      }
      if (other.TriggerParams.Length != 0) {
        TriggerParams = other.TriggerParams;
      }
      if (other.EndType != 0) {
        EndType = other.EndType;
      }
      if (other.CenterOffset != 0F) {
        CenterOffset = other.CenterOffset;
      }
      bindIcon_.Add(other.bindIcon_);
      if (other.BindIconChildCount != 0) {
        BindIconChildCount = other.BindIconChildCount;
      }
      size_.Add(other.size_);
      deviation_.Add(other.deviation_);
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.Head.Length != 0) {
        Head = other.Head;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      descDeviation_.Add(other.descDeviation_);
      handDeviation_.Add(other.handDeviation_);
      if (other.HandRotation != 0) {
        HandRotation = other.HandRotation;
      }
      if (other.Dictionary != 0) {
        Dictionary = other.Dictionary;
      }
      if (other.AvgId.Length != 0) {
        AvgId = other.AvgId;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            GroupId = input.ReadInt32();
            break;
          }
          case 24: {
            Step = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            GuidePrepose = input.ReadInt32();
            break;
          }
          case 50: {
            PreposeParams = input.ReadString();
            break;
          }
          case 56: {
            GuideTrigger = input.ReadInt32();
            break;
          }
          case 66: {
            TriggerParams = input.ReadString();
            break;
          }
          case 72: {
            EndType = input.ReadInt32();
            break;
          }
          case 85: {
            CenterOffset = input.ReadFloat();
            break;
          }
          case 90: {
            bindIcon_.AddEntriesFrom(input, _repeated_bindIcon_codec);
            break;
          }
          case 96: {
            BindIconChildCount = input.ReadInt32();
            break;
          }
          case 106:
          case 104: {
            size_.AddEntriesFrom(input, _repeated_size_codec);
            break;
          }
          case 114:
          case 112: {
            deviation_.AddEntriesFrom(input, _repeated_deviation_codec);
            break;
          }
          case 120: {
            Delay = input.ReadInt32();
            break;
          }
          case 130: {
            Head = input.ReadString();
            break;
          }
          case 138: {
            Desc = input.ReadString();
            break;
          }
          case 146:
          case 144: {
            descDeviation_.AddEntriesFrom(input, _repeated_descDeviation_codec);
            break;
          }
          case 154:
          case 152: {
            handDeviation_.AddEntriesFrom(input, _repeated_handDeviation_codec);
            break;
          }
          case 160: {
            HandRotation = input.ReadInt32();
            break;
          }
          case 168: {
            Dictionary = input.ReadInt32();
            break;
          }
          case 178: {
            AvgId = input.ReadString();
            break;
          }
          case 184: {
            IsActive = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            GroupId = input.ReadInt32();
            break;
          }
          case 24: {
            Step = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            GuidePrepose = input.ReadInt32();
            break;
          }
          case 50: {
            PreposeParams = input.ReadString();
            break;
          }
          case 56: {
            GuideTrigger = input.ReadInt32();
            break;
          }
          case 66: {
            TriggerParams = input.ReadString();
            break;
          }
          case 72: {
            EndType = input.ReadInt32();
            break;
          }
          case 85: {
            CenterOffset = input.ReadFloat();
            break;
          }
          case 90: {
            bindIcon_.AddEntriesFrom(ref input, _repeated_bindIcon_codec);
            break;
          }
          case 96: {
            BindIconChildCount = input.ReadInt32();
            break;
          }
          case 106:
          case 104: {
            size_.AddEntriesFrom(ref input, _repeated_size_codec);
            break;
          }
          case 114:
          case 112: {
            deviation_.AddEntriesFrom(ref input, _repeated_deviation_codec);
            break;
          }
          case 120: {
            Delay = input.ReadInt32();
            break;
          }
          case 130: {
            Head = input.ReadString();
            break;
          }
          case 138: {
            Desc = input.ReadString();
            break;
          }
          case 146:
          case 144: {
            descDeviation_.AddEntriesFrom(ref input, _repeated_descDeviation_codec);
            break;
          }
          case 154:
          case 152: {
            handDeviation_.AddEntriesFrom(ref input, _repeated_handDeviation_codec);
            break;
          }
          case 160: {
            HandRotation = input.ReadInt32();
            break;
          }
          case 168: {
            Dictionary = input.ReadInt32();
            break;
          }
          case 178: {
            AvgId = input.ReadString();
            break;
          }
          case 184: {
            IsActive = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
