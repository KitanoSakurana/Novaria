// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: NoteDropGroup.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from NoteDropGroup.proto</summary>
  public static partial class NoteDropGroupReflection {

    #region Descriptor
    /// <summary>File descriptor for NoteDropGroup.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NoteDropGroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNOb3RlRHJvcEdyb3VwLnByb3RvIscBCg1Ob3RlRHJvcEdyb3VwEg0KBWlu",
            "ZGV4GAEgASgFEhAKCGdyb3VwX2lkGAIgASgFEhkKEXJhbmRvbV9ub3RlX3Jh",
            "bmdlGAMgAygFEhQKDGFfbm90ZV9yYW5nZRgEIAMoBRIUCgxiX25vdGVfcmFu",
            "Z2UYBSADKAUSFAoMY19ub3RlX3JhbmdlGAYgAygFEhQKDGRfbm90ZV9yYW5n",
            "ZRgHIAMoBRIUCgxlX25vdGVfcmFuZ2UYCCADKAUSDAoEaWNvbhgJIAEoCUIO",
            "qgILTm92YS5DbGllbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.NoteDropGroup), global::Nova.Client.NoteDropGroup.Parser, new[]{ "Index", "GroupId", "RandomNoteRange", "ANoteRange", "BNoteRange", "CNoteRange", "DNoteRange", "ENoteRange", "Icon" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NoteDropGroup : pb::IMessage<NoteDropGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NoteDropGroup> _parser = new pb::MessageParser<NoteDropGroup>(() => new NoteDropGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NoteDropGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.NoteDropGroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NoteDropGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NoteDropGroup(NoteDropGroup other) : this() {
      index_ = other.index_;
      groupId_ = other.groupId_;
      randomNoteRange_ = other.randomNoteRange_.Clone();
      aNoteRange_ = other.aNoteRange_.Clone();
      bNoteRange_ = other.bNoteRange_.Clone();
      cNoteRange_ = other.cNoteRange_.Clone();
      dNoteRange_ = other.dNoteRange_.Clone();
      eNoteRange_ = other.eNoteRange_.Clone();
      icon_ = other.icon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NoteDropGroup Clone() {
      return new NoteDropGroup(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private int groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "random_note_range" field.</summary>
    public const int RandomNoteRangeFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_randomNoteRange_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> randomNoteRange_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> RandomNoteRange {
      get { return randomNoteRange_; }
    }

    /// <summary>Field number for the "a_note_range" field.</summary>
    public const int ANoteRangeFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_aNoteRange_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> aNoteRange_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ANoteRange {
      get { return aNoteRange_; }
    }

    /// <summary>Field number for the "b_note_range" field.</summary>
    public const int BNoteRangeFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_bNoteRange_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> bNoteRange_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BNoteRange {
      get { return bNoteRange_; }
    }

    /// <summary>Field number for the "c_note_range" field.</summary>
    public const int CNoteRangeFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_cNoteRange_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> cNoteRange_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> CNoteRange {
      get { return cNoteRange_; }
    }

    /// <summary>Field number for the "d_note_range" field.</summary>
    public const int DNoteRangeFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_dNoteRange_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> dNoteRange_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> DNoteRange {
      get { return dNoteRange_; }
    }

    /// <summary>Field number for the "e_note_range" field.</summary>
    public const int ENoteRangeFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_eNoteRange_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> eNoteRange_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ENoteRange {
      get { return eNoteRange_; }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 9;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NoteDropGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NoteDropGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (GroupId != other.GroupId) return false;
      if(!randomNoteRange_.Equals(other.randomNoteRange_)) return false;
      if(!aNoteRange_.Equals(other.aNoteRange_)) return false;
      if(!bNoteRange_.Equals(other.bNoteRange_)) return false;
      if(!cNoteRange_.Equals(other.cNoteRange_)) return false;
      if(!dNoteRange_.Equals(other.dNoteRange_)) return false;
      if(!eNoteRange_.Equals(other.eNoteRange_)) return false;
      if (Icon != other.Icon) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      hash ^= randomNoteRange_.GetHashCode();
      hash ^= aNoteRange_.GetHashCode();
      hash ^= bNoteRange_.GetHashCode();
      hash ^= cNoteRange_.GetHashCode();
      hash ^= dNoteRange_.GetHashCode();
      hash ^= eNoteRange_.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (GroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GroupId);
      }
      randomNoteRange_.WriteTo(output, _repeated_randomNoteRange_codec);
      aNoteRange_.WriteTo(output, _repeated_aNoteRange_codec);
      bNoteRange_.WriteTo(output, _repeated_bNoteRange_codec);
      cNoteRange_.WriteTo(output, _repeated_cNoteRange_codec);
      dNoteRange_.WriteTo(output, _repeated_dNoteRange_codec);
      eNoteRange_.WriteTo(output, _repeated_eNoteRange_codec);
      if (Icon.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (GroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GroupId);
      }
      randomNoteRange_.WriteTo(ref output, _repeated_randomNoteRange_codec);
      aNoteRange_.WriteTo(ref output, _repeated_aNoteRange_codec);
      bNoteRange_.WriteTo(ref output, _repeated_bNoteRange_codec);
      cNoteRange_.WriteTo(ref output, _repeated_cNoteRange_codec);
      dNoteRange_.WriteTo(ref output, _repeated_dNoteRange_codec);
      eNoteRange_.WriteTo(ref output, _repeated_eNoteRange_codec);
      if (Icon.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
      }
      size += randomNoteRange_.CalculateSize(_repeated_randomNoteRange_codec);
      size += aNoteRange_.CalculateSize(_repeated_aNoteRange_codec);
      size += bNoteRange_.CalculateSize(_repeated_bNoteRange_codec);
      size += cNoteRange_.CalculateSize(_repeated_cNoteRange_codec);
      size += dNoteRange_.CalculateSize(_repeated_dNoteRange_codec);
      size += eNoteRange_.CalculateSize(_repeated_eNoteRange_codec);
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NoteDropGroup other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      randomNoteRange_.Add(other.randomNoteRange_);
      aNoteRange_.Add(other.aNoteRange_);
      bNoteRange_.Add(other.bNoteRange_);
      cNoteRange_.Add(other.cNoteRange_);
      dNoteRange_.Add(other.dNoteRange_);
      eNoteRange_.Add(other.eNoteRange_);
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            GroupId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            randomNoteRange_.AddEntriesFrom(input, _repeated_randomNoteRange_codec);
            break;
          }
          case 34:
          case 32: {
            aNoteRange_.AddEntriesFrom(input, _repeated_aNoteRange_codec);
            break;
          }
          case 42:
          case 40: {
            bNoteRange_.AddEntriesFrom(input, _repeated_bNoteRange_codec);
            break;
          }
          case 50:
          case 48: {
            cNoteRange_.AddEntriesFrom(input, _repeated_cNoteRange_codec);
            break;
          }
          case 58:
          case 56: {
            dNoteRange_.AddEntriesFrom(input, _repeated_dNoteRange_codec);
            break;
          }
          case 66:
          case 64: {
            eNoteRange_.AddEntriesFrom(input, _repeated_eNoteRange_codec);
            break;
          }
          case 74: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            GroupId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            randomNoteRange_.AddEntriesFrom(ref input, _repeated_randomNoteRange_codec);
            break;
          }
          case 34:
          case 32: {
            aNoteRange_.AddEntriesFrom(ref input, _repeated_aNoteRange_codec);
            break;
          }
          case 42:
          case 40: {
            bNoteRange_.AddEntriesFrom(ref input, _repeated_bNoteRange_codec);
            break;
          }
          case 50:
          case 48: {
            cNoteRange_.AddEntriesFrom(ref input, _repeated_cNoteRange_codec);
            break;
          }
          case 58:
          case 56: {
            dNoteRange_.AddEntriesFrom(ref input, _repeated_dNoteRange_codec);
            break;
          }
          case 66:
          case 64: {
            eNoteRange_.AddEntriesFrom(ref input, _repeated_eNoteRange_codec);
            break;
          }
          case 74: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
