// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BattlePassReward.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from BattlePassReward.proto</summary>
  public static partial class BattlePassRewardReflection {

    #region Descriptor
    /// <summary>File descriptor for BattlePassReward.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BattlePassRewardReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZCYXR0bGVQYXNzUmV3YXJkLnByb3RvIpEBChBCYXR0bGVQYXNzUmV3YXJk",
            "EgsKA2lfZBgBIAEoBRINCgVsZXZlbBgCIAEoBRIMCgR0aWQxGAMgASgFEgwK",
            "BHF0eTEYBCABKAUSDAoEdGlkMhgFIAEoBRIMCgRxdHkyGAYgASgFEgwKBHRp",
            "ZDMYByABKAUSDAoEcXR5MxgIIAEoBRINCgVmb2N1cxgJIAEoCEIOqgILTm92",
            "YS5DbGllbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.BattlePassReward), global::Nova.Client.BattlePassReward.Parser, new[]{ "ID", "Level", "Tid1", "Qty1", "Tid2", "Qty2", "Tid3", "Qty3", "Focus" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BattlePassReward : pb::IMessage<BattlePassReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattlePassReward> _parser = new pb::MessageParser<BattlePassReward>(() => new BattlePassReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BattlePassReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.BattlePassRewardReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlePassReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlePassReward(BattlePassReward other) : this() {
      iD_ = other.iD_;
      level_ = other.level_;
      tid1_ = other.tid1_;
      qty1_ = other.qty1_;
      tid2_ = other.tid2_;
      qty2_ = other.qty2_;
      tid3_ = other.tid3_;
      qty3_ = other.qty3_;
      focus_ = other.focus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlePassReward Clone() {
      return new BattlePassReward(this);
    }

    /// <summary>Field number for the "i_d" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "tid1" field.</summary>
    public const int Tid1FieldNumber = 3;
    private int tid1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tid1 {
      get { return tid1_; }
      set {
        tid1_ = value;
      }
    }

    /// <summary>Field number for the "qty1" field.</summary>
    public const int Qty1FieldNumber = 4;
    private int qty1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Qty1 {
      get { return qty1_; }
      set {
        qty1_ = value;
      }
    }

    /// <summary>Field number for the "tid2" field.</summary>
    public const int Tid2FieldNumber = 5;
    private int tid2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tid2 {
      get { return tid2_; }
      set {
        tid2_ = value;
      }
    }

    /// <summary>Field number for the "qty2" field.</summary>
    public const int Qty2FieldNumber = 6;
    private int qty2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Qty2 {
      get { return qty2_; }
      set {
        qty2_ = value;
      }
    }

    /// <summary>Field number for the "tid3" field.</summary>
    public const int Tid3FieldNumber = 7;
    private int tid3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tid3 {
      get { return tid3_; }
      set {
        tid3_ = value;
      }
    }

    /// <summary>Field number for the "qty3" field.</summary>
    public const int Qty3FieldNumber = 8;
    private int qty3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Qty3 {
      get { return qty3_; }
      set {
        qty3_ = value;
      }
    }

    /// <summary>Field number for the "focus" field.</summary>
    public const int FocusFieldNumber = 9;
    private bool focus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Focus {
      get { return focus_; }
      set {
        focus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BattlePassReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BattlePassReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (Level != other.Level) return false;
      if (Tid1 != other.Tid1) return false;
      if (Qty1 != other.Qty1) return false;
      if (Tid2 != other.Tid2) return false;
      if (Qty2 != other.Qty2) return false;
      if (Tid3 != other.Tid3) return false;
      if (Qty3 != other.Qty3) return false;
      if (Focus != other.Focus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Tid1 != 0) hash ^= Tid1.GetHashCode();
      if (Qty1 != 0) hash ^= Qty1.GetHashCode();
      if (Tid2 != 0) hash ^= Tid2.GetHashCode();
      if (Qty2 != 0) hash ^= Qty2.GetHashCode();
      if (Tid3 != 0) hash ^= Tid3.GetHashCode();
      if (Qty3 != 0) hash ^= Qty3.GetHashCode();
      if (Focus != false) hash ^= Focus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (Tid1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Tid1);
      }
      if (Qty1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Qty1);
      }
      if (Tid2 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Tid2);
      }
      if (Qty2 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Qty2);
      }
      if (Tid3 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Tid3);
      }
      if (Qty3 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Qty3);
      }
      if (Focus != false) {
        output.WriteRawTag(72);
        output.WriteBool(Focus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (Tid1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Tid1);
      }
      if (Qty1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Qty1);
      }
      if (Tid2 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Tid2);
      }
      if (Qty2 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Qty2);
      }
      if (Tid3 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Tid3);
      }
      if (Qty3 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Qty3);
      }
      if (Focus != false) {
        output.WriteRawTag(72);
        output.WriteBool(Focus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Tid1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tid1);
      }
      if (Qty1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Qty1);
      }
      if (Tid2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tid2);
      }
      if (Qty2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Qty2);
      }
      if (Tid3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tid3);
      }
      if (Qty3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Qty3);
      }
      if (Focus != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BattlePassReward other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Tid1 != 0) {
        Tid1 = other.Tid1;
      }
      if (other.Qty1 != 0) {
        Qty1 = other.Qty1;
      }
      if (other.Tid2 != 0) {
        Tid2 = other.Tid2;
      }
      if (other.Qty2 != 0) {
        Qty2 = other.Qty2;
      }
      if (other.Tid3 != 0) {
        Tid3 = other.Tid3;
      }
      if (other.Qty3 != 0) {
        Qty3 = other.Qty3;
      }
      if (other.Focus != false) {
        Focus = other.Focus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            Tid1 = input.ReadInt32();
            break;
          }
          case 32: {
            Qty1 = input.ReadInt32();
            break;
          }
          case 40: {
            Tid2 = input.ReadInt32();
            break;
          }
          case 48: {
            Qty2 = input.ReadInt32();
            break;
          }
          case 56: {
            Tid3 = input.ReadInt32();
            break;
          }
          case 64: {
            Qty3 = input.ReadInt32();
            break;
          }
          case 72: {
            Focus = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            Tid1 = input.ReadInt32();
            break;
          }
          case 32: {
            Qty1 = input.ReadInt32();
            break;
          }
          case 40: {
            Tid2 = input.ReadInt32();
            break;
          }
          case 48: {
            Qty2 = input.ReadInt32();
            break;
          }
          case 56: {
            Tid3 = input.ReadInt32();
            break;
          }
          case 64: {
            Qty3 = input.ReadInt32();
            break;
          }
          case 72: {
            Focus = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
