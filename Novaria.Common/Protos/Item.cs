// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Item.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from Item.proto</summary>
  public static partial class ItemReflection {

    #region Descriptor
    /// <summary>File descriptor for Item.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpJdGVtLnByb3RvIrYCCgRJdGVtEgoKAmlkGAEgASgFEg0KBXRpdGxlGAIg",
            "ASgJEgwKBGRlc2MYAyABKAkSEAoIbGl0ZXJhcnkYBCABKAkSDAoEdHlwZRgF",
            "IAEoBRINCgVzdHlwZRgGIAEoBRIOCgZyYXJpdHkYByABKAUSDQoFc3RhY2sY",
            "CCABKAgSFgoOcG9zaXRpb25fbGltaXQYCSABKAUSEwoLZXhwaXJlX3R5cGUY",
            "CiABKAUSEAoIdXNlX21vZGUYCyABKAUSEgoKdXNlX2FjdGlvbhgMIAEoBRIQ",
            "Cgh1c2VfYXJncxgNIAEoCRIPCgdkaXNwbGF5GA4gASgIEhMKC29idGFpbl93",
            "YXlzGA8gASgJEg8KB2p1bXBfdG8YECADKAUSDAoEaWNvbhgRIAEoCRINCgVp",
            "Y29uMhgSIAEoCUIOqgILTm92YS5DbGllbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Item), global::Nova.Client.Item.Parser, new[]{ "Id", "Title", "Desc", "Literary", "Type", "Stype", "Rarity", "Stack", "PositionLimit", "ExpireType", "UseMode", "UseAction", "UseArgs", "Display", "ObtainWays", "JumpTo", "Icon", "Icon2" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Item : pb::IMessage<Item>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.ItemReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item(Item other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      desc_ = other.desc_;
      literary_ = other.literary_;
      type_ = other.type_;
      stype_ = other.stype_;
      rarity_ = other.rarity_;
      stack_ = other.stack_;
      positionLimit_ = other.positionLimit_;
      expireType_ = other.expireType_;
      useMode_ = other.useMode_;
      useAction_ = other.useAction_;
      useArgs_ = other.useArgs_;
      display_ = other.display_;
      obtainWays_ = other.obtainWays_;
      jumpTo_ = other.jumpTo_.Clone();
      icon_ = other.icon_;
      icon2_ = other.icon2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "literary" field.</summary>
    public const int LiteraryFieldNumber = 4;
    private string literary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Literary {
      get { return literary_; }
      set {
        literary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "stype" field.</summary>
    public const int StypeFieldNumber = 6;
    private int stype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Stype {
      get { return stype_; }
      set {
        stype_ = value;
      }
    }

    /// <summary>Field number for the "rarity" field.</summary>
    public const int RarityFieldNumber = 7;
    private int rarity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rarity {
      get { return rarity_; }
      set {
        rarity_ = value;
      }
    }

    /// <summary>Field number for the "stack" field.</summary>
    public const int StackFieldNumber = 8;
    private bool stack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Stack {
      get { return stack_; }
      set {
        stack_ = value;
      }
    }

    /// <summary>Field number for the "position_limit" field.</summary>
    public const int PositionLimitFieldNumber = 9;
    private int positionLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PositionLimit {
      get { return positionLimit_; }
      set {
        positionLimit_ = value;
      }
    }

    /// <summary>Field number for the "expire_type" field.</summary>
    public const int ExpireTypeFieldNumber = 10;
    private int expireType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExpireType {
      get { return expireType_; }
      set {
        expireType_ = value;
      }
    }

    /// <summary>Field number for the "use_mode" field.</summary>
    public const int UseModeFieldNumber = 11;
    private int useMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UseMode {
      get { return useMode_; }
      set {
        useMode_ = value;
      }
    }

    /// <summary>Field number for the "use_action" field.</summary>
    public const int UseActionFieldNumber = 12;
    private int useAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UseAction {
      get { return useAction_; }
      set {
        useAction_ = value;
      }
    }

    /// <summary>Field number for the "use_args" field.</summary>
    public const int UseArgsFieldNumber = 13;
    private string useArgs_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UseArgs {
      get { return useArgs_; }
      set {
        useArgs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display" field.</summary>
    public const int DisplayFieldNumber = 14;
    private bool display_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Display {
      get { return display_; }
      set {
        display_ = value;
      }
    }

    /// <summary>Field number for the "obtain_ways" field.</summary>
    public const int ObtainWaysFieldNumber = 15;
    private string obtainWays_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObtainWays {
      get { return obtainWays_; }
      set {
        obtainWays_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jump_to" field.</summary>
    public const int JumpToFieldNumber = 16;
    private static readonly pb::FieldCodec<int> _repeated_jumpTo_codec
        = pb::FieldCodec.ForInt32(130);
    private readonly pbc::RepeatedField<int> jumpTo_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> JumpTo {
      get { return jumpTo_; }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 17;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon2" field.</summary>
    public const int Icon2FieldNumber = 18;
    private string icon2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon2 {
      get { return icon2_; }
      set {
        icon2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (Desc != other.Desc) return false;
      if (Literary != other.Literary) return false;
      if (Type != other.Type) return false;
      if (Stype != other.Stype) return false;
      if (Rarity != other.Rarity) return false;
      if (Stack != other.Stack) return false;
      if (PositionLimit != other.PositionLimit) return false;
      if (ExpireType != other.ExpireType) return false;
      if (UseMode != other.UseMode) return false;
      if (UseAction != other.UseAction) return false;
      if (UseArgs != other.UseArgs) return false;
      if (Display != other.Display) return false;
      if (ObtainWays != other.ObtainWays) return false;
      if(!jumpTo_.Equals(other.jumpTo_)) return false;
      if (Icon != other.Icon) return false;
      if (Icon2 != other.Icon2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (Literary.Length != 0) hash ^= Literary.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Stype != 0) hash ^= Stype.GetHashCode();
      if (Rarity != 0) hash ^= Rarity.GetHashCode();
      if (Stack != false) hash ^= Stack.GetHashCode();
      if (PositionLimit != 0) hash ^= PositionLimit.GetHashCode();
      if (ExpireType != 0) hash ^= ExpireType.GetHashCode();
      if (UseMode != 0) hash ^= UseMode.GetHashCode();
      if (UseAction != 0) hash ^= UseAction.GetHashCode();
      if (UseArgs.Length != 0) hash ^= UseArgs.GetHashCode();
      if (Display != false) hash ^= Display.GetHashCode();
      if (ObtainWays.Length != 0) hash ^= ObtainWays.GetHashCode();
      hash ^= jumpTo_.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Icon2.Length != 0) hash ^= Icon2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (Literary.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Literary);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Type);
      }
      if (Stype != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Stype);
      }
      if (Rarity != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Rarity);
      }
      if (Stack != false) {
        output.WriteRawTag(64);
        output.WriteBool(Stack);
      }
      if (PositionLimit != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PositionLimit);
      }
      if (ExpireType != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ExpireType);
      }
      if (UseMode != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(UseMode);
      }
      if (UseAction != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(UseAction);
      }
      if (UseArgs.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(UseArgs);
      }
      if (Display != false) {
        output.WriteRawTag(112);
        output.WriteBool(Display);
      }
      if (ObtainWays.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ObtainWays);
      }
      jumpTo_.WriteTo(output, _repeated_jumpTo_codec);
      if (Icon.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Icon);
      }
      if (Icon2.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Icon2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (Literary.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Literary);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Type);
      }
      if (Stype != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Stype);
      }
      if (Rarity != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Rarity);
      }
      if (Stack != false) {
        output.WriteRawTag(64);
        output.WriteBool(Stack);
      }
      if (PositionLimit != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PositionLimit);
      }
      if (ExpireType != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ExpireType);
      }
      if (UseMode != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(UseMode);
      }
      if (UseAction != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(UseAction);
      }
      if (UseArgs.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(UseArgs);
      }
      if (Display != false) {
        output.WriteRawTag(112);
        output.WriteBool(Display);
      }
      if (ObtainWays.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ObtainWays);
      }
      jumpTo_.WriteTo(ref output, _repeated_jumpTo_codec);
      if (Icon.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Icon);
      }
      if (Icon2.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Icon2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (Literary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Literary);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Stype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stype);
      }
      if (Rarity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rarity);
      }
      if (Stack != false) {
        size += 1 + 1;
      }
      if (PositionLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionLimit);
      }
      if (ExpireType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpireType);
      }
      if (UseMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UseMode);
      }
      if (UseAction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UseAction);
      }
      if (UseArgs.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UseArgs);
      }
      if (Display != false) {
        size += 1 + 1;
      }
      if (ObtainWays.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObtainWays);
      }
      size += jumpTo_.CalculateSize(_repeated_jumpTo_codec);
      if (Icon.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Icon2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Icon2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.Literary.Length != 0) {
        Literary = other.Literary;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Stype != 0) {
        Stype = other.Stype;
      }
      if (other.Rarity != 0) {
        Rarity = other.Rarity;
      }
      if (other.Stack != false) {
        Stack = other.Stack;
      }
      if (other.PositionLimit != 0) {
        PositionLimit = other.PositionLimit;
      }
      if (other.ExpireType != 0) {
        ExpireType = other.ExpireType;
      }
      if (other.UseMode != 0) {
        UseMode = other.UseMode;
      }
      if (other.UseAction != 0) {
        UseAction = other.UseAction;
      }
      if (other.UseArgs.Length != 0) {
        UseArgs = other.UseArgs;
      }
      if (other.Display != false) {
        Display = other.Display;
      }
      if (other.ObtainWays.Length != 0) {
        ObtainWays = other.ObtainWays;
      }
      jumpTo_.Add(other.jumpTo_);
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Icon2.Length != 0) {
        Icon2 = other.Icon2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 34: {
            Literary = input.ReadString();
            break;
          }
          case 40: {
            Type = input.ReadInt32();
            break;
          }
          case 48: {
            Stype = input.ReadInt32();
            break;
          }
          case 56: {
            Rarity = input.ReadInt32();
            break;
          }
          case 64: {
            Stack = input.ReadBool();
            break;
          }
          case 72: {
            PositionLimit = input.ReadInt32();
            break;
          }
          case 80: {
            ExpireType = input.ReadInt32();
            break;
          }
          case 88: {
            UseMode = input.ReadInt32();
            break;
          }
          case 96: {
            UseAction = input.ReadInt32();
            break;
          }
          case 106: {
            UseArgs = input.ReadString();
            break;
          }
          case 112: {
            Display = input.ReadBool();
            break;
          }
          case 122: {
            ObtainWays = input.ReadString();
            break;
          }
          case 130:
          case 128: {
            jumpTo_.AddEntriesFrom(input, _repeated_jumpTo_codec);
            break;
          }
          case 138: {
            Icon = input.ReadString();
            break;
          }
          case 146: {
            Icon2 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 34: {
            Literary = input.ReadString();
            break;
          }
          case 40: {
            Type = input.ReadInt32();
            break;
          }
          case 48: {
            Stype = input.ReadInt32();
            break;
          }
          case 56: {
            Rarity = input.ReadInt32();
            break;
          }
          case 64: {
            Stack = input.ReadBool();
            break;
          }
          case 72: {
            PositionLimit = input.ReadInt32();
            break;
          }
          case 80: {
            ExpireType = input.ReadInt32();
            break;
          }
          case 88: {
            UseMode = input.ReadInt32();
            break;
          }
          case 96: {
            UseAction = input.ReadInt32();
            break;
          }
          case 106: {
            UseArgs = input.ReadString();
            break;
          }
          case 112: {
            Display = input.ReadBool();
            break;
          }
          case 122: {
            ObtainWays = input.ReadString();
            break;
          }
          case 130:
          case 128: {
            jumpTo_.AddEntriesFrom(ref input, _repeated_jumpTo_codec);
            break;
          }
          case 138: {
            Icon = input.ReadString();
            break;
          }
          case 146: {
            Icon2 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
