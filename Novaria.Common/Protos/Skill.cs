// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Skill.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from Skill.proto</summary>
  public static partial class SkillReflection {

    #region Descriptor
    /// <summary>File descriptor for Skill.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SkillReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtTa2lsbC5wcm90byKCBAoFU2tpbGwSCgoCaWQYASABKAUSDQoFdGl0bGUY",
            "AiABKAkSEAoIZl9jX3BhdGgYAyABKAkSDAoEdHlwZRgEIAEoBRIMCgRkZXNj",
            "GAUgASgJEgwKBGljb24YBiABKAkSEQoJc2tpbGxfY19kGAcgASgFEhEKCW1h",
            "eF9sZXZlbBgIIAEoBRIVCg1yZWxhdGVkX3NraWxsGAkgASgJEhYKDnNlY3Rp",
            "b25fYW1vdW50GAogASgFEhQKDHVzZV9pbnRlcnZhbBgLIAEoBRIVCg11c2Vf",
            "dGltZV9oaW50GAwgASgFEhQKDHVsdHJhX2VuZXJneRgNIAEoBRIZChFjaGVj",
            "a19jX2RfcmVzdG9yZRgOIAEoCBIYChBmb3JjZV9ydW5fZmluaXNoGA8gASgI",
            "EhgKEGdldF9lbmVyZ3lfbGltaXQYECABKAUSDgoGcGFyYW0xGBEgASgJEg4K",
            "BnBhcmFtMhgSIAEoCRIOCgZwYXJhbTMYEyABKAkSDgoGcGFyYW00GBQgASgJ",
            "Eg4KBnBhcmFtNRgVIAEoCRIOCgZwYXJhbTYYFiABKAkSDgoGcGFyYW03GBcg",
            "ASgJEg4KBnBhcmFtOBgYIAEoCRIOCgZwYXJhbTkYGSABKAkSDwoHcGFyYW0x",
            "MBgaIAEoCRIaChJpc19jbGVhbl9za2lsbF9jX2QYGyABKAhCDqoCC05vdmEu",
            "Q2xpZW50YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.Skill), global::Nova.Client.Skill.Parser, new[]{ "Id", "Title", "FCPath", "Type", "Desc", "Icon", "SkillCD", "MaxLevel", "RelatedSkill", "SectionAmount", "UseInterval", "UseTimeHint", "UltraEnergy", "CheckCDRestore", "ForceRunFinish", "GetEnergyLimit", "Param1", "Param2", "Param3", "Param4", "Param5", "Param6", "Param7", "Param8", "Param9", "Param10", "IsCleanSkillCD" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Skill : pb::IMessage<Skill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Skill> _parser = new pb::MessageParser<Skill>(() => new Skill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.SkillReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill(Skill other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      fCPath_ = other.fCPath_;
      type_ = other.type_;
      desc_ = other.desc_;
      icon_ = other.icon_;
      skillCD_ = other.skillCD_;
      maxLevel_ = other.maxLevel_;
      relatedSkill_ = other.relatedSkill_;
      sectionAmount_ = other.sectionAmount_;
      useInterval_ = other.useInterval_;
      useTimeHint_ = other.useTimeHint_;
      ultraEnergy_ = other.ultraEnergy_;
      checkCDRestore_ = other.checkCDRestore_;
      forceRunFinish_ = other.forceRunFinish_;
      getEnergyLimit_ = other.getEnergyLimit_;
      param1_ = other.param1_;
      param2_ = other.param2_;
      param3_ = other.param3_;
      param4_ = other.param4_;
      param5_ = other.param5_;
      param6_ = other.param6_;
      param7_ = other.param7_;
      param8_ = other.param8_;
      param9_ = other.param9_;
      param10_ = other.param10_;
      isCleanSkillCD_ = other.isCleanSkillCD_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill Clone() {
      return new Skill(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "f_c_path" field.</summary>
    public const int FCPathFieldNumber = 3;
    private string fCPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FCPath {
      get { return fCPath_; }
      set {
        fCPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 5;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 6;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skill_c_d" field.</summary>
    public const int SkillCDFieldNumber = 7;
    private int skillCD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkillCD {
      get { return skillCD_; }
      set {
        skillCD_ = value;
      }
    }

    /// <summary>Field number for the "max_level" field.</summary>
    public const int MaxLevelFieldNumber = 8;
    private int maxLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxLevel {
      get { return maxLevel_; }
      set {
        maxLevel_ = value;
      }
    }

    /// <summary>Field number for the "related_skill" field.</summary>
    public const int RelatedSkillFieldNumber = 9;
    private string relatedSkill_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RelatedSkill {
      get { return relatedSkill_; }
      set {
        relatedSkill_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "section_amount" field.</summary>
    public const int SectionAmountFieldNumber = 10;
    private int sectionAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SectionAmount {
      get { return sectionAmount_; }
      set {
        sectionAmount_ = value;
      }
    }

    /// <summary>Field number for the "use_interval" field.</summary>
    public const int UseIntervalFieldNumber = 11;
    private int useInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UseInterval {
      get { return useInterval_; }
      set {
        useInterval_ = value;
      }
    }

    /// <summary>Field number for the "use_time_hint" field.</summary>
    public const int UseTimeHintFieldNumber = 12;
    private int useTimeHint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UseTimeHint {
      get { return useTimeHint_; }
      set {
        useTimeHint_ = value;
      }
    }

    /// <summary>Field number for the "ultra_energy" field.</summary>
    public const int UltraEnergyFieldNumber = 13;
    private int ultraEnergy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UltraEnergy {
      get { return ultraEnergy_; }
      set {
        ultraEnergy_ = value;
      }
    }

    /// <summary>Field number for the "check_c_d_restore" field.</summary>
    public const int CheckCDRestoreFieldNumber = 14;
    private bool checkCDRestore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CheckCDRestore {
      get { return checkCDRestore_; }
      set {
        checkCDRestore_ = value;
      }
    }

    /// <summary>Field number for the "force_run_finish" field.</summary>
    public const int ForceRunFinishFieldNumber = 15;
    private bool forceRunFinish_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForceRunFinish {
      get { return forceRunFinish_; }
      set {
        forceRunFinish_ = value;
      }
    }

    /// <summary>Field number for the "get_energy_limit" field.</summary>
    public const int GetEnergyLimitFieldNumber = 16;
    private int getEnergyLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GetEnergyLimit {
      get { return getEnergyLimit_; }
      set {
        getEnergyLimit_ = value;
      }
    }

    /// <summary>Field number for the "param1" field.</summary>
    public const int Param1FieldNumber = 17;
    private string param1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Param1 {
      get { return param1_; }
      set {
        param1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param2" field.</summary>
    public const int Param2FieldNumber = 18;
    private string param2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Param2 {
      get { return param2_; }
      set {
        param2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param3" field.</summary>
    public const int Param3FieldNumber = 19;
    private string param3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Param3 {
      get { return param3_; }
      set {
        param3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param4" field.</summary>
    public const int Param4FieldNumber = 20;
    private string param4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Param4 {
      get { return param4_; }
      set {
        param4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param5" field.</summary>
    public const int Param5FieldNumber = 21;
    private string param5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Param5 {
      get { return param5_; }
      set {
        param5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param6" field.</summary>
    public const int Param6FieldNumber = 22;
    private string param6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Param6 {
      get { return param6_; }
      set {
        param6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param7" field.</summary>
    public const int Param7FieldNumber = 23;
    private string param7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Param7 {
      get { return param7_; }
      set {
        param7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param8" field.</summary>
    public const int Param8FieldNumber = 24;
    private string param8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Param8 {
      get { return param8_; }
      set {
        param8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param9" field.</summary>
    public const int Param9FieldNumber = 25;
    private string param9_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Param9 {
      get { return param9_; }
      set {
        param9_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param10" field.</summary>
    public const int Param10FieldNumber = 26;
    private string param10_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Param10 {
      get { return param10_; }
      set {
        param10_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_clean_skill_c_d" field.</summary>
    public const int IsCleanSkillCDFieldNumber = 27;
    private bool isCleanSkillCD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCleanSkillCD {
      get { return isCleanSkillCD_; }
      set {
        isCleanSkillCD_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (FCPath != other.FCPath) return false;
      if (Type != other.Type) return false;
      if (Desc != other.Desc) return false;
      if (Icon != other.Icon) return false;
      if (SkillCD != other.SkillCD) return false;
      if (MaxLevel != other.MaxLevel) return false;
      if (RelatedSkill != other.RelatedSkill) return false;
      if (SectionAmount != other.SectionAmount) return false;
      if (UseInterval != other.UseInterval) return false;
      if (UseTimeHint != other.UseTimeHint) return false;
      if (UltraEnergy != other.UltraEnergy) return false;
      if (CheckCDRestore != other.CheckCDRestore) return false;
      if (ForceRunFinish != other.ForceRunFinish) return false;
      if (GetEnergyLimit != other.GetEnergyLimit) return false;
      if (Param1 != other.Param1) return false;
      if (Param2 != other.Param2) return false;
      if (Param3 != other.Param3) return false;
      if (Param4 != other.Param4) return false;
      if (Param5 != other.Param5) return false;
      if (Param6 != other.Param6) return false;
      if (Param7 != other.Param7) return false;
      if (Param8 != other.Param8) return false;
      if (Param9 != other.Param9) return false;
      if (Param10 != other.Param10) return false;
      if (IsCleanSkillCD != other.IsCleanSkillCD) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (FCPath.Length != 0) hash ^= FCPath.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (SkillCD != 0) hash ^= SkillCD.GetHashCode();
      if (MaxLevel != 0) hash ^= MaxLevel.GetHashCode();
      if (RelatedSkill.Length != 0) hash ^= RelatedSkill.GetHashCode();
      if (SectionAmount != 0) hash ^= SectionAmount.GetHashCode();
      if (UseInterval != 0) hash ^= UseInterval.GetHashCode();
      if (UseTimeHint != 0) hash ^= UseTimeHint.GetHashCode();
      if (UltraEnergy != 0) hash ^= UltraEnergy.GetHashCode();
      if (CheckCDRestore != false) hash ^= CheckCDRestore.GetHashCode();
      if (ForceRunFinish != false) hash ^= ForceRunFinish.GetHashCode();
      if (GetEnergyLimit != 0) hash ^= GetEnergyLimit.GetHashCode();
      if (Param1.Length != 0) hash ^= Param1.GetHashCode();
      if (Param2.Length != 0) hash ^= Param2.GetHashCode();
      if (Param3.Length != 0) hash ^= Param3.GetHashCode();
      if (Param4.Length != 0) hash ^= Param4.GetHashCode();
      if (Param5.Length != 0) hash ^= Param5.GetHashCode();
      if (Param6.Length != 0) hash ^= Param6.GetHashCode();
      if (Param7.Length != 0) hash ^= Param7.GetHashCode();
      if (Param8.Length != 0) hash ^= Param8.GetHashCode();
      if (Param9.Length != 0) hash ^= Param9.GetHashCode();
      if (Param10.Length != 0) hash ^= Param10.GetHashCode();
      if (IsCleanSkillCD != false) hash ^= IsCleanSkillCD.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (FCPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FCPath);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Desc);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Icon);
      }
      if (SkillCD != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SkillCD);
      }
      if (MaxLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MaxLevel);
      }
      if (RelatedSkill.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RelatedSkill);
      }
      if (SectionAmount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(SectionAmount);
      }
      if (UseInterval != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(UseInterval);
      }
      if (UseTimeHint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(UseTimeHint);
      }
      if (UltraEnergy != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(UltraEnergy);
      }
      if (CheckCDRestore != false) {
        output.WriteRawTag(112);
        output.WriteBool(CheckCDRestore);
      }
      if (ForceRunFinish != false) {
        output.WriteRawTag(120);
        output.WriteBool(ForceRunFinish);
      }
      if (GetEnergyLimit != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(GetEnergyLimit);
      }
      if (Param1.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Param1);
      }
      if (Param2.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Param2);
      }
      if (Param3.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Param3);
      }
      if (Param4.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Param4);
      }
      if (Param5.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Param5);
      }
      if (Param6.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Param6);
      }
      if (Param7.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Param7);
      }
      if (Param8.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(Param8);
      }
      if (Param9.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(Param9);
      }
      if (Param10.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(Param10);
      }
      if (IsCleanSkillCD != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(IsCleanSkillCD);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (FCPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FCPath);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Desc);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Icon);
      }
      if (SkillCD != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SkillCD);
      }
      if (MaxLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MaxLevel);
      }
      if (RelatedSkill.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RelatedSkill);
      }
      if (SectionAmount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(SectionAmount);
      }
      if (UseInterval != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(UseInterval);
      }
      if (UseTimeHint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(UseTimeHint);
      }
      if (UltraEnergy != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(UltraEnergy);
      }
      if (CheckCDRestore != false) {
        output.WriteRawTag(112);
        output.WriteBool(CheckCDRestore);
      }
      if (ForceRunFinish != false) {
        output.WriteRawTag(120);
        output.WriteBool(ForceRunFinish);
      }
      if (GetEnergyLimit != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(GetEnergyLimit);
      }
      if (Param1.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Param1);
      }
      if (Param2.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Param2);
      }
      if (Param3.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Param3);
      }
      if (Param4.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Param4);
      }
      if (Param5.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Param5);
      }
      if (Param6.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Param6);
      }
      if (Param7.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Param7);
      }
      if (Param8.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(Param8);
      }
      if (Param9.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(Param9);
      }
      if (Param10.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(Param10);
      }
      if (IsCleanSkillCD != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(IsCleanSkillCD);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (FCPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FCPath);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (SkillCD != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillCD);
      }
      if (MaxLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxLevel);
      }
      if (RelatedSkill.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelatedSkill);
      }
      if (SectionAmount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SectionAmount);
      }
      if (UseInterval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UseInterval);
      }
      if (UseTimeHint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UseTimeHint);
      }
      if (UltraEnergy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UltraEnergy);
      }
      if (CheckCDRestore != false) {
        size += 1 + 1;
      }
      if (ForceRunFinish != false) {
        size += 1 + 1;
      }
      if (GetEnergyLimit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GetEnergyLimit);
      }
      if (Param1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Param1);
      }
      if (Param2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Param2);
      }
      if (Param3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Param3);
      }
      if (Param4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Param4);
      }
      if (Param5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Param5);
      }
      if (Param6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Param6);
      }
      if (Param7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Param7);
      }
      if (Param8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Param8);
      }
      if (Param9.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Param9);
      }
      if (Param10.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Param10);
      }
      if (IsCleanSkillCD != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Skill other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.FCPath.Length != 0) {
        FCPath = other.FCPath;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.SkillCD != 0) {
        SkillCD = other.SkillCD;
      }
      if (other.MaxLevel != 0) {
        MaxLevel = other.MaxLevel;
      }
      if (other.RelatedSkill.Length != 0) {
        RelatedSkill = other.RelatedSkill;
      }
      if (other.SectionAmount != 0) {
        SectionAmount = other.SectionAmount;
      }
      if (other.UseInterval != 0) {
        UseInterval = other.UseInterval;
      }
      if (other.UseTimeHint != 0) {
        UseTimeHint = other.UseTimeHint;
      }
      if (other.UltraEnergy != 0) {
        UltraEnergy = other.UltraEnergy;
      }
      if (other.CheckCDRestore != false) {
        CheckCDRestore = other.CheckCDRestore;
      }
      if (other.ForceRunFinish != false) {
        ForceRunFinish = other.ForceRunFinish;
      }
      if (other.GetEnergyLimit != 0) {
        GetEnergyLimit = other.GetEnergyLimit;
      }
      if (other.Param1.Length != 0) {
        Param1 = other.Param1;
      }
      if (other.Param2.Length != 0) {
        Param2 = other.Param2;
      }
      if (other.Param3.Length != 0) {
        Param3 = other.Param3;
      }
      if (other.Param4.Length != 0) {
        Param4 = other.Param4;
      }
      if (other.Param5.Length != 0) {
        Param5 = other.Param5;
      }
      if (other.Param6.Length != 0) {
        Param6 = other.Param6;
      }
      if (other.Param7.Length != 0) {
        Param7 = other.Param7;
      }
      if (other.Param8.Length != 0) {
        Param8 = other.Param8;
      }
      if (other.Param9.Length != 0) {
        Param9 = other.Param9;
      }
      if (other.Param10.Length != 0) {
        Param10 = other.Param10;
      }
      if (other.IsCleanSkillCD != false) {
        IsCleanSkillCD = other.IsCleanSkillCD;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            FCPath = input.ReadString();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 42: {
            Desc = input.ReadString();
            break;
          }
          case 50: {
            Icon = input.ReadString();
            break;
          }
          case 56: {
            SkillCD = input.ReadInt32();
            break;
          }
          case 64: {
            MaxLevel = input.ReadInt32();
            break;
          }
          case 74: {
            RelatedSkill = input.ReadString();
            break;
          }
          case 80: {
            SectionAmount = input.ReadInt32();
            break;
          }
          case 88: {
            UseInterval = input.ReadInt32();
            break;
          }
          case 96: {
            UseTimeHint = input.ReadInt32();
            break;
          }
          case 104: {
            UltraEnergy = input.ReadInt32();
            break;
          }
          case 112: {
            CheckCDRestore = input.ReadBool();
            break;
          }
          case 120: {
            ForceRunFinish = input.ReadBool();
            break;
          }
          case 128: {
            GetEnergyLimit = input.ReadInt32();
            break;
          }
          case 138: {
            Param1 = input.ReadString();
            break;
          }
          case 146: {
            Param2 = input.ReadString();
            break;
          }
          case 154: {
            Param3 = input.ReadString();
            break;
          }
          case 162: {
            Param4 = input.ReadString();
            break;
          }
          case 170: {
            Param5 = input.ReadString();
            break;
          }
          case 178: {
            Param6 = input.ReadString();
            break;
          }
          case 186: {
            Param7 = input.ReadString();
            break;
          }
          case 194: {
            Param8 = input.ReadString();
            break;
          }
          case 202: {
            Param9 = input.ReadString();
            break;
          }
          case 210: {
            Param10 = input.ReadString();
            break;
          }
          case 216: {
            IsCleanSkillCD = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            FCPath = input.ReadString();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 42: {
            Desc = input.ReadString();
            break;
          }
          case 50: {
            Icon = input.ReadString();
            break;
          }
          case 56: {
            SkillCD = input.ReadInt32();
            break;
          }
          case 64: {
            MaxLevel = input.ReadInt32();
            break;
          }
          case 74: {
            RelatedSkill = input.ReadString();
            break;
          }
          case 80: {
            SectionAmount = input.ReadInt32();
            break;
          }
          case 88: {
            UseInterval = input.ReadInt32();
            break;
          }
          case 96: {
            UseTimeHint = input.ReadInt32();
            break;
          }
          case 104: {
            UltraEnergy = input.ReadInt32();
            break;
          }
          case 112: {
            CheckCDRestore = input.ReadBool();
            break;
          }
          case 120: {
            ForceRunFinish = input.ReadBool();
            break;
          }
          case 128: {
            GetEnergyLimit = input.ReadInt32();
            break;
          }
          case 138: {
            Param1 = input.ReadString();
            break;
          }
          case 146: {
            Param2 = input.ReadString();
            break;
          }
          case 154: {
            Param3 = input.ReadString();
            break;
          }
          case 162: {
            Param4 = input.ReadString();
            break;
          }
          case 170: {
            Param5 = input.ReadString();
            break;
          }
          case 178: {
            Param6 = input.ReadString();
            break;
          }
          case 186: {
            Param7 = input.ReadString();
            break;
          }
          case 194: {
            Param8 = input.ReadString();
            break;
          }
          case 202: {
            Param9 = input.ReadString();
            break;
          }
          case 210: {
            Param10 = input.ReadString();
            break;
          }
          case 216: {
            IsCleanSkillCD = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
