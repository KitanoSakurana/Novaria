// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MonsterBornGroup.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from MonsterBornGroup.proto</summary>
  public static partial class MonsterBornGroupReflection {

    #region Descriptor
    /// <summary>File descriptor for MonsterBornGroup.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MonsterBornGroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZNb25zdGVyQm9ybkdyb3VwLnByb3RvInIKEE1vbnN0ZXJCb3JuR3JvdXAS",
            "EAoIZ3JvdXBfaWQYASABKAUSEgoKbW9uc3Rlcl9pZBgCIAEoBRISCgpkaWZm",
            "aWN1bHR5GAMgASgFEhEKCW1pbl9mbG9vchgEIAEoBRIRCgltYXhfZmxvb3IY",
            "BSABKAVCDqoCC05vdmEuQ2xpZW50YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.MonsterBornGroup), global::Nova.Client.MonsterBornGroup.Parser, new[]{ "GroupId", "MonsterId", "Difficulty", "MinFloor", "MaxFloor" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MonsterBornGroup : pb::IMessage<MonsterBornGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonsterBornGroup> _parser = new pb::MessageParser<MonsterBornGroup>(() => new MonsterBornGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MonsterBornGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.MonsterBornGroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterBornGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterBornGroup(MonsterBornGroup other) : this() {
      groupId_ = other.groupId_;
      monsterId_ = other.monsterId_;
      difficulty_ = other.difficulty_;
      minFloor_ = other.minFloor_;
      maxFloor_ = other.maxFloor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterBornGroup Clone() {
      return new MonsterBornGroup(this);
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private int groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "monster_id" field.</summary>
    public const int MonsterIdFieldNumber = 2;
    private int monsterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MonsterId {
      get { return monsterId_; }
      set {
        monsterId_ = value;
      }
    }

    /// <summary>Field number for the "difficulty" field.</summary>
    public const int DifficultyFieldNumber = 3;
    private int difficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Difficulty {
      get { return difficulty_; }
      set {
        difficulty_ = value;
      }
    }

    /// <summary>Field number for the "min_floor" field.</summary>
    public const int MinFloorFieldNumber = 4;
    private int minFloor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinFloor {
      get { return minFloor_; }
      set {
        minFloor_ = value;
      }
    }

    /// <summary>Field number for the "max_floor" field.</summary>
    public const int MaxFloorFieldNumber = 5;
    private int maxFloor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxFloor {
      get { return maxFloor_; }
      set {
        maxFloor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MonsterBornGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MonsterBornGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if (MonsterId != other.MonsterId) return false;
      if (Difficulty != other.Difficulty) return false;
      if (MinFloor != other.MinFloor) return false;
      if (MaxFloor != other.MaxFloor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (MonsterId != 0) hash ^= MonsterId.GetHashCode();
      if (Difficulty != 0) hash ^= Difficulty.GetHashCode();
      if (MinFloor != 0) hash ^= MinFloor.GetHashCode();
      if (MaxFloor != 0) hash ^= MaxFloor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroupId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GroupId);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MonsterId);
      }
      if (Difficulty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Difficulty);
      }
      if (MinFloor != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinFloor);
      }
      if (MaxFloor != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxFloor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroupId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GroupId);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MonsterId);
      }
      if (Difficulty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Difficulty);
      }
      if (MinFloor != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinFloor);
      }
      if (MaxFloor != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxFloor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
      }
      if (MonsterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterId);
      }
      if (Difficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Difficulty);
      }
      if (MinFloor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinFloor);
      }
      if (MaxFloor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxFloor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MonsterBornGroup other) {
      if (other == null) {
        return;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      if (other.MonsterId != 0) {
        MonsterId = other.MonsterId;
      }
      if (other.Difficulty != 0) {
        Difficulty = other.Difficulty;
      }
      if (other.MinFloor != 0) {
        MinFloor = other.MinFloor;
      }
      if (other.MaxFloor != 0) {
        MaxFloor = other.MaxFloor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GroupId = input.ReadInt32();
            break;
          }
          case 16: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 24: {
            Difficulty = input.ReadInt32();
            break;
          }
          case 32: {
            MinFloor = input.ReadInt32();
            break;
          }
          case 40: {
            MaxFloor = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GroupId = input.ReadInt32();
            break;
          }
          case 16: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 24: {
            Difficulty = input.ReadInt32();
            break;
          }
          case 32: {
            MinFloor = input.ReadInt32();
            break;
          }
          case 40: {
            MaxFloor = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
