// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: DictionaryEntry.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from DictionaryEntry.proto</summary>
  public static partial class DictionaryEntryReflection {

    #region Descriptor
    /// <summary>File descriptor for DictionaryEntry.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DictionaryEntryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVEaWN0aW9uYXJ5RW50cnkucHJvdG8imQEKD0RpY3Rpb25hcnlFbnRyeRIK",
            "CgJpZBgBIAEoBRINCgVpbmRleBgCIAEoBRINCgV0aXRsZRgDIAEoCRILCgN0",
            "YWIYBCABKAUSDwoHaXRlbV9pZBgFIAEoBRILCgNxdHkYBiABKAUSFAoMZGlh",
            "Z3JhbV9saXN0GAcgAygFEgwKBHNvcnQYCCABKAUSDQoFcG9wdXAYCSABKAhC",
            "DqoCC05vdmEuQ2xpZW50YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.DictionaryEntry), global::Nova.Client.DictionaryEntry.Parser, new[]{ "Id", "Index", "Title", "Tab", "ItemId", "Qty", "DiagramList", "Sort", "Popup" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DictionaryEntry : pb::IMessage<DictionaryEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DictionaryEntry> _parser = new pb::MessageParser<DictionaryEntry>(() => new DictionaryEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DictionaryEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.DictionaryEntryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DictionaryEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DictionaryEntry(DictionaryEntry other) : this() {
      id_ = other.id_;
      index_ = other.index_;
      title_ = other.title_;
      tab_ = other.tab_;
      itemId_ = other.itemId_;
      qty_ = other.qty_;
      diagramList_ = other.diagramList_.Clone();
      sort_ = other.sort_;
      popup_ = other.popup_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DictionaryEntry Clone() {
      return new DictionaryEntry(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tab" field.</summary>
    public const int TabFieldNumber = 4;
    private int tab_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tab {
      get { return tab_; }
      set {
        tab_ = value;
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 5;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "qty" field.</summary>
    public const int QtyFieldNumber = 6;
    private int qty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Qty {
      get { return qty_; }
      set {
        qty_ = value;
      }
    }

    /// <summary>Field number for the "diagram_list" field.</summary>
    public const int DiagramListFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_diagramList_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> diagramList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> DiagramList {
      get { return diagramList_; }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 8;
    private int sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "popup" field.</summary>
    public const int PopupFieldNumber = 9;
    private bool popup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Popup {
      get { return popup_; }
      set {
        popup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DictionaryEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DictionaryEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Index != other.Index) return false;
      if (Title != other.Title) return false;
      if (Tab != other.Tab) return false;
      if (ItemId != other.ItemId) return false;
      if (Qty != other.Qty) return false;
      if(!diagramList_.Equals(other.diagramList_)) return false;
      if (Sort != other.Sort) return false;
      if (Popup != other.Popup) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Tab != 0) hash ^= Tab.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (Qty != 0) hash ^= Qty.GetHashCode();
      hash ^= diagramList_.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (Popup != false) hash ^= Popup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (Tab != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Tab);
      }
      if (ItemId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ItemId);
      }
      if (Qty != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Qty);
      }
      diagramList_.WriteTo(output, _repeated_diagramList_codec);
      if (Sort != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Sort);
      }
      if (Popup != false) {
        output.WriteRawTag(72);
        output.WriteBool(Popup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (Tab != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Tab);
      }
      if (ItemId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ItemId);
      }
      if (Qty != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Qty);
      }
      diagramList_.WriteTo(ref output, _repeated_diagramList_codec);
      if (Sort != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Sort);
      }
      if (Popup != false) {
        output.WriteRawTag(72);
        output.WriteBool(Popup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Tab != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tab);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (Qty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Qty);
      }
      size += diagramList_.CalculateSize(_repeated_diagramList_codec);
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (Popup != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DictionaryEntry other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Tab != 0) {
        Tab = other.Tab;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.Qty != 0) {
        Qty = other.Qty;
      }
      diagramList_.Add(other.diagramList_);
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.Popup != false) {
        Popup = other.Popup;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 32: {
            Tab = input.ReadInt32();
            break;
          }
          case 40: {
            ItemId = input.ReadInt32();
            break;
          }
          case 48: {
            Qty = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            diagramList_.AddEntriesFrom(input, _repeated_diagramList_codec);
            break;
          }
          case 64: {
            Sort = input.ReadInt32();
            break;
          }
          case 72: {
            Popup = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 32: {
            Tab = input.ReadInt32();
            break;
          }
          case 40: {
            ItemId = input.ReadInt32();
            break;
          }
          case 48: {
            Qty = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            diagramList_.AddEntriesFrom(ref input, _repeated_diagramList_codec);
            break;
          }
          case 64: {
            Sort = input.ReadInt32();
            break;
          }
          case 72: {
            Popup = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
