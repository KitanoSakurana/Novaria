// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CharacterSkin.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from CharacterSkin.proto</summary>
  public static partial class CharacterSkinReflection {

    #region Descriptor
    /// <summary>File descriptor for CharacterSkin.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CharacterSkinReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNDaGFyYWN0ZXJTa2luLnByb3RvItwECg1DaGFyYWN0ZXJTa2luEgoKAmlk",
            "GAEgASgFEgwKBG5hbWUYAiABKAkSDAoEZGVzYxgDIAEoCRIPCgdpc19zaG93",
            "GAQgASgIEg8KB2NoYXJfaWQYBSABKAUSDAoEdHlwZRgGIAEoBRITCgtzb3Vy",
            "Y2VfZGVzYxgHIAEoBRIRCgl0cmFuc2Zvcm0YCCABKAkSGgoSd2Fsa19hbmlt",
            "YXRpb25fc3BkGAkgASgFEhkKEXJ1bl9hbmltYXRpb25fc3BkGAogASgFEhwK",
            "FHNwX3J1bl9hbmltYXRpb25fc3BkGAsgASgFEhMKC21vZGVsX3NjYWxlGAwg",
            "ASgFEhYKDmNvbGxpZGVyX3NjYWxlGA0gASgFEhgKEG1vZGVsX3Nob3dfc2Nh",
            "bGUYDiABKAUSFwoPbW9kZWxfZW5kX3NjYWxlGA8gASgFEhsKE2ZvcmJpZGRl",
            "bl9iZWhpdF9yb3QYECABKAgSDAoEaWNvbhgRIAEoCRIQCghwb3J0cmFpdBgS",
            "IAEoCRIKCgJiZxgTIAEoCRIOCgZvZmZzZXQYFCABKAkSDAoEbDJfZBgVIAEo",
            "CRIVCg1jaGFyYWN0ZXJfY19nGBYgASgFEg0KBW1vZGVsGBcgASgJEhIKCm1v",
            "ZGVsX3Nob3cYGCABKAkSEQoJbW9kZWxfZW5kGBkgASgJEhIKCmdhY2hhX2wy",
            "X2QYGiABKAkSEgoKc2tpbl90aGVtZRgbIAEoBRIaChJlZmZlY3Rfc2NhbGVf",
            "dmFsdWUYHCABKAUSHgoWdGFnX2VmZmVjdF9zY2FsZV92YWx1ZRgdIAEoBUIO",
            "qgILTm92YS5DbGllbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.CharacterSkin), global::Nova.Client.CharacterSkin.Parser, new[]{ "Id", "Name", "Desc", "IsShow", "CharId", "Type", "SourceDesc", "Transform", "WalkAnimationSpd", "RunAnimationSpd", "SpRunAnimationSpd", "ModelScale", "ColliderScale", "ModelShowScale", "ModelEndScale", "ForbiddenBehitRot", "Icon", "Portrait", "Bg", "Offset", "L2D", "CharacterCG", "Model", "ModelShow", "ModelEnd", "GachaL2D", "SkinTheme", "EffectScaleValue", "TagEffectScaleValue" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CharacterSkin : pb::IMessage<CharacterSkin>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterSkin> _parser = new pb::MessageParser<CharacterSkin>(() => new CharacterSkin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CharacterSkin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.CharacterSkinReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterSkin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterSkin(CharacterSkin other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      desc_ = other.desc_;
      isShow_ = other.isShow_;
      charId_ = other.charId_;
      type_ = other.type_;
      sourceDesc_ = other.sourceDesc_;
      transform_ = other.transform_;
      walkAnimationSpd_ = other.walkAnimationSpd_;
      runAnimationSpd_ = other.runAnimationSpd_;
      spRunAnimationSpd_ = other.spRunAnimationSpd_;
      modelScale_ = other.modelScale_;
      colliderScale_ = other.colliderScale_;
      modelShowScale_ = other.modelShowScale_;
      modelEndScale_ = other.modelEndScale_;
      forbiddenBehitRot_ = other.forbiddenBehitRot_;
      icon_ = other.icon_;
      portrait_ = other.portrait_;
      bg_ = other.bg_;
      offset_ = other.offset_;
      l2D_ = other.l2D_;
      characterCG_ = other.characterCG_;
      model_ = other.model_;
      modelShow_ = other.modelShow_;
      modelEnd_ = other.modelEnd_;
      gachaL2D_ = other.gachaL2D_;
      skinTheme_ = other.skinTheme_;
      effectScaleValue_ = other.effectScaleValue_;
      tagEffectScaleValue_ = other.tagEffectScaleValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterSkin Clone() {
      return new CharacterSkin(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_show" field.</summary>
    public const int IsShowFieldNumber = 4;
    private bool isShow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsShow {
      get { return isShow_; }
      set {
        isShow_ = value;
      }
    }

    /// <summary>Field number for the "char_id" field.</summary>
    public const int CharIdFieldNumber = 5;
    private int charId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CharId {
      get { return charId_; }
      set {
        charId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 6;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "source_desc" field.</summary>
    public const int SourceDescFieldNumber = 7;
    private int sourceDesc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SourceDesc {
      get { return sourceDesc_; }
      set {
        sourceDesc_ = value;
      }
    }

    /// <summary>Field number for the "transform" field.</summary>
    public const int TransformFieldNumber = 8;
    private string transform_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Transform {
      get { return transform_; }
      set {
        transform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "walk_animation_spd" field.</summary>
    public const int WalkAnimationSpdFieldNumber = 9;
    private int walkAnimationSpd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WalkAnimationSpd {
      get { return walkAnimationSpd_; }
      set {
        walkAnimationSpd_ = value;
      }
    }

    /// <summary>Field number for the "run_animation_spd" field.</summary>
    public const int RunAnimationSpdFieldNumber = 10;
    private int runAnimationSpd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RunAnimationSpd {
      get { return runAnimationSpd_; }
      set {
        runAnimationSpd_ = value;
      }
    }

    /// <summary>Field number for the "sp_run_animation_spd" field.</summary>
    public const int SpRunAnimationSpdFieldNumber = 11;
    private int spRunAnimationSpd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpRunAnimationSpd {
      get { return spRunAnimationSpd_; }
      set {
        spRunAnimationSpd_ = value;
      }
    }

    /// <summary>Field number for the "model_scale" field.</summary>
    public const int ModelScaleFieldNumber = 12;
    private int modelScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ModelScale {
      get { return modelScale_; }
      set {
        modelScale_ = value;
      }
    }

    /// <summary>Field number for the "collider_scale" field.</summary>
    public const int ColliderScaleFieldNumber = 13;
    private int colliderScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ColliderScale {
      get { return colliderScale_; }
      set {
        colliderScale_ = value;
      }
    }

    /// <summary>Field number for the "model_show_scale" field.</summary>
    public const int ModelShowScaleFieldNumber = 14;
    private int modelShowScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ModelShowScale {
      get { return modelShowScale_; }
      set {
        modelShowScale_ = value;
      }
    }

    /// <summary>Field number for the "model_end_scale" field.</summary>
    public const int ModelEndScaleFieldNumber = 15;
    private int modelEndScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ModelEndScale {
      get { return modelEndScale_; }
      set {
        modelEndScale_ = value;
      }
    }

    /// <summary>Field number for the "forbidden_behit_rot" field.</summary>
    public const int ForbiddenBehitRotFieldNumber = 16;
    private bool forbiddenBehitRot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForbiddenBehitRot {
      get { return forbiddenBehitRot_; }
      set {
        forbiddenBehitRot_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 17;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "portrait" field.</summary>
    public const int PortraitFieldNumber = 18;
    private string portrait_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Portrait {
      get { return portrait_; }
      set {
        portrait_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bg" field.</summary>
    public const int BgFieldNumber = 19;
    private string bg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Bg {
      get { return bg_; }
      set {
        bg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 20;
    private string offset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Offset {
      get { return offset_; }
      set {
        offset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "l2_d" field.</summary>
    public const int L2DFieldNumber = 21;
    private string l2D_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string L2D {
      get { return l2D_; }
      set {
        l2D_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "character_c_g" field.</summary>
    public const int CharacterCGFieldNumber = 22;
    private int characterCG_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CharacterCG {
      get { return characterCG_; }
      set {
        characterCG_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 23;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_show" field.</summary>
    public const int ModelShowFieldNumber = 24;
    private string modelShow_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelShow {
      get { return modelShow_; }
      set {
        modelShow_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_end" field.</summary>
    public const int ModelEndFieldNumber = 25;
    private string modelEnd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelEnd {
      get { return modelEnd_; }
      set {
        modelEnd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gacha_l2_d" field.</summary>
    public const int GachaL2DFieldNumber = 26;
    private string gachaL2D_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GachaL2D {
      get { return gachaL2D_; }
      set {
        gachaL2D_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skin_theme" field.</summary>
    public const int SkinThemeFieldNumber = 27;
    private int skinTheme_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkinTheme {
      get { return skinTheme_; }
      set {
        skinTheme_ = value;
      }
    }

    /// <summary>Field number for the "effect_scale_value" field.</summary>
    public const int EffectScaleValueFieldNumber = 28;
    private int effectScaleValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectScaleValue {
      get { return effectScaleValue_; }
      set {
        effectScaleValue_ = value;
      }
    }

    /// <summary>Field number for the "tag_effect_scale_value" field.</summary>
    public const int TagEffectScaleValueFieldNumber = 29;
    private int tagEffectScaleValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TagEffectScaleValue {
      get { return tagEffectScaleValue_; }
      set {
        tagEffectScaleValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CharacterSkin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CharacterSkin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if (IsShow != other.IsShow) return false;
      if (CharId != other.CharId) return false;
      if (Type != other.Type) return false;
      if (SourceDesc != other.SourceDesc) return false;
      if (Transform != other.Transform) return false;
      if (WalkAnimationSpd != other.WalkAnimationSpd) return false;
      if (RunAnimationSpd != other.RunAnimationSpd) return false;
      if (SpRunAnimationSpd != other.SpRunAnimationSpd) return false;
      if (ModelScale != other.ModelScale) return false;
      if (ColliderScale != other.ColliderScale) return false;
      if (ModelShowScale != other.ModelShowScale) return false;
      if (ModelEndScale != other.ModelEndScale) return false;
      if (ForbiddenBehitRot != other.ForbiddenBehitRot) return false;
      if (Icon != other.Icon) return false;
      if (Portrait != other.Portrait) return false;
      if (Bg != other.Bg) return false;
      if (Offset != other.Offset) return false;
      if (L2D != other.L2D) return false;
      if (CharacterCG != other.CharacterCG) return false;
      if (Model != other.Model) return false;
      if (ModelShow != other.ModelShow) return false;
      if (ModelEnd != other.ModelEnd) return false;
      if (GachaL2D != other.GachaL2D) return false;
      if (SkinTheme != other.SkinTheme) return false;
      if (EffectScaleValue != other.EffectScaleValue) return false;
      if (TagEffectScaleValue != other.TagEffectScaleValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (IsShow != false) hash ^= IsShow.GetHashCode();
      if (CharId != 0) hash ^= CharId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (SourceDesc != 0) hash ^= SourceDesc.GetHashCode();
      if (Transform.Length != 0) hash ^= Transform.GetHashCode();
      if (WalkAnimationSpd != 0) hash ^= WalkAnimationSpd.GetHashCode();
      if (RunAnimationSpd != 0) hash ^= RunAnimationSpd.GetHashCode();
      if (SpRunAnimationSpd != 0) hash ^= SpRunAnimationSpd.GetHashCode();
      if (ModelScale != 0) hash ^= ModelScale.GetHashCode();
      if (ColliderScale != 0) hash ^= ColliderScale.GetHashCode();
      if (ModelShowScale != 0) hash ^= ModelShowScale.GetHashCode();
      if (ModelEndScale != 0) hash ^= ModelEndScale.GetHashCode();
      if (ForbiddenBehitRot != false) hash ^= ForbiddenBehitRot.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Portrait.Length != 0) hash ^= Portrait.GetHashCode();
      if (Bg.Length != 0) hash ^= Bg.GetHashCode();
      if (Offset.Length != 0) hash ^= Offset.GetHashCode();
      if (L2D.Length != 0) hash ^= L2D.GetHashCode();
      if (CharacterCG != 0) hash ^= CharacterCG.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (ModelShow.Length != 0) hash ^= ModelShow.GetHashCode();
      if (ModelEnd.Length != 0) hash ^= ModelEnd.GetHashCode();
      if (GachaL2D.Length != 0) hash ^= GachaL2D.GetHashCode();
      if (SkinTheme != 0) hash ^= SkinTheme.GetHashCode();
      if (EffectScaleValue != 0) hash ^= EffectScaleValue.GetHashCode();
      if (TagEffectScaleValue != 0) hash ^= TagEffectScaleValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (IsShow != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsShow);
      }
      if (CharId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CharId);
      }
      if (Type != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Type);
      }
      if (SourceDesc != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SourceDesc);
      }
      if (Transform.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Transform);
      }
      if (WalkAnimationSpd != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(WalkAnimationSpd);
      }
      if (RunAnimationSpd != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RunAnimationSpd);
      }
      if (SpRunAnimationSpd != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(SpRunAnimationSpd);
      }
      if (ModelScale != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ModelScale);
      }
      if (ColliderScale != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(ColliderScale);
      }
      if (ModelShowScale != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ModelShowScale);
      }
      if (ModelEndScale != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(ModelEndScale);
      }
      if (ForbiddenBehitRot != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(ForbiddenBehitRot);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Icon);
      }
      if (Portrait.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Portrait);
      }
      if (Bg.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Bg);
      }
      if (Offset.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Offset);
      }
      if (L2D.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(L2D);
      }
      if (CharacterCG != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(CharacterCG);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Model);
      }
      if (ModelShow.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(ModelShow);
      }
      if (ModelEnd.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ModelEnd);
      }
      if (GachaL2D.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(GachaL2D);
      }
      if (SkinTheme != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(SkinTheme);
      }
      if (EffectScaleValue != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(EffectScaleValue);
      }
      if (TagEffectScaleValue != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(TagEffectScaleValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (IsShow != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsShow);
      }
      if (CharId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CharId);
      }
      if (Type != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Type);
      }
      if (SourceDesc != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SourceDesc);
      }
      if (Transform.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Transform);
      }
      if (WalkAnimationSpd != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(WalkAnimationSpd);
      }
      if (RunAnimationSpd != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RunAnimationSpd);
      }
      if (SpRunAnimationSpd != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(SpRunAnimationSpd);
      }
      if (ModelScale != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ModelScale);
      }
      if (ColliderScale != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(ColliderScale);
      }
      if (ModelShowScale != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ModelShowScale);
      }
      if (ModelEndScale != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(ModelEndScale);
      }
      if (ForbiddenBehitRot != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(ForbiddenBehitRot);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Icon);
      }
      if (Portrait.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Portrait);
      }
      if (Bg.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Bg);
      }
      if (Offset.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Offset);
      }
      if (L2D.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(L2D);
      }
      if (CharacterCG != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(CharacterCG);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Model);
      }
      if (ModelShow.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(ModelShow);
      }
      if (ModelEnd.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ModelEnd);
      }
      if (GachaL2D.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(GachaL2D);
      }
      if (SkinTheme != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(SkinTheme);
      }
      if (EffectScaleValue != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(EffectScaleValue);
      }
      if (TagEffectScaleValue != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(TagEffectScaleValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (IsShow != false) {
        size += 1 + 1;
      }
      if (CharId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (SourceDesc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SourceDesc);
      }
      if (Transform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Transform);
      }
      if (WalkAnimationSpd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WalkAnimationSpd);
      }
      if (RunAnimationSpd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RunAnimationSpd);
      }
      if (SpRunAnimationSpd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpRunAnimationSpd);
      }
      if (ModelScale != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelScale);
      }
      if (ColliderScale != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColliderScale);
      }
      if (ModelShowScale != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelShowScale);
      }
      if (ModelEndScale != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelEndScale);
      }
      if (ForbiddenBehitRot != false) {
        size += 2 + 1;
      }
      if (Icon.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Portrait.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Portrait);
      }
      if (Bg.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Bg);
      }
      if (Offset.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Offset);
      }
      if (L2D.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(L2D);
      }
      if (CharacterCG != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CharacterCG);
      }
      if (Model.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (ModelShow.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModelShow);
      }
      if (ModelEnd.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModelEnd);
      }
      if (GachaL2D.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GachaL2D);
      }
      if (SkinTheme != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SkinTheme);
      }
      if (EffectScaleValue != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectScaleValue);
      }
      if (TagEffectScaleValue != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TagEffectScaleValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CharacterSkin other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.IsShow != false) {
        IsShow = other.IsShow;
      }
      if (other.CharId != 0) {
        CharId = other.CharId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.SourceDesc != 0) {
        SourceDesc = other.SourceDesc;
      }
      if (other.Transform.Length != 0) {
        Transform = other.Transform;
      }
      if (other.WalkAnimationSpd != 0) {
        WalkAnimationSpd = other.WalkAnimationSpd;
      }
      if (other.RunAnimationSpd != 0) {
        RunAnimationSpd = other.RunAnimationSpd;
      }
      if (other.SpRunAnimationSpd != 0) {
        SpRunAnimationSpd = other.SpRunAnimationSpd;
      }
      if (other.ModelScale != 0) {
        ModelScale = other.ModelScale;
      }
      if (other.ColliderScale != 0) {
        ColliderScale = other.ColliderScale;
      }
      if (other.ModelShowScale != 0) {
        ModelShowScale = other.ModelShowScale;
      }
      if (other.ModelEndScale != 0) {
        ModelEndScale = other.ModelEndScale;
      }
      if (other.ForbiddenBehitRot != false) {
        ForbiddenBehitRot = other.ForbiddenBehitRot;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Portrait.Length != 0) {
        Portrait = other.Portrait;
      }
      if (other.Bg.Length != 0) {
        Bg = other.Bg;
      }
      if (other.Offset.Length != 0) {
        Offset = other.Offset;
      }
      if (other.L2D.Length != 0) {
        L2D = other.L2D;
      }
      if (other.CharacterCG != 0) {
        CharacterCG = other.CharacterCG;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.ModelShow.Length != 0) {
        ModelShow = other.ModelShow;
      }
      if (other.ModelEnd.Length != 0) {
        ModelEnd = other.ModelEnd;
      }
      if (other.GachaL2D.Length != 0) {
        GachaL2D = other.GachaL2D;
      }
      if (other.SkinTheme != 0) {
        SkinTheme = other.SkinTheme;
      }
      if (other.EffectScaleValue != 0) {
        EffectScaleValue = other.EffectScaleValue;
      }
      if (other.TagEffectScaleValue != 0) {
        TagEffectScaleValue = other.TagEffectScaleValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 32: {
            IsShow = input.ReadBool();
            break;
          }
          case 40: {
            CharId = input.ReadInt32();
            break;
          }
          case 48: {
            Type = input.ReadInt32();
            break;
          }
          case 56: {
            SourceDesc = input.ReadInt32();
            break;
          }
          case 66: {
            Transform = input.ReadString();
            break;
          }
          case 72: {
            WalkAnimationSpd = input.ReadInt32();
            break;
          }
          case 80: {
            RunAnimationSpd = input.ReadInt32();
            break;
          }
          case 88: {
            SpRunAnimationSpd = input.ReadInt32();
            break;
          }
          case 96: {
            ModelScale = input.ReadInt32();
            break;
          }
          case 104: {
            ColliderScale = input.ReadInt32();
            break;
          }
          case 112: {
            ModelShowScale = input.ReadInt32();
            break;
          }
          case 120: {
            ModelEndScale = input.ReadInt32();
            break;
          }
          case 128: {
            ForbiddenBehitRot = input.ReadBool();
            break;
          }
          case 138: {
            Icon = input.ReadString();
            break;
          }
          case 146: {
            Portrait = input.ReadString();
            break;
          }
          case 154: {
            Bg = input.ReadString();
            break;
          }
          case 162: {
            Offset = input.ReadString();
            break;
          }
          case 170: {
            L2D = input.ReadString();
            break;
          }
          case 176: {
            CharacterCG = input.ReadInt32();
            break;
          }
          case 186: {
            Model = input.ReadString();
            break;
          }
          case 194: {
            ModelShow = input.ReadString();
            break;
          }
          case 202: {
            ModelEnd = input.ReadString();
            break;
          }
          case 210: {
            GachaL2D = input.ReadString();
            break;
          }
          case 216: {
            SkinTheme = input.ReadInt32();
            break;
          }
          case 224: {
            EffectScaleValue = input.ReadInt32();
            break;
          }
          case 232: {
            TagEffectScaleValue = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 32: {
            IsShow = input.ReadBool();
            break;
          }
          case 40: {
            CharId = input.ReadInt32();
            break;
          }
          case 48: {
            Type = input.ReadInt32();
            break;
          }
          case 56: {
            SourceDesc = input.ReadInt32();
            break;
          }
          case 66: {
            Transform = input.ReadString();
            break;
          }
          case 72: {
            WalkAnimationSpd = input.ReadInt32();
            break;
          }
          case 80: {
            RunAnimationSpd = input.ReadInt32();
            break;
          }
          case 88: {
            SpRunAnimationSpd = input.ReadInt32();
            break;
          }
          case 96: {
            ModelScale = input.ReadInt32();
            break;
          }
          case 104: {
            ColliderScale = input.ReadInt32();
            break;
          }
          case 112: {
            ModelShowScale = input.ReadInt32();
            break;
          }
          case 120: {
            ModelEndScale = input.ReadInt32();
            break;
          }
          case 128: {
            ForbiddenBehitRot = input.ReadBool();
            break;
          }
          case 138: {
            Icon = input.ReadString();
            break;
          }
          case 146: {
            Portrait = input.ReadString();
            break;
          }
          case 154: {
            Bg = input.ReadString();
            break;
          }
          case 162: {
            Offset = input.ReadString();
            break;
          }
          case 170: {
            L2D = input.ReadString();
            break;
          }
          case 176: {
            CharacterCG = input.ReadInt32();
            break;
          }
          case 186: {
            Model = input.ReadString();
            break;
          }
          case 194: {
            ModelShow = input.ReadString();
            break;
          }
          case 202: {
            ModelEnd = input.ReadString();
            break;
          }
          case 210: {
            GachaL2D = input.ReadString();
            break;
          }
          case 216: {
            SkinTheme = input.ReadInt32();
            break;
          }
          case 224: {
            EffectScaleValue = input.ReadInt32();
            break;
          }
          case 232: {
            TagEffectScaleValue = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
