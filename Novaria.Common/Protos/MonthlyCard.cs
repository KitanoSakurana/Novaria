// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MonthlyCard.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from MonthlyCard.proto</summary>
  public static partial class MonthlyCardReflection {

    #region Descriptor
    /// <summary>File descriptor for MonthlyCard.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MonthlyCardReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFNb250aGx5Q2FyZC5wcm90byJ8CgtNb250aGx5Q2FyZBIKCgJpZBgBIAEo",
            "BRIPCgdjYXJkX2lkGAIgASgFEhIKCnJld2FyZF9pZDEYAyABKAUSEwoLcmV3",
            "YXJkX251bTEYBCABKAUSEgoKcmV3YXJkX2lkMhgFIAEoBRITCgtyZXdhcmRf",
            "bnVtMhgGIAEoBUIOqgILTm92YS5DbGllbnRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.MonthlyCard), global::Nova.Client.MonthlyCard.Parser, new[]{ "Id", "CardId", "RewardId1", "RewardNum1", "RewardId2", "RewardNum2" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MonthlyCard : pb::IMessage<MonthlyCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonthlyCard> _parser = new pb::MessageParser<MonthlyCard>(() => new MonthlyCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MonthlyCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.MonthlyCardReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonthlyCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonthlyCard(MonthlyCard other) : this() {
      id_ = other.id_;
      cardId_ = other.cardId_;
      rewardId1_ = other.rewardId1_;
      rewardNum1_ = other.rewardNum1_;
      rewardId2_ = other.rewardId2_;
      rewardNum2_ = other.rewardNum2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonthlyCard Clone() {
      return new MonthlyCard(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "card_id" field.</summary>
    public const int CardIdFieldNumber = 2;
    private int cardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "reward_id1" field.</summary>
    public const int RewardId1FieldNumber = 3;
    private int rewardId1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardId1 {
      get { return rewardId1_; }
      set {
        rewardId1_ = value;
      }
    }

    /// <summary>Field number for the "reward_num1" field.</summary>
    public const int RewardNum1FieldNumber = 4;
    private int rewardNum1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardNum1 {
      get { return rewardNum1_; }
      set {
        rewardNum1_ = value;
      }
    }

    /// <summary>Field number for the "reward_id2" field.</summary>
    public const int RewardId2FieldNumber = 5;
    private int rewardId2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardId2 {
      get { return rewardId2_; }
      set {
        rewardId2_ = value;
      }
    }

    /// <summary>Field number for the "reward_num2" field.</summary>
    public const int RewardNum2FieldNumber = 6;
    private int rewardNum2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardNum2 {
      get { return rewardNum2_; }
      set {
        rewardNum2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MonthlyCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MonthlyCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CardId != other.CardId) return false;
      if (RewardId1 != other.RewardId1) return false;
      if (RewardNum1 != other.RewardNum1) return false;
      if (RewardId2 != other.RewardId2) return false;
      if (RewardNum2 != other.RewardNum2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (RewardId1 != 0) hash ^= RewardId1.GetHashCode();
      if (RewardNum1 != 0) hash ^= RewardNum1.GetHashCode();
      if (RewardId2 != 0) hash ^= RewardId2.GetHashCode();
      if (RewardNum2 != 0) hash ^= RewardNum2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CardId);
      }
      if (RewardId1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RewardId1);
      }
      if (RewardNum1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RewardNum1);
      }
      if (RewardId2 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RewardId2);
      }
      if (RewardNum2 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RewardNum2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CardId);
      }
      if (RewardId1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RewardId1);
      }
      if (RewardNum1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RewardNum1);
      }
      if (RewardId2 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RewardId2);
      }
      if (RewardNum2 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RewardNum2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardId);
      }
      if (RewardId1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardId1);
      }
      if (RewardNum1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardNum1);
      }
      if (RewardId2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardId2);
      }
      if (RewardNum2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardNum2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MonthlyCard other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.RewardId1 != 0) {
        RewardId1 = other.RewardId1;
      }
      if (other.RewardNum1 != 0) {
        RewardNum1 = other.RewardNum1;
      }
      if (other.RewardId2 != 0) {
        RewardId2 = other.RewardId2;
      }
      if (other.RewardNum2 != 0) {
        RewardNum2 = other.RewardNum2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CardId = input.ReadInt32();
            break;
          }
          case 24: {
            RewardId1 = input.ReadInt32();
            break;
          }
          case 32: {
            RewardNum1 = input.ReadInt32();
            break;
          }
          case 40: {
            RewardId2 = input.ReadInt32();
            break;
          }
          case 48: {
            RewardNum2 = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CardId = input.ReadInt32();
            break;
          }
          case 24: {
            RewardId1 = input.ReadInt32();
            break;
          }
          case 32: {
            RewardNum1 = input.ReadInt32();
            break;
          }
          case 40: {
            RewardId2 = input.ReadInt32();
            break;
          }
          case 48: {
            RewardNum2 = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
