// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MonsterAI.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from MonsterAI.proto</summary>
  public static partial class MonsterAIReflection {

    #region Descriptor
    /// <summary>File descriptor for MonsterAI.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MonsterAIReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9Nb25zdGVyQUkucHJvdG8i9QIKCU1vbnN0ZXJBSRIKCgJpZBgBIAEoBRIY",
            "ChBjb21ib19ncm91cF9wYXRoGAIgASgJEhsKE3NwYXduX3Nob3dfc2tpbGxf",
            "aWQYAyABKAUSGgoSaWRsZV9zaG93X3NraWxsX2lkGAQgASgFEhQKDGRpZV9z",
            "a2lsbF9pZBgFIAEoBRIXCg9hY3Rpb25fYV9pX3BhdGgYBiABKAkSGQoRYWN0",
            "aW9uX2JyYW5jaF9pZHMYByADKAUSFgoOdGhpbmtfaW50ZXJ2YWwYCCABKAUS",
            "FQoNaWRsZV9hX2lfcGF0aBgJIAEoCRIWCg5zcGF3bl9hX2lfcGF0aBgKIAEo",
            "CRIZChFwYXJhbGxlbF9hX2lfcGF0aBgLIAEoCRIZChFjaGVja19hY2hpZXZl",
            "bWVudBgMIAEoCBIUCgx3YW5kZXJfcmFuZ2UYDSABKAUSFwoPd2FuZGVyX2lu",
            "dGVydmFsGA4gASgFEhMKC3dhbmRlcl9yYXRlGA8gASgFQg6qAgtOb3ZhLkNs",
            "aWVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.MonsterAI), global::Nova.Client.MonsterAI.Parser, new[]{ "Id", "ComboGroupPath", "SpawnShowSkillId", "IdleShowSkillId", "DieSkillId", "ActionAIPath", "ActionBranchIds", "ThinkInterval", "IdleAIPath", "SpawnAIPath", "ParallelAIPath", "CheckAchievement", "WanderRange", "WanderInterval", "WanderRate" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MonsterAI : pb::IMessage<MonsterAI>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonsterAI> _parser = new pb::MessageParser<MonsterAI>(() => new MonsterAI());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MonsterAI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.MonsterAIReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterAI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterAI(MonsterAI other) : this() {
      id_ = other.id_;
      comboGroupPath_ = other.comboGroupPath_;
      spawnShowSkillId_ = other.spawnShowSkillId_;
      idleShowSkillId_ = other.idleShowSkillId_;
      dieSkillId_ = other.dieSkillId_;
      actionAIPath_ = other.actionAIPath_;
      actionBranchIds_ = other.actionBranchIds_.Clone();
      thinkInterval_ = other.thinkInterval_;
      idleAIPath_ = other.idleAIPath_;
      spawnAIPath_ = other.spawnAIPath_;
      parallelAIPath_ = other.parallelAIPath_;
      checkAchievement_ = other.checkAchievement_;
      wanderRange_ = other.wanderRange_;
      wanderInterval_ = other.wanderInterval_;
      wanderRate_ = other.wanderRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterAI Clone() {
      return new MonsterAI(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "combo_group_path" field.</summary>
    public const int ComboGroupPathFieldNumber = 2;
    private string comboGroupPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ComboGroupPath {
      get { return comboGroupPath_; }
      set {
        comboGroupPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spawn_show_skill_id" field.</summary>
    public const int SpawnShowSkillIdFieldNumber = 3;
    private int spawnShowSkillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpawnShowSkillId {
      get { return spawnShowSkillId_; }
      set {
        spawnShowSkillId_ = value;
      }
    }

    /// <summary>Field number for the "idle_show_skill_id" field.</summary>
    public const int IdleShowSkillIdFieldNumber = 4;
    private int idleShowSkillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IdleShowSkillId {
      get { return idleShowSkillId_; }
      set {
        idleShowSkillId_ = value;
      }
    }

    /// <summary>Field number for the "die_skill_id" field.</summary>
    public const int DieSkillIdFieldNumber = 5;
    private int dieSkillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DieSkillId {
      get { return dieSkillId_; }
      set {
        dieSkillId_ = value;
      }
    }

    /// <summary>Field number for the "action_a_i_path" field.</summary>
    public const int ActionAIPathFieldNumber = 6;
    private string actionAIPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActionAIPath {
      get { return actionAIPath_; }
      set {
        actionAIPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "action_branch_ids" field.</summary>
    public const int ActionBranchIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_actionBranchIds_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> actionBranchIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ActionBranchIds {
      get { return actionBranchIds_; }
    }

    /// <summary>Field number for the "think_interval" field.</summary>
    public const int ThinkIntervalFieldNumber = 8;
    private int thinkInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThinkInterval {
      get { return thinkInterval_; }
      set {
        thinkInterval_ = value;
      }
    }

    /// <summary>Field number for the "idle_a_i_path" field.</summary>
    public const int IdleAIPathFieldNumber = 9;
    private string idleAIPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IdleAIPath {
      get { return idleAIPath_; }
      set {
        idleAIPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spawn_a_i_path" field.</summary>
    public const int SpawnAIPathFieldNumber = 10;
    private string spawnAIPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpawnAIPath {
      get { return spawnAIPath_; }
      set {
        spawnAIPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parallel_a_i_path" field.</summary>
    public const int ParallelAIPathFieldNumber = 11;
    private string parallelAIPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ParallelAIPath {
      get { return parallelAIPath_; }
      set {
        parallelAIPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "check_achievement" field.</summary>
    public const int CheckAchievementFieldNumber = 12;
    private bool checkAchievement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CheckAchievement {
      get { return checkAchievement_; }
      set {
        checkAchievement_ = value;
      }
    }

    /// <summary>Field number for the "wander_range" field.</summary>
    public const int WanderRangeFieldNumber = 13;
    private int wanderRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WanderRange {
      get { return wanderRange_; }
      set {
        wanderRange_ = value;
      }
    }

    /// <summary>Field number for the "wander_interval" field.</summary>
    public const int WanderIntervalFieldNumber = 14;
    private int wanderInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WanderInterval {
      get { return wanderInterval_; }
      set {
        wanderInterval_ = value;
      }
    }

    /// <summary>Field number for the "wander_rate" field.</summary>
    public const int WanderRateFieldNumber = 15;
    private int wanderRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WanderRate {
      get { return wanderRate_; }
      set {
        wanderRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MonsterAI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MonsterAI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ComboGroupPath != other.ComboGroupPath) return false;
      if (SpawnShowSkillId != other.SpawnShowSkillId) return false;
      if (IdleShowSkillId != other.IdleShowSkillId) return false;
      if (DieSkillId != other.DieSkillId) return false;
      if (ActionAIPath != other.ActionAIPath) return false;
      if(!actionBranchIds_.Equals(other.actionBranchIds_)) return false;
      if (ThinkInterval != other.ThinkInterval) return false;
      if (IdleAIPath != other.IdleAIPath) return false;
      if (SpawnAIPath != other.SpawnAIPath) return false;
      if (ParallelAIPath != other.ParallelAIPath) return false;
      if (CheckAchievement != other.CheckAchievement) return false;
      if (WanderRange != other.WanderRange) return false;
      if (WanderInterval != other.WanderInterval) return false;
      if (WanderRate != other.WanderRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ComboGroupPath.Length != 0) hash ^= ComboGroupPath.GetHashCode();
      if (SpawnShowSkillId != 0) hash ^= SpawnShowSkillId.GetHashCode();
      if (IdleShowSkillId != 0) hash ^= IdleShowSkillId.GetHashCode();
      if (DieSkillId != 0) hash ^= DieSkillId.GetHashCode();
      if (ActionAIPath.Length != 0) hash ^= ActionAIPath.GetHashCode();
      hash ^= actionBranchIds_.GetHashCode();
      if (ThinkInterval != 0) hash ^= ThinkInterval.GetHashCode();
      if (IdleAIPath.Length != 0) hash ^= IdleAIPath.GetHashCode();
      if (SpawnAIPath.Length != 0) hash ^= SpawnAIPath.GetHashCode();
      if (ParallelAIPath.Length != 0) hash ^= ParallelAIPath.GetHashCode();
      if (CheckAchievement != false) hash ^= CheckAchievement.GetHashCode();
      if (WanderRange != 0) hash ^= WanderRange.GetHashCode();
      if (WanderInterval != 0) hash ^= WanderInterval.GetHashCode();
      if (WanderRate != 0) hash ^= WanderRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ComboGroupPath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ComboGroupPath);
      }
      if (SpawnShowSkillId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SpawnShowSkillId);
      }
      if (IdleShowSkillId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IdleShowSkillId);
      }
      if (DieSkillId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DieSkillId);
      }
      if (ActionAIPath.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ActionAIPath);
      }
      actionBranchIds_.WriteTo(output, _repeated_actionBranchIds_codec);
      if (ThinkInterval != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ThinkInterval);
      }
      if (IdleAIPath.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(IdleAIPath);
      }
      if (SpawnAIPath.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SpawnAIPath);
      }
      if (ParallelAIPath.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ParallelAIPath);
      }
      if (CheckAchievement != false) {
        output.WriteRawTag(96);
        output.WriteBool(CheckAchievement);
      }
      if (WanderRange != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(WanderRange);
      }
      if (WanderInterval != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(WanderInterval);
      }
      if (WanderRate != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(WanderRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ComboGroupPath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ComboGroupPath);
      }
      if (SpawnShowSkillId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SpawnShowSkillId);
      }
      if (IdleShowSkillId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IdleShowSkillId);
      }
      if (DieSkillId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DieSkillId);
      }
      if (ActionAIPath.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ActionAIPath);
      }
      actionBranchIds_.WriteTo(ref output, _repeated_actionBranchIds_codec);
      if (ThinkInterval != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ThinkInterval);
      }
      if (IdleAIPath.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(IdleAIPath);
      }
      if (SpawnAIPath.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SpawnAIPath);
      }
      if (ParallelAIPath.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ParallelAIPath);
      }
      if (CheckAchievement != false) {
        output.WriteRawTag(96);
        output.WriteBool(CheckAchievement);
      }
      if (WanderRange != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(WanderRange);
      }
      if (WanderInterval != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(WanderInterval);
      }
      if (WanderRate != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(WanderRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ComboGroupPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComboGroupPath);
      }
      if (SpawnShowSkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpawnShowSkillId);
      }
      if (IdleShowSkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdleShowSkillId);
      }
      if (DieSkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DieSkillId);
      }
      if (ActionAIPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionAIPath);
      }
      size += actionBranchIds_.CalculateSize(_repeated_actionBranchIds_codec);
      if (ThinkInterval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThinkInterval);
      }
      if (IdleAIPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdleAIPath);
      }
      if (SpawnAIPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpawnAIPath);
      }
      if (ParallelAIPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParallelAIPath);
      }
      if (CheckAchievement != false) {
        size += 1 + 1;
      }
      if (WanderRange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WanderRange);
      }
      if (WanderInterval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WanderInterval);
      }
      if (WanderRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WanderRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MonsterAI other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ComboGroupPath.Length != 0) {
        ComboGroupPath = other.ComboGroupPath;
      }
      if (other.SpawnShowSkillId != 0) {
        SpawnShowSkillId = other.SpawnShowSkillId;
      }
      if (other.IdleShowSkillId != 0) {
        IdleShowSkillId = other.IdleShowSkillId;
      }
      if (other.DieSkillId != 0) {
        DieSkillId = other.DieSkillId;
      }
      if (other.ActionAIPath.Length != 0) {
        ActionAIPath = other.ActionAIPath;
      }
      actionBranchIds_.Add(other.actionBranchIds_);
      if (other.ThinkInterval != 0) {
        ThinkInterval = other.ThinkInterval;
      }
      if (other.IdleAIPath.Length != 0) {
        IdleAIPath = other.IdleAIPath;
      }
      if (other.SpawnAIPath.Length != 0) {
        SpawnAIPath = other.SpawnAIPath;
      }
      if (other.ParallelAIPath.Length != 0) {
        ParallelAIPath = other.ParallelAIPath;
      }
      if (other.CheckAchievement != false) {
        CheckAchievement = other.CheckAchievement;
      }
      if (other.WanderRange != 0) {
        WanderRange = other.WanderRange;
      }
      if (other.WanderInterval != 0) {
        WanderInterval = other.WanderInterval;
      }
      if (other.WanderRate != 0) {
        WanderRate = other.WanderRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            ComboGroupPath = input.ReadString();
            break;
          }
          case 24: {
            SpawnShowSkillId = input.ReadInt32();
            break;
          }
          case 32: {
            IdleShowSkillId = input.ReadInt32();
            break;
          }
          case 40: {
            DieSkillId = input.ReadInt32();
            break;
          }
          case 50: {
            ActionAIPath = input.ReadString();
            break;
          }
          case 58:
          case 56: {
            actionBranchIds_.AddEntriesFrom(input, _repeated_actionBranchIds_codec);
            break;
          }
          case 64: {
            ThinkInterval = input.ReadInt32();
            break;
          }
          case 74: {
            IdleAIPath = input.ReadString();
            break;
          }
          case 82: {
            SpawnAIPath = input.ReadString();
            break;
          }
          case 90: {
            ParallelAIPath = input.ReadString();
            break;
          }
          case 96: {
            CheckAchievement = input.ReadBool();
            break;
          }
          case 104: {
            WanderRange = input.ReadInt32();
            break;
          }
          case 112: {
            WanderInterval = input.ReadInt32();
            break;
          }
          case 120: {
            WanderRate = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            ComboGroupPath = input.ReadString();
            break;
          }
          case 24: {
            SpawnShowSkillId = input.ReadInt32();
            break;
          }
          case 32: {
            IdleShowSkillId = input.ReadInt32();
            break;
          }
          case 40: {
            DieSkillId = input.ReadInt32();
            break;
          }
          case 50: {
            ActionAIPath = input.ReadString();
            break;
          }
          case 58:
          case 56: {
            actionBranchIds_.AddEntriesFrom(ref input, _repeated_actionBranchIds_codec);
            break;
          }
          case 64: {
            ThinkInterval = input.ReadInt32();
            break;
          }
          case 74: {
            IdleAIPath = input.ReadString();
            break;
          }
          case 82: {
            SpawnAIPath = input.ReadString();
            break;
          }
          case 90: {
            ParallelAIPath = input.ReadString();
            break;
          }
          case 96: {
            CheckAchievement = input.ReadBool();
            break;
          }
          case 104: {
            WanderRange = input.ReadInt32();
            break;
          }
          case 112: {
            WanderInterval = input.ReadInt32();
            break;
          }
          case 120: {
            WanderRate = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
