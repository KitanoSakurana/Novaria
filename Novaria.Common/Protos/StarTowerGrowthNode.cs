// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: StarTowerGrowthNode.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from StarTowerGrowthNode.proto</summary>
  public static partial class StarTowerGrowthNodeReflection {

    #region Descriptor
    /// <summary>File descriptor for StarTowerGrowthNode.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StarTowerGrowthNodeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlTdGFyVG93ZXJHcm93dGhOb2RlLnByb3RvIoIDChNTdGFyVG93ZXJHcm93",
            "dGhOb2RlEgoKAmlkGAEgASgFEg8KB25vZGVfaWQYAiABKAUSDQoFZ3JvdXAY",
            "AyABKAUSDAoEbmFtZRgEIAEoCRIRCglpc19zZXJ2ZXIYBSABKAgSEQoJaXNf",
            "Y2xpZW50GAYgASgIEgwKBHR5cGUYByABKAUSDQoFY29sb3IYCCABKAUSEQoJ",
            "cHJlX25vZGVzGAkgAygFEhUKDWVmZmVjdF9jbGllbnQYCiABKAUSFQoNY2xp",
            "ZW50X3BhcmFtcxgLIAEoCRIQCghwcmlvcml0eRgMIAEoBRIMCgRpY29uGA0g",
            "ASgJEhAKCHBvc2l0aW9uGA4gAygFEgwKBGRlc2MYDyABKAkSEAoIaXRlbV9p",
            "ZDEYECABKAUSEQoJaXRlbV9xdHkxGBEgASgFEhAKCGl0ZW1faWQyGBIgASgF",
            "EhEKCWl0ZW1fcXR5MhgTIAEoBRIQCghpdGVtX2lkMxgUIAEoBRIRCglpdGVt",
            "X3F0eTMYFSABKAVCDqoCC05vdmEuQ2xpZW50YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.StarTowerGrowthNode), global::Nova.Client.StarTowerGrowthNode.Parser, new[]{ "Id", "NodeId", "Group", "Name", "IsServer", "IsClient", "Type", "Color", "PreNodes", "EffectClient", "ClientParams", "Priority", "Icon", "Position", "Desc", "ItemId1", "ItemQty1", "ItemId2", "ItemQty2", "ItemId3", "ItemQty3" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StarTowerGrowthNode : pb::IMessage<StarTowerGrowthNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StarTowerGrowthNode> _parser = new pb::MessageParser<StarTowerGrowthNode>(() => new StarTowerGrowthNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StarTowerGrowthNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.StarTowerGrowthNodeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StarTowerGrowthNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StarTowerGrowthNode(StarTowerGrowthNode other) : this() {
      id_ = other.id_;
      nodeId_ = other.nodeId_;
      group_ = other.group_;
      name_ = other.name_;
      isServer_ = other.isServer_;
      isClient_ = other.isClient_;
      type_ = other.type_;
      color_ = other.color_;
      preNodes_ = other.preNodes_.Clone();
      effectClient_ = other.effectClient_;
      clientParams_ = other.clientParams_;
      priority_ = other.priority_;
      icon_ = other.icon_;
      position_ = other.position_.Clone();
      desc_ = other.desc_;
      itemId1_ = other.itemId1_;
      itemQty1_ = other.itemQty1_;
      itemId2_ = other.itemId2_;
      itemQty2_ = other.itemQty2_;
      itemId3_ = other.itemId3_;
      itemQty3_ = other.itemQty3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StarTowerGrowthNode Clone() {
      return new StarTowerGrowthNode(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 2;
    private int nodeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = value;
      }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 3;
    private int group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_server" field.</summary>
    public const int IsServerFieldNumber = 5;
    private bool isServer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsServer {
      get { return isServer_; }
      set {
        isServer_ = value;
      }
    }

    /// <summary>Field number for the "is_client" field.</summary>
    public const int IsClientFieldNumber = 6;
    private bool isClient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsClient {
      get { return isClient_; }
      set {
        isClient_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 7;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 8;
    private int color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "pre_nodes" field.</summary>
    public const int PreNodesFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_preNodes_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> preNodes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> PreNodes {
      get { return preNodes_; }
    }

    /// <summary>Field number for the "effect_client" field.</summary>
    public const int EffectClientFieldNumber = 10;
    private int effectClient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectClient {
      get { return effectClient_; }
      set {
        effectClient_ = value;
      }
    }

    /// <summary>Field number for the "client_params" field.</summary>
    public const int ClientParamsFieldNumber = 11;
    private string clientParams_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientParams {
      get { return clientParams_; }
      set {
        clientParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 12;
    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 13;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 14;
    private static readonly pb::FieldCodec<int> _repeated_position_codec
        = pb::FieldCodec.ForInt32(114);
    private readonly pbc::RepeatedField<int> position_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Position {
      get { return position_; }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 15;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item_id1" field.</summary>
    public const int ItemId1FieldNumber = 16;
    private int itemId1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemId1 {
      get { return itemId1_; }
      set {
        itemId1_ = value;
      }
    }

    /// <summary>Field number for the "item_qty1" field.</summary>
    public const int ItemQty1FieldNumber = 17;
    private int itemQty1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemQty1 {
      get { return itemQty1_; }
      set {
        itemQty1_ = value;
      }
    }

    /// <summary>Field number for the "item_id2" field.</summary>
    public const int ItemId2FieldNumber = 18;
    private int itemId2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemId2 {
      get { return itemId2_; }
      set {
        itemId2_ = value;
      }
    }

    /// <summary>Field number for the "item_qty2" field.</summary>
    public const int ItemQty2FieldNumber = 19;
    private int itemQty2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemQty2 {
      get { return itemQty2_; }
      set {
        itemQty2_ = value;
      }
    }

    /// <summary>Field number for the "item_id3" field.</summary>
    public const int ItemId3FieldNumber = 20;
    private int itemId3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemId3 {
      get { return itemId3_; }
      set {
        itemId3_ = value;
      }
    }

    /// <summary>Field number for the "item_qty3" field.</summary>
    public const int ItemQty3FieldNumber = 21;
    private int itemQty3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemQty3 {
      get { return itemQty3_; }
      set {
        itemQty3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StarTowerGrowthNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StarTowerGrowthNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (NodeId != other.NodeId) return false;
      if (Group != other.Group) return false;
      if (Name != other.Name) return false;
      if (IsServer != other.IsServer) return false;
      if (IsClient != other.IsClient) return false;
      if (Type != other.Type) return false;
      if (Color != other.Color) return false;
      if(!preNodes_.Equals(other.preNodes_)) return false;
      if (EffectClient != other.EffectClient) return false;
      if (ClientParams != other.ClientParams) return false;
      if (Priority != other.Priority) return false;
      if (Icon != other.Icon) return false;
      if(!position_.Equals(other.position_)) return false;
      if (Desc != other.Desc) return false;
      if (ItemId1 != other.ItemId1) return false;
      if (ItemQty1 != other.ItemQty1) return false;
      if (ItemId2 != other.ItemId2) return false;
      if (ItemQty2 != other.ItemQty2) return false;
      if (ItemId3 != other.ItemId3) return false;
      if (ItemQty3 != other.ItemQty3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (NodeId != 0) hash ^= NodeId.GetHashCode();
      if (Group != 0) hash ^= Group.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (IsServer != false) hash ^= IsServer.GetHashCode();
      if (IsClient != false) hash ^= IsClient.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Color != 0) hash ^= Color.GetHashCode();
      hash ^= preNodes_.GetHashCode();
      if (EffectClient != 0) hash ^= EffectClient.GetHashCode();
      if (ClientParams.Length != 0) hash ^= ClientParams.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      hash ^= position_.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (ItemId1 != 0) hash ^= ItemId1.GetHashCode();
      if (ItemQty1 != 0) hash ^= ItemQty1.GetHashCode();
      if (ItemId2 != 0) hash ^= ItemId2.GetHashCode();
      if (ItemQty2 != 0) hash ^= ItemQty2.GetHashCode();
      if (ItemId3 != 0) hash ^= ItemId3.GetHashCode();
      if (ItemQty3 != 0) hash ^= ItemQty3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (NodeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NodeId);
      }
      if (Group != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Group);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (IsServer != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsServer);
      }
      if (IsClient != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsClient);
      }
      if (Type != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Type);
      }
      if (Color != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Color);
      }
      preNodes_.WriteTo(output, _repeated_preNodes_codec);
      if (EffectClient != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EffectClient);
      }
      if (ClientParams.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ClientParams);
      }
      if (Priority != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Priority);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Icon);
      }
      position_.WriteTo(output, _repeated_position_codec);
      if (Desc.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Desc);
      }
      if (ItemId1 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(ItemId1);
      }
      if (ItemQty1 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(ItemQty1);
      }
      if (ItemId2 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ItemId2);
      }
      if (ItemQty2 != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ItemQty2);
      }
      if (ItemId3 != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ItemId3);
      }
      if (ItemQty3 != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(ItemQty3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (NodeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NodeId);
      }
      if (Group != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Group);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (IsServer != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsServer);
      }
      if (IsClient != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsClient);
      }
      if (Type != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Type);
      }
      if (Color != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Color);
      }
      preNodes_.WriteTo(ref output, _repeated_preNodes_codec);
      if (EffectClient != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EffectClient);
      }
      if (ClientParams.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ClientParams);
      }
      if (Priority != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Priority);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Icon);
      }
      position_.WriteTo(ref output, _repeated_position_codec);
      if (Desc.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Desc);
      }
      if (ItemId1 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(ItemId1);
      }
      if (ItemQty1 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(ItemQty1);
      }
      if (ItemId2 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ItemId2);
      }
      if (ItemQty2 != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ItemQty2);
      }
      if (ItemId3 != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ItemId3);
      }
      if (ItemQty3 != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(ItemQty3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (NodeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeId);
      }
      if (Group != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Group);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (IsServer != false) {
        size += 1 + 1;
      }
      if (IsClient != false) {
        size += 1 + 1;
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Color != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Color);
      }
      size += preNodes_.CalculateSize(_repeated_preNodes_codec);
      if (EffectClient != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectClient);
      }
      if (ClientParams.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientParams);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      size += position_.CalculateSize(_repeated_position_codec);
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (ItemId1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ItemId1);
      }
      if (ItemQty1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ItemQty1);
      }
      if (ItemId2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ItemId2);
      }
      if (ItemQty2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ItemQty2);
      }
      if (ItemId3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ItemId3);
      }
      if (ItemQty3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ItemQty3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StarTowerGrowthNode other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.NodeId != 0) {
        NodeId = other.NodeId;
      }
      if (other.Group != 0) {
        Group = other.Group;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.IsServer != false) {
        IsServer = other.IsServer;
      }
      if (other.IsClient != false) {
        IsClient = other.IsClient;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Color != 0) {
        Color = other.Color;
      }
      preNodes_.Add(other.preNodes_);
      if (other.EffectClient != 0) {
        EffectClient = other.EffectClient;
      }
      if (other.ClientParams.Length != 0) {
        ClientParams = other.ClientParams;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      position_.Add(other.position_);
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.ItemId1 != 0) {
        ItemId1 = other.ItemId1;
      }
      if (other.ItemQty1 != 0) {
        ItemQty1 = other.ItemQty1;
      }
      if (other.ItemId2 != 0) {
        ItemId2 = other.ItemId2;
      }
      if (other.ItemQty2 != 0) {
        ItemQty2 = other.ItemQty2;
      }
      if (other.ItemId3 != 0) {
        ItemId3 = other.ItemId3;
      }
      if (other.ItemQty3 != 0) {
        ItemQty3 = other.ItemQty3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            NodeId = input.ReadInt32();
            break;
          }
          case 24: {
            Group = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            IsServer = input.ReadBool();
            break;
          }
          case 48: {
            IsClient = input.ReadBool();
            break;
          }
          case 56: {
            Type = input.ReadInt32();
            break;
          }
          case 64: {
            Color = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            preNodes_.AddEntriesFrom(input, _repeated_preNodes_codec);
            break;
          }
          case 80: {
            EffectClient = input.ReadInt32();
            break;
          }
          case 90: {
            ClientParams = input.ReadString();
            break;
          }
          case 96: {
            Priority = input.ReadInt32();
            break;
          }
          case 106: {
            Icon = input.ReadString();
            break;
          }
          case 114:
          case 112: {
            position_.AddEntriesFrom(input, _repeated_position_codec);
            break;
          }
          case 122: {
            Desc = input.ReadString();
            break;
          }
          case 128: {
            ItemId1 = input.ReadInt32();
            break;
          }
          case 136: {
            ItemQty1 = input.ReadInt32();
            break;
          }
          case 144: {
            ItemId2 = input.ReadInt32();
            break;
          }
          case 152: {
            ItemQty2 = input.ReadInt32();
            break;
          }
          case 160: {
            ItemId3 = input.ReadInt32();
            break;
          }
          case 168: {
            ItemQty3 = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            NodeId = input.ReadInt32();
            break;
          }
          case 24: {
            Group = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            IsServer = input.ReadBool();
            break;
          }
          case 48: {
            IsClient = input.ReadBool();
            break;
          }
          case 56: {
            Type = input.ReadInt32();
            break;
          }
          case 64: {
            Color = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            preNodes_.AddEntriesFrom(ref input, _repeated_preNodes_codec);
            break;
          }
          case 80: {
            EffectClient = input.ReadInt32();
            break;
          }
          case 90: {
            ClientParams = input.ReadString();
            break;
          }
          case 96: {
            Priority = input.ReadInt32();
            break;
          }
          case 106: {
            Icon = input.ReadString();
            break;
          }
          case 114:
          case 112: {
            position_.AddEntriesFrom(ref input, _repeated_position_codec);
            break;
          }
          case 122: {
            Desc = input.ReadString();
            break;
          }
          case 128: {
            ItemId1 = input.ReadInt32();
            break;
          }
          case 136: {
            ItemQty1 = input.ReadInt32();
            break;
          }
          case 144: {
            ItemId2 = input.ReadInt32();
            break;
          }
          case 152: {
            ItemQty2 = input.ReadInt32();
            break;
          }
          case 160: {
            ItemId3 = input.ReadInt32();
            break;
          }
          case 168: {
            ItemQty3 = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
