// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: EffectDesc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nova.Client {

  /// <summary>Holder for reflection information generated from EffectDesc.proto</summary>
  public static partial class EffectDescReflection {

    #region Descriptor
    /// <summary>File descriptor for EffectDesc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EffectDescReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBFZmZlY3REZXNjLnByb3RvIrwBCgpFZmZlY3REZXNjEgoKAmlkGAEgASgF",
            "EhAKCHR5cGVfaV9kGAIgASgFEhEKCXR5cGUyX2lfZBgDIAEoBRIMCgRkZXNj",
            "GAQgASgJEhgKEHJhbmRvbV9hdHRyX2Rlc2MYBSABKAkSEQoJYXR0cmlidXRl",
            "GAYgASgJEhAKCHdvcmRfaV9kGAcgASgFEhIKCmlzX3BlcmNlbnQYCCABKAgS",
            "DAoEaWNvbhgJIAEoCRIOCgZmb3JtYXQYCiABKAVCDqoCC05vdmEuQ2xpZW50",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nova.Client.EffectDesc), global::Nova.Client.EffectDesc.Parser, new[]{ "Id", "TypeID", "Type2ID", "Desc", "RandomAttrDesc", "Attribute", "WordID", "IsPercent", "Icon", "Format" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EffectDesc : pb::IMessage<EffectDesc>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EffectDesc> _parser = new pb::MessageParser<EffectDesc>(() => new EffectDesc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EffectDesc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nova.Client.EffectDescReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EffectDesc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EffectDesc(EffectDesc other) : this() {
      id_ = other.id_;
      typeID_ = other.typeID_;
      type2ID_ = other.type2ID_;
      desc_ = other.desc_;
      randomAttrDesc_ = other.randomAttrDesc_;
      attribute_ = other.attribute_;
      wordID_ = other.wordID_;
      isPercent_ = other.isPercent_;
      icon_ = other.icon_;
      format_ = other.format_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EffectDesc Clone() {
      return new EffectDesc(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type_i_d" field.</summary>
    public const int TypeIDFieldNumber = 2;
    private int typeID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TypeID {
      get { return typeID_; }
      set {
        typeID_ = value;
      }
    }

    /// <summary>Field number for the "type2_i_d" field.</summary>
    public const int Type2IDFieldNumber = 3;
    private int type2ID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type2ID {
      get { return type2ID_; }
      set {
        type2ID_ = value;
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 4;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "random_attr_desc" field.</summary>
    public const int RandomAttrDescFieldNumber = 5;
    private string randomAttrDesc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RandomAttrDesc {
      get { return randomAttrDesc_; }
      set {
        randomAttrDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 6;
    private string attribute_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Attribute {
      get { return attribute_; }
      set {
        attribute_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "word_i_d" field.</summary>
    public const int WordIDFieldNumber = 7;
    private int wordID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WordID {
      get { return wordID_; }
      set {
        wordID_ = value;
      }
    }

    /// <summary>Field number for the "is_percent" field.</summary>
    public const int IsPercentFieldNumber = 8;
    private bool isPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPercent {
      get { return isPercent_; }
      set {
        isPercent_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 9;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 10;
    private int format_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Format {
      get { return format_; }
      set {
        format_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EffectDesc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EffectDesc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TypeID != other.TypeID) return false;
      if (Type2ID != other.Type2ID) return false;
      if (Desc != other.Desc) return false;
      if (RandomAttrDesc != other.RandomAttrDesc) return false;
      if (Attribute != other.Attribute) return false;
      if (WordID != other.WordID) return false;
      if (IsPercent != other.IsPercent) return false;
      if (Icon != other.Icon) return false;
      if (Format != other.Format) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (TypeID != 0) hash ^= TypeID.GetHashCode();
      if (Type2ID != 0) hash ^= Type2ID.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (RandomAttrDesc.Length != 0) hash ^= RandomAttrDesc.GetHashCode();
      if (Attribute.Length != 0) hash ^= Attribute.GetHashCode();
      if (WordID != 0) hash ^= WordID.GetHashCode();
      if (IsPercent != false) hash ^= IsPercent.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Format != 0) hash ^= Format.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TypeID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TypeID);
      }
      if (Type2ID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type2ID);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Desc);
      }
      if (RandomAttrDesc.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RandomAttrDesc);
      }
      if (Attribute.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Attribute);
      }
      if (WordID != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(WordID);
      }
      if (IsPercent != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsPercent);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Icon);
      }
      if (Format != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Format);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TypeID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TypeID);
      }
      if (Type2ID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type2ID);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Desc);
      }
      if (RandomAttrDesc.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RandomAttrDesc);
      }
      if (Attribute.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Attribute);
      }
      if (WordID != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(WordID);
      }
      if (IsPercent != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsPercent);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Icon);
      }
      if (Format != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Format);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (TypeID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TypeID);
      }
      if (Type2ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type2ID);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (RandomAttrDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RandomAttrDesc);
      }
      if (Attribute.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Attribute);
      }
      if (WordID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WordID);
      }
      if (IsPercent != false) {
        size += 1 + 1;
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Format != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Format);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EffectDesc other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.TypeID != 0) {
        TypeID = other.TypeID;
      }
      if (other.Type2ID != 0) {
        Type2ID = other.Type2ID;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.RandomAttrDesc.Length != 0) {
        RandomAttrDesc = other.RandomAttrDesc;
      }
      if (other.Attribute.Length != 0) {
        Attribute = other.Attribute;
      }
      if (other.WordID != 0) {
        WordID = other.WordID;
      }
      if (other.IsPercent != false) {
        IsPercent = other.IsPercent;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Format != 0) {
        Format = other.Format;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TypeID = input.ReadInt32();
            break;
          }
          case 24: {
            Type2ID = input.ReadInt32();
            break;
          }
          case 34: {
            Desc = input.ReadString();
            break;
          }
          case 42: {
            RandomAttrDesc = input.ReadString();
            break;
          }
          case 50: {
            Attribute = input.ReadString();
            break;
          }
          case 56: {
            WordID = input.ReadInt32();
            break;
          }
          case 64: {
            IsPercent = input.ReadBool();
            break;
          }
          case 74: {
            Icon = input.ReadString();
            break;
          }
          case 80: {
            Format = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TypeID = input.ReadInt32();
            break;
          }
          case 24: {
            Type2ID = input.ReadInt32();
            break;
          }
          case 34: {
            Desc = input.ReadString();
            break;
          }
          case 42: {
            RandomAttrDesc = input.ReadString();
            break;
          }
          case 50: {
            Attribute = input.ReadString();
            break;
          }
          case 56: {
            WordID = input.ReadInt32();
            break;
          }
          case 64: {
            IsPercent = input.ReadBool();
            break;
          }
          case 74: {
            Icon = input.ReadString();
            break;
          }
          case 80: {
            Format = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
